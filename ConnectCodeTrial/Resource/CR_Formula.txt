'Copyright 2006-2012 ConnectCode Pte Ltd. All Rights Reserved.
'This source code is protected by Copyright Laws. You are only allowed to modify
'and include the source in your application if you have purchased a Distribution License.
'===================================================================================
' ConnectCode Barcode Formulas for Crystal Report 
'
' Version 8.5 - 17 April 2012
'
' The formulas in this file can be used for creating barcodes in Crystal Report.
'
'
' Usage :
' 1) Go to the Field Explorer in Crystal Report and create a new formula. 
' 2) Give the new formula a name (e.g barcode39)
' 3) Copy the formula for the barcode that you intend to use from this file
'    to the Crystal Report's Formula Editor.  For example, if you want to use Code39,
'    copy the Encode_Code39 formula below and paste it to the Formula Editor.
' 4) Set the syntax of the formula to 'Basic Syntax'
' 5) Modify the 'data = "12345678' statement so that it connects to your data source.
'    For example, change the statement to data  = { Employee.Name }
' 6) Save the formula and drag it to your report to create a formula field
' 7) Set the font of the formula field to the appropriate barcode font 
'    For example, for Code 39, the font can be CCode39_S2 or CCode39_S3  
'
'====================================================================================
'
' The Formulas available in this file are :
'
' Encode_Code39
' Encode_EAN8
' Encode_EAN13
' Encode_EXT2
' Encode_EXT5
' Encode_UPCA
' Encode_UPCE
' Encode_Code128A
' Encode_Code128B
' Encode_Code128C
' Encode_I2of5
' Encode_Code39ASCII
' Encode_Code128Auto
' Encode_ITF14
' Encode_UCCEAN
' Encode_Industrial2of5
' Encode_ModifiedPlessy
' Encode_Code93
' Encode_CodeCodabar
' Encode_POSTNET
' Encode_GS1Databar14
' Encode_GS1DatabarLimited
' SSCC
' GTIN
' MOD_10

' ===================================================================================
'Encode_Code39

  Dim data as string  
  Dim chk as number  

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set chk to 0 if you do not want a check digit
  chk = 1

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number

  

  Dim CODE39MAP() As Number
  CODE39MAP = Array(Asc("0"), Asc("1"), Asc("2"), Asc("3"), Asc("4"), Asc("5"), Asc("6"), Asc("7"), Asc("8"), Asc("9"), Asc("A"), Asc("B"), Asc("C"), Asc("D"), Asc("E"), Asc("F"), Asc("G"), Asc("H"), Asc("I"), Asc("J"), Asc("K"), Asc("L"), Asc("M"), Asc("N"), Asc("O"), Asc("P"), Asc("Q"), Asc("R"), Asc("S"), Asc("T"), Asc("U"), Asc("V"), Asc("W"), Asc("X"), Asc("Y"), Asc("Z"), Asc("-"), Asc("."), Asc(" "), Asc("$"), Asc("/"), Asc("+"), Asc("%"))
   
  Dim x as number  
  Dim z as number  
  Dim RVal As Number
  Dim getCode39Value as Number
  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        
        barcodevalue = AscW(barcodechar)
        RVal = -1
        getCode39Value = -1
        For z = 1 To 43
            If CODE39MAP(z) = barcodevalue Then
               RVal = (z-1) '1 based array  
            End If
        Next z    
        getCode39Value = RVal

       If getCode39Value <> -1 Then
            Result = Result + barcodechar
       End If
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)  

  'Encoding
  If chk = 1 Then
    
        If filteredlength > 254 Then
            filtereddata = Left(filtereddata, 254)            
        End If


       filteredlength = Len(filtereddata)  

       'Check Digit  
        Dim  Sumx as number  
        Dim  ResultVal  as number   
        Dim cd as string    
  
        Sumx = 0   
        For x = 1 To filteredlength
                barcodechar = Mid(filtereddata, x, 1)

                barcodevalue = AscW(barcodechar)
                RVal = -1
                getCode39Value = 0
                For z = 1 To 43
                    If CODE39MAP(z) = barcodevalue Then
                       RVal = (z-1) '1 based array
                    End If
                Next z    
                getCode39Value = RVal
        
                Sumx = Sumx + getCode39Value
        
        Next x
  
        ResultVal = Sumx Mod 43  

        cd = ChrW(CODE39MAP(ResultVal+1))  



  Else
    
        If filteredlength > 255 Then
            filtereddata = Left(filtereddata, 255)            
        End If
        cd = ""    
  End If


  Result = "*" + filtereddata + cd + "*"
  formula = Result



'===============================================================
'Encode_EAN8

  Dim data as string    

  'Replace "12345678" with your data field here  
  data = "12345678"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parity as number  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)
  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as String
  Dim addcharlength as number

  transformdataleft = ""
  transformdataright = ""

  If filteredlength > 7 Then
        filtereddata = Left(filtereddata, 7)
  End If

  If filteredlength < 7 Then    
      addcharlength = 7 - Len(filtereddata)
      For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata
      Next x
    
  End If


  'Check Digit  
  filteredlength = Len(filtereddata)
  Dim  Sumx as number  
  Dim  ResultVal  as number   
  Dim cd as string    
  
  Sumx = 0   
  For x = 1 To filteredlength   
     barcodechar = Mid(filtereddata, x, 1)   
     barcodevalue = (AscW(barcodechar) - 48)

    If parity = 0 Then 'odd    
        Sumx = Sumx + (3 * barcodevalue)
        parity = 1    
    Else
        Sumx = Sumx + barcodevalue
        parity = 0
    End If        
  Next x  
  
  ResultVal = Sumx Mod 10
  If ResultVal = 0 Then
    ResultVal = 0
  Else
    ResultVal = 10 - ResultVal
  End If

  cd = Chr(ResultVal + AscW("0"))


  filtereddata = filtereddata + cd
  filteredlength = Len(filtereddata)

  For x = 0 To 4 - 1
       transformdataleft = transformdataleft + Mid(filtereddata, x + 1, 1) 
  Next x

  transformchar = ""
  For x = 4 To 8 - 1    
        transformchar = Mid(filtereddata, x + 1, 1)
        transformchar = Chr(AscW(transformchar) + 49)
        transformdataright = transformdataright + transformchar    
   Next x

  Result = "[" + transformdataleft + "-" + transformdataright + "]"
  formula = Result


'===============================================================
'Encode_EAN13

  Dim data as string   
  Dim  hr as number   

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set hr to 0 or 1
  hr = 0


  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parity as number  

  Dim EAN13PARITYMAP(60) As Number  'Dimension (10,6)
    
  EAN13PARITYMAP(0*6+ 0+1) = 0
  EAN13PARITYMAP(0*6+ 1+1) = 0
  EAN13PARITYMAP(0*6+ 2+1) = 0
  EAN13PARITYMAP(0*6+ 3+1) = 0
  EAN13PARITYMAP(0*6+ 4+1) = 0
  EAN13PARITYMAP(0*6+ 5+1) = 0
    
  EAN13PARITYMAP(1*6+ 0+1) = 0
  EAN13PARITYMAP(1*6+ 1+1) = 0
  EAN13PARITYMAP(1*6+ 2+1) = 1
  EAN13PARITYMAP(1*6+ 3+1) = 0
  EAN13PARITYMAP(1*6+ 4+1) = 1
  EAN13PARITYMAP(1*6+ 5+1) = 1
    
  EAN13PARITYMAP(2*6+ 0+1) = 0
  EAN13PARITYMAP(2*6+ 1+1) = 0
  EAN13PARITYMAP(2*6+ 2+1) = 1
  EAN13PARITYMAP(2*6+ 3+1) = 1
  EAN13PARITYMAP(2*6+ 4+1) = 0
  EAN13PARITYMAP(2*6+ 5+1) = 1
    
  EAN13PARITYMAP(3*6+ 0+1) = 0
  EAN13PARITYMAP(3*6+ 1+1) = 0
  EAN13PARITYMAP(3*6+ 2+1) = 1
  EAN13PARITYMAP(3*6+ 3+1) = 1
  EAN13PARITYMAP(3*6+ 4+1) = 1
  EAN13PARITYMAP(3*6+ 5+1) = 0
    
  EAN13PARITYMAP(4*6+ 0+1) = 0
  EAN13PARITYMAP(4*6+ 1+1) = 1
  EAN13PARITYMAP(4*6+ 2+1) = 0
  EAN13PARITYMAP(4*6+ 3+1) = 0
  EAN13PARITYMAP(4*6+ 4+1) = 1
  EAN13PARITYMAP(4*6+ 5+1) = 1
    
  EAN13PARITYMAP(5*6+ 0+1) = 0
  EAN13PARITYMAP(5*6+ 1+1) = 1
  EAN13PARITYMAP(5*6+ 2+1) = 1
  EAN13PARITYMAP(5*6+ 3+1) = 0
  EAN13PARITYMAP(5*6+ 4+1) = 0
  EAN13PARITYMAP(5*6+ 5+1) = 1
    
  EAN13PARITYMAP(6*6+ 0+1) = 0
  EAN13PARITYMAP(6*6+ 1+1) = 1
  EAN13PARITYMAP(6*6+ 2+1) = 1
  EAN13PARITYMAP(6*6+ 3+1) = 1
  EAN13PARITYMAP(6*6+ 4+1) = 0
  EAN13PARITYMAP(6*6+ 5+1) = 0
    
  EAN13PARITYMAP(7*6+ 0+1) = 0
  EAN13PARITYMAP(7*6+ 1+1) = 1
  EAN13PARITYMAP(7*6+ 2+1) = 0
  EAN13PARITYMAP(7*6+ 3+1) = 1
  EAN13PARITYMAP(7*6+ 4+1) = 0
  EAN13PARITYMAP(7*6+ 5+1) = 1
    
  EAN13PARITYMAP(8*6+ 0+1) = 0
  EAN13PARITYMAP(8*6+ 1+1) = 1
  EAN13PARITYMAP(8*6+ 2+1) = 0
  EAN13PARITYMAP(8*6+ 3+1) = 1
  EAN13PARITYMAP(8*6+ 4+1) = 1
  EAN13PARITYMAP(8*6+ 5+1) = 0
    
  EAN13PARITYMAP(9*6+ 0+1) = 0
  EAN13PARITYMAP(9*6+ 1+1) = 1
  EAN13PARITYMAP(9*6+ 2+1) = 1
  EAN13PARITYMAP(9*6+ 3+1) = 0
  EAN13PARITYMAP(9*6+ 4+1) = 1
  EAN13PARITYMAP(9*6+ 5+1) = 0

  
  
  Result = ""  
  datalength = Len(data)  
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)
  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as String
  Dim addcharlength as number
  Dim parityBit as number
  Dim firstdigit as number

  transformdataleft = ""
  transformdataright = ""

  If filteredlength > 12 Then
        filtereddata = Left(filtereddata, 12)
        
  End If

  If filteredlength < 12 Then
            
        addcharlength = 12 - Len(filtereddata)
        For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata
        Next x
    
  End If




  'Check Digit  
  filteredlength = Len(filtereddata)
  Dim  Sumx as number  
  Dim  ResultVal  as number   
  Dim cd as string    
  
  Sumx = 0   
  For x = filteredlength-1 to 0 Step -1
     barcodechar = Mid(filtereddata, x+1, 1)   
     barcodevalue = (AscW(barcodechar) - 48)

     If (x Mod 2) = 1 Then
        Sumx = Sumx + (3 * barcodevalue)
    
    Else
    
        Sumx = Sumx + barcodevalue
    End If
  Next x  
  
  ResultVal = Sumx Mod 10
  If ResultVal = 0 Then
    ResultVal = 0
  Else
    ResultVal = 10 - ResultVal
  End If

  cd = Chr(ResultVal + AscW("0"))

 
  filtereddata = filtereddata + cd
  filteredlength = Len(filtereddata)

  'Transformation
  parityBit = 0
  firstdigit = 0
  For x = 0 To 7 - 1        
        
        If x = 0 Then            
            firstdigit = AscW(Mid(filtereddata, x + 1, 1)) - AscW("0") 'First digit is used for parity
            
        Else
        
            parityBit = EAN13PARITYMAP(firstdigit*6+(x - 1) + 1)
            If parityBit = 0 Then 'odd
            
                transformdataleft = transformdataleft + Mid(filtereddata, x + 1, 1)
            Else                
                transformdataleft = transformdataleft + Chr(AscW(Mid(filtereddata, x + 1, 1)) + 49 + 14)
            End If
            
        End If
        
  Next x
    
  transformchar = ""
  For x = 7 To 13 - 1 'include check digit
    
        transformchar = Mid(filtereddata, x + 1, 1)
        transformchar = Chr(AscW(transformchar) + 49)
        transformdataright = transformdataright + transformchar
        
  Next x

  If hr = 1 Then
        Result = Chr(firstdigit + AscW("!")) + "[" + transformdataleft + "-" + transformdataright + "]"
  Else
        Result = "[" + transformdataleft + "-" + transformdataright + "]"
  End If


  formula = Result


'===============================================================
'Encode_EXT2

  Dim data as string    

  'Replace "12" with your data field here  
  data = "12"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parityBit as number  

  Dim EXT2PARITYMAP(8) As Number
  EXT2PARITYMAP(1) = 0
  EXT2PARITYMAP(2) = 0    
  EXT2PARITYMAP(3) = 0
  EXT2PARITYMAP(4) = 1    
  EXT2PARITYMAP(5) = 1
  EXT2PARITYMAP(6) = 0    
  EXT2PARITYMAP(7) = 1
  EXT2PARITYMAP(8) = 1
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as String
  Dim addcharlength as number

  transformdataleft = ""
  transformdataright = ""

  If filteredlength > 2 Then
        filtereddata = Left(filtereddata, 2)
  End If

  If filteredlength < 2 Then    
        addcharlength = 2 - Len(filtereddata)
        For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata 
        Next x    
  End If

  filteredlength = Len(filtereddata)


 'Transformation
  Dim Sumx as Number
  Dim value1 as Number
  Dim value2 as Number
  Dim parityindex as Number

  Sumx = 0
  value1 = 0
  value2 = 0
  parityindex = 0
  value1 = (AscW(Mid(filtereddata, 0 + 1, 1)) - 48) * 10
  value2 = (AscW(Mid(filtereddata, 1 + 1, 1)) - 48)
  Sumx = value1 + Value2
  parityindex = Sumx Mod 4

    
  parityBit = 0
  parityBit = EXT2PARITYMAP(parityindex*2+0+1)
  If parityBit = 0 Then 'odd
        transformdataleft = transformdataleft + Mid(filtereddata, 0 + 1, 1)
  Else
        transformdataleft = transformdataleft + Chr(AscW(Mid(filtereddata, 0 + 1, 1)) + 49 + 14)
  End If

  parityBit = EXT2PARITYMAP(parityindex*2+1+1)
  If parityBit = 0 Then 'odd    
        transformdataright = transformdataright + Mid(filtereddata, 1 + 1, 1)
  Else 
	  transformdataright = transformdataright + Chr(AscW(Mid(filtereddata, 1 + 1, 1)) + 49 + 14)
  End If

  Result = "<" + transformdataleft + "+" + transformdataright 
  formula = Result



'===============================================================
'Encode_EXT5

  Dim data as string    

  'Replace "12345" with your data field here  
  data = "12345"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parityBit as number  

  Dim EXT5PARITYMAP(50) As Number
  EXT5PARITYMAP(1) = 1
  EXT5PARITYMAP(2) = 1
  EXT5PARITYMAP(3) = 0
  EXT5PARITYMAP(4) = 0
  EXT5PARITYMAP(5) = 0
    
  EXT5PARITYMAP(6) = 1
  EXT5PARITYMAP(7) = 0
  EXT5PARITYMAP(8) = 1
  EXT5PARITYMAP(9) = 0
  EXT5PARITYMAP(10) = 0
    
  EXT5PARITYMAP(11) = 1
  EXT5PARITYMAP(12) = 0
  EXT5PARITYMAP(13) = 0
  EXT5PARITYMAP(14) = 1
  EXT5PARITYMAP(15) = 0
    
  EXT5PARITYMAP(16) = 1
  EXT5PARITYMAP(17) = 0
  EXT5PARITYMAP(18) = 0
  EXT5PARITYMAP(19) = 0
  EXT5PARITYMAP(20) = 1
   
  EXT5PARITYMAP(21) = 0
  EXT5PARITYMAP(22) = 1
  EXT5PARITYMAP(23) = 1
  EXT5PARITYMAP(24) = 0
  EXT5PARITYMAP(25) = 0
    
  EXT5PARITYMAP(26) = 0
  EXT5PARITYMAP(27) = 0
  EXT5PARITYMAP(28) = 1
  EXT5PARITYMAP(29) = 1
  EXT5PARITYMAP(30) = 0
    
  EXT5PARITYMAP(31) = 0
  EXT5PARITYMAP(32) = 0
  EXT5PARITYMAP(33) = 0
  EXT5PARITYMAP(34) = 1
  EXT5PARITYMAP(35) = 1
    
  EXT5PARITYMAP(36) = 0
  EXT5PARITYMAP(37) = 1
  EXT5PARITYMAP(38) = 0
  EXT5PARITYMAP(39) = 1
  EXT5PARITYMAP(40) = 0
    
  EXT5PARITYMAP(41) = 0
  EXT5PARITYMAP(42) = 1
  EXT5PARITYMAP(43) = 0
  EXT5PARITYMAP(44) = 0
  EXT5PARITYMAP(45) = 1
    
  EXT5PARITYMAP(46) = 0
  EXT5PARITYMAP(47) = 0
  EXT5PARITYMAP(48) = 1
  EXT5PARITYMAP(49) = 0
  EXT5PARITYMAP(50) = 1

  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as String
  Dim addcharlength as number

  transformdataleft = ""
  transformdataright = ""

  If filteredlength > 5 Then
        filtereddata = Left(filtereddata, 5)
  End If

  If filteredlength < 5 Then
        
        addcharlength = 5 - Len(filtereddata)
        For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata 
        Next x
  End If

  filteredlength = Len(filtereddata)

  'Transformation
  Dim Sumx as Number
  Dim chk as Number
  Dim transformdata as String
  
  Sumx = 0
  
  datalength = 0
  datalength = Len(filtereddata)

  For x = datalength - 1 To 0 Step -1
    
      barcodechar = Mid(filtereddata, x + 1, 1)
      barcodevalue = AscW(barcodechar)
      
      If x Mod 2 = 0 Then
        Sumx = Sumx + (3 * (barcodevalue - 48))
      Else
        Sumx = Sumx + (9 * (barcodevalue - 48))
      End If

  Next x    
  
  chk = Sumx Mod 10
    
  For x = 0 To 5 - 1
     
        parityBit = 0
        parityBit = EXT5PARITYMAP(chk*5 + x + 1)
        If parityBit = 0 Then 'odd
            transformdata = transformdata + Mid(filtereddata, x + 1, 1)
        Else
            transformdata = transformdata + Chr(AscW(Mid(filtereddata, x + 1, 1)) + 49 + 14)
        End If
    
  Next x

  Result = "<" + Mid(transformdata, 0 + 1, 1) + "+" + Mid(transformdata, 1 + 1, 1) + "+" + Mid(transformdata, 2 + 1, 1) + "+" + Mid(transformdata, 3 + 1, 1) + "+" + Mid(transformdata, 4 + 1, 1)

  formula = Result



'===============================================================
'Encode_UPCA

  Dim data as string    
  Dim hr as number

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set hr to 0 or 1
  hr = 1 

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parity as number  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)
  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as number
  Dim addcharlength as number

  transformdataleft = ""
  transformdataright = ""

  If (filteredlength > 11) Then
      filtereddata = Left(filtereddata, 11)
  End If

  If (filteredlength < 11) Then
    
        addcharlength = 11 - Len(filtereddata)
        For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata
        Next x
  End If


  'Check Digit  
  filteredlength = Len(filtereddata)  

  Dim  Sumx as number  
  Dim  ResultVal  as number   
  Dim cd as string    
  
  
  Sumx = 0   
  For x = 0 To filteredlength-1   
     barcodechar = Mid(filtereddata, x+1, 1)   
     barcodevalue = (AscW(barcodechar) - 48)

    If (x Mod 2 = 0) Then
        Sumx = Sumx + (3 * barcodevalue)
    Else
        Sumx = Sumx + barcodevalue
    End If
    
  Next x  
  
  ResultVal = Sumx Mod 10
  If ResultVal = 0 Then
    ResultVal = 0
  Else
    ResultVal = 10 - ResultVal
  End If

  cd = Chr(ResultVal + AscW("0"))


  filtereddata = filtereddata + cd
  filteredlength = Len(filtereddata)


  For x = 0 To 6 - 1
        transformdataleft = transformdataleft + Mid(filtereddata, x + 1, 1)
  Next x

  For x = 6 To 12 - 1
        
        transformchar = AscW(Mid(filtereddata, x + 1, 1))
        transformchar = transformchar + 49 'Right Parity Characters transform 0 to a etc...
        transformdataright = transformdataright + Chr(transformchar)
  Next x

  If (hr = 1) Then 'make first and last digit use long bars. add 110
        Result = Chr(AscW(Mid(transformdataleft, 0 + 1, 1)) - 15) + "[" + Chr(AscW(Mid(transformdataleft, 0 + 1, 1)) + 110) + Mid(transformdataleft, 1 + 1, 5) + "-" + Mid(transformdataright, 0 + 1, 5) + Chr(AscW(Mid(transformdataright, 5 + 1, 1)) - 49 + 159) + "]" + Chr(AscW(Mid(transformdataright, 5 + 1, 1)) - 49 - 15)
  Else
        Result = "[" + transformdataleft + "-" + transformdataright + "]"
  End If  


  formula = Result



'===============================================================
'Encode_UPCE

  Dim data as string    
  Dim hr as Number  
  

  'Replace "12345678" with your data field here  
  'data = "4343"
  data = "12345678"

  'Set hr to 0 or 1
  hr = 1  

  
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim parity as number  

  Dim UPCEPARITYMAP(120) As Number

    UPCEPARITYMAP(0*12+ 0*6 +0+1) = 1
    UPCEPARITYMAP(0*12+ 0*6+ 1+1) = 1
    UPCEPARITYMAP(0*12+ 0*6+ 2+1) = 1
    UPCEPARITYMAP(0*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(0*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(0*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(0*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(0*12+ 1*6+ 1+1) = 0
    UPCEPARITYMAP(0*12+ 1*6+ 2+1) = 0
    UPCEPARITYMAP(0*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(0*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(0*12+ 1*6+ 5+1) = 1
    
    
    UPCEPARITYMAP(1*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(1*12+ 0*6+ 1+1) = 1
    UPCEPARITYMAP(1*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(1*12+ 0*6+ 3+1) = 1
    UPCEPARITYMAP(1*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(1*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(1*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(1*12+ 1*6+ 1+1) = 0
    UPCEPARITYMAP(1*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(1*12+ 1*6+ 3+1) = 0
    UPCEPARITYMAP(1*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(1*12+ 1*6+ 5+1) = 1
    
    
    UPCEPARITYMAP(2*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(2*12+ 0*6+ 1+1) = 1
    UPCEPARITYMAP(2*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(2*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(2*12+ 0*6+ 4+1) = 1
    UPCEPARITYMAP(2*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(2*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(2*12+ 1*6+ 1+1) = 0
    UPCEPARITYMAP(2*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(2*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(2*12+ 1*6+ 4+1) = 0
    UPCEPARITYMAP(2*12+ 1*6+ 5+1) = 1
    
    UPCEPARITYMAP(3*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(3*12+ 0*6+ 1+1) = 1
    UPCEPARITYMAP(3*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(3*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(3*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(3*12+ 0*6+ 5+1) = 1
    
    UPCEPARITYMAP(3*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(3*12+ 1*6+ 1+1) = 0
    UPCEPARITYMAP(3*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(3*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(3*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(3*12+ 1*6+ 5+1) = 0
 
    UPCEPARITYMAP(4*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(4*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(4*12+ 0*6+ 2+1) = 1
    UPCEPARITYMAP(4*12+ 0*6+ 3+1) = 1
    UPCEPARITYMAP(4*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(4*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(4*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(4*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(4*12+ 1*6+ 2+1) = 0
    UPCEPARITYMAP(4*12+ 1*6+ 3+1) = 0
    UPCEPARITYMAP(4*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(4*12+ 1*6+ 5+1) = 1
    
    UPCEPARITYMAP(5*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(5*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(5*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(5*12+ 0*6+ 3+1) = 1
    UPCEPARITYMAP(5*12+ 0*6+ 4+1) = 1
    UPCEPARITYMAP(5*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(5*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(5*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(5*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(5*12+ 1*6+ 3+1) = 0
    UPCEPARITYMAP(5*12+ 1*6+ 4+1) = 0
    UPCEPARITYMAP(5*12+ 1*6+ 5+1) = 1
    
    
    UPCEPARITYMAP(6*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(6*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(6*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(6*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(6*12+ 0*6+ 4+1) = 1
    UPCEPARITYMAP(6*12+ 0*6+ 5+1) = 1
    
    UPCEPARITYMAP(6*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(6*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(6*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(6*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(6*12+ 1*6+ 4+1) = 0
    UPCEPARITYMAP(6*12+ 1*6+ 5+1) = 0
                            
    UPCEPARITYMAP(7*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(7*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(7*12+ 0*6+ 2+1) = 1
    UPCEPARITYMAP(7*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(7*12+ 0*6+ 4+1) = 1
    UPCEPARITYMAP(7*12+ 0*6+ 5+1) = 0
    
    UPCEPARITYMAP(7*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(7*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(7*12+ 1*6+ 2+1) = 0
    UPCEPARITYMAP(7*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(7*12+ 1*6+ 4+1) = 0
    UPCEPARITYMAP(7*12+ 1*6+ 5+1) = 1
    
    UPCEPARITYMAP(8*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(8*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(8*12+ 0*6+ 2+1) = 1
    UPCEPARITYMAP(8*12+ 0*6+ 3+1) = 0
    UPCEPARITYMAP(8*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(8*12+ 0*6+ 5+1) = 1
    
    UPCEPARITYMAP(8*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(8*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(8*12+ 1*6+ 2+1) = 0
    UPCEPARITYMAP(8*12+ 1*6+ 3+1) = 1
    UPCEPARITYMAP(8*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(8*12+ 1*6+ 5+1) = 0
                            
    UPCEPARITYMAP(9*12+ 0*6+ 0+1) = 1
    UPCEPARITYMAP(9*12+ 0*6+ 1+1) = 0
    UPCEPARITYMAP(9*12+ 0*6+ 2+1) = 0
    UPCEPARITYMAP(9*12+ 0*6+ 3+1) = 1
    UPCEPARITYMAP(9*12+ 0*6+ 4+1) = 0
    UPCEPARITYMAP(9*12+ 0*6+ 5+1) = 1
    
    UPCEPARITYMAP(9*12+ 1*6+ 0+1) = 0
    UPCEPARITYMAP(9*12+ 1*6+ 1+1) = 1
    UPCEPARITYMAP(9*12+ 1*6+ 2+1) = 1
    UPCEPARITYMAP(9*12+ 1*6+ 3+1) = 0
    UPCEPARITYMAP(9*12+ 1*6+ 4+1) = 1
    UPCEPARITYMAP(9*12+ 1*6+ 5+1) = 0

    
    
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)
        If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
            Result = Result + barcodechar
        End If       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)
  
  

  'Encoding        
  Dim transformdataleft  as String 
  Dim transformdataright  as String
  Dim transformchar as number
  Dim addcharlength as number
  Dim upcestr  as string
  Dim upcastr  as string
  Dim lastchar  as string


  upcastr = ""
  upcestr = ""
  transformdataleft = ""
  transformdataright = ""

  If (filteredlength > 6) Then        
        filtereddata = Left(filtereddata, 6)
  End If

  If (filteredlength < 6) Then
    
        addcharlength = 6 - Len(filtereddata)
        For x = 0 To addcharlength - 1
            filtereddata = "0" & filtereddata
        Next x
        
  End If

  filteredlength = Len(filtereddata)
  
    'Transformation
    'Expand
    datalength = 0
    datalength = Len(filtereddata)    
    upcastr = "0"
    lastchar = Mid(filtereddata, datalength - 1 + 1, 1)


    If (AscW(lastchar) = AscW("0")) Or (AscW(lastchar) = AscW("1")) Or (AscW(lastchar) = AscW("2")) Then
    
        
        upcastr = upcastr + Mid(filtereddata, 0 + 1, 2)
        upcastr = upcastr + lastchar
        upcastr = upcastr + "0000"
        upcastr = upcastr + Mid(filtereddata, 2 + 1, 3)
    
    ElseIf (AscW(lastchar) = AscW("3")) Then
    
        upcastr = upcastr + Mid(filtereddata, 0 + 1, 3)
        upcastr = upcastr + "00000"
        upcastr = upcastr + Mid(filtereddata, 3 + 1, 2)
    
    ElseIf (AscW(lastchar) = AscW("4")) Then
    
        upcastr = upcastr + Mid(filtereddata, 0 + 1, 4)
        upcastr = upcastr + "00000"
        upcastr = upcastr + Mid(filtereddata, 4 + 1, 1)
    
    ElseIf ((AscW(lastchar) = AscW("5")) Or (AscW(lastchar) = AscW("6")) Or (AscW(lastchar) = AscW("7")) Or (AscW(lastchar) = AscW("8")) Or (AscW(lastchar) = AscW("9"))) Then
    
        upcastr = upcastr + Mid(filtereddata, 0 + 1, 5)
        upcastr = upcastr + "0000"
        upcastr = upcastr + lastchar
        
    End If    
    
    filtereddata = upcastr



    'Check Digit  
    filteredlength = Len(filtereddata)  

    Dim  Sumx as number  
    Dim  ResultVal  as number   
    Dim cd as string  

    parity = 0   
    Sumx = 0   
    For x = 0 To filteredlength-1   
       barcodechar = Mid(filtereddata, x+1, 1)   
       barcodevalue = (AscW(barcodechar) - 48)
    
      If (parity = 0) Then    
        Sumx = Sumx + (3 * barcodevalue)
        parity = 1    
      Else    
        Sumx = Sumx + barcodevalue
        parity = 0
      End If    
    Next x  
  
    ResultVal = Sumx Mod 10
    If ResultVal = 0 Then
      ResultVal = 0
    Else
      ResultVal = 10 - ResultVal
    End If

    'getUPCECharacter
    cd = Chr(ResultVal + 48) 

    'Contract
    Dim thirdch as string
    Dim productvalue as Number    

    upcestr = upcastr
    productvalue = Val(Mid(upcastr, 6 + 1, 5))

    Dim fulllength as Number
    Dim lengthx as Number
    Dim start as Number
    Dim leftstr as string
    Dim rightstr as string
    Dim DeleteSubString as string
    Dim InsertSubString as string
    Dim insertStr  as string
    Dim orgStr as string

    If ((Mid(upcestr, 3 + 1, 3) = "000") Or (Mid(upcestr, 3 + 1, 3) = "100") Or (Mid(upcestr, 3 + 1, 3) = "200")) Then
    
        If (productvalue >= 0) And (productvalue <= 999) Then
        
            thirdch = Mid(upcestr, 3 + 1, 1)


            
            orgStr =  upcestr            
            start = 3+1
            lengthx = 5            
     
            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
            If (start < 1) Then
                start = 1
            End If    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - (start + lengthx) + 1)
            DeleteSubString = leftstr + rightstr
            upcestr = DeleteSubString 
            
            orgStr =  upcestr            
            insertStr = thirdch
            start = 6+1            

            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
    
            If (start < 1) Then
                start = 1
            End If
    
            If (start > fulllength + 1) Then
                start = fulllength + 1
            End If
    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - start + 1)
            InsertSubString = leftstr + insertStr + rightstr
            upcestr = InsertSubString

        
        Else
            upcestr = "000000"
        End If
    
    ElseIf (Mid(upcestr, 4 + 1, 2) = "00") Then
      
        If (productvalue >= 0) And (productvalue <= 99) Then                              

            orgStr =  upcestr            
            start = 4+1
            lengthx = 5            
     
            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
            If (start < 1) Then
                start = 1
            End If    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - (start + lengthx) + 1)
            DeleteSubString = leftstr + rightstr
            upcestr = DeleteSubString 
            
            orgStr =  upcestr            
            insertStr = "3"
            start = 6+1            

            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
    
            If (start < 1) Then
                start = 1
            End If
    
            If (start > fulllength + 1) Then
                start = fulllength + 1
            End If
    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - start + 1)
            InsertSubString = leftstr + insertStr + rightstr
            upcestr = InsertSubString

        
        Else
            upcestr = "000000"
        End If
    
     ElseIf (Mid(upcestr, 5 + 1, 1) = "0") Then
      
        If (productvalue >= 0) And (productvalue <= 9) Then            

            orgStr =  upcestr            
            start = 5+1
            lengthx = 5            
     
            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
            If (start < 1) Then
                start = 1
            End If    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - (start + lengthx) + 1)
            DeleteSubString = leftstr + rightstr
            upcestr = DeleteSubString 
            
            orgStr =  upcestr            
            insertStr = "4"
            start = 6+1            

            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
    
            If (start < 1) Then
                start = 1
            End If
    
            If (start > fulllength + 1) Then
                start = fulllength + 1
            End If
    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - start + 1)
            InsertSubString = leftstr + insertStr + rightstr
            upcestr = InsertSubString

        
        Else
            upcestr = "000000"
        End If
        
      
     ElseIf (Mid(upcestr, 5 + 1, 1) <> "0") Then
      
        If ((productvalue >= 5) And (productvalue <= 9)) Then            

            orgStr =  upcestr            
            start = 6+1
            lengthx = 4            
     
            fulllength = Len(orgStr)
            leftstr = ""
            rightstr = ""
            If (start < 1) Then
                start = 1
            End If    
            leftstr = Left(orgStr, start - 1)
            rightstr = Right(orgStr, fulllength - (start + lengthx) + 1)
            DeleteSubString = leftstr + rightstr
            upcestr = DeleteSubString 
        
        Else
            upcestr = "000000"
            
        End If
      
     Else
        upcestr = "000000"
        
     End If

    filtereddata = upcestr

    Dim parityBit  as Number
    Dim nschar  as String
    Dim chkvalue  as Number
    Dim nsvalue   as Number
    Dim transformdata as string
    Dim transformcharX as string
    
    parityBit = 0
    nschar = "0"
    chkvalue = (AscW(Mid(cd, 0 + 1, 1)) - AscW("0"))
    transformdata = ""

    For x = 1 To 7 - 1
    
        nsvalue = (AscW(nschar) - AscW("0"))
        transformcharX = Mid(filtereddata, x + 1, 1)
        parityBit = UPCEPARITYMAP(chkvalue*12 + nsvalue *6 + (x - 1) + 1 )
        If (parityBit = 1) Then
            transformcharX = Chr(AscW(transformcharX) + 48 + 15)
        End If
        transformdata = transformdata + transformcharX

        
    Next x

    If (hr = 1) Then
        Result = Chr(AscW(nschar) - 15) + "{" + transformdata + "}" + Chr(chkvalue + AscW("0") - 15)
    Else
        Result = "{" + transformdata + "}"
    End If

    

  formula = Result



'===============================================================
'Encode_Code128A

  Dim data as string      

  'Replace "12345678" with your data field here  
  data = "12345678"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  
  Result = ""  
  datalength = Len(data)
   
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)
    barcodevalue = AscW(barcodechar)
    
    If (barcodevalue <= 95) And (barcodevalue >= 0) Then
        Result = Result + barcodechar
    End If
    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

  'Encoding         
  If (filteredlength > 254) Then        
        filtereddata = Left(filtereddata, 254)
  End If  
  
  'Check Digit  
  filteredlength = Len(filtereddata)  

  Dim Sumx as number
  Dim ResultVal as number  
  Dim Weight as number
  Dim c  as number

  Dim returnvalue  as number
  Dim inputchar as number
  Dim getCode128AValue  as number
  
  Sumx = 103
  ResultVal = -1  
  Weight = 1  

  For x = 0 To Len(filtereddata) - 1
  
    c = AscW(Mid(filtereddata, x + 1, 1))

    inputchar  = c   

    getCode128AValue = 0
    returnvalue = 0
    If (inputchar <= 31) And (inputchar >= 0) Then
        returnvalue = (inputchar +64)
    ElseIf (inputchar <= 95) And (inputchar >= 32) Then
        returnvalue = (inputchar - 32)
    Else
        returnvalue = -1
    End If
    getCode128AValue = returnvalue

    Sumx = Sumx + (getCode128AValue * Weight)
    Weight = Weight + 1
  
  Next x

  ResultVal = Sumx Mod 103


  Dim inputvalue as number
  Dim getCode128ACharacter  as string
  Dim cd  as string

   getCode128ACharacter = ""
   inputvalue =  ResultVal
   If (inputvalue <= 94) And (inputvalue >= 0) Then
        inputvalue = inputvalue + 32
   ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
        inputvalue = inputvalue + 100 + 32
   Else
        inputvalue = -1
   End if 
   getCode128ACharacter =  Chr(inputvalue)

  cd = getCode128ACharacter

  Result =""  'add initialization
  Dim translateCharacter as Number 'add declaration

  For x = 0 To Len(filtereddata) - 1
   translateCharacter = AscW(Mid(filtereddata, x + 1, 1))

   If (translateCharacter <= 30) And (translateCharacter >= 0) Then
        translateCharacter = translateCharacter + 96
   ElseIf (translateCharacter = 31) Then
        translateCharacter = translateCharacter + 96 + 100
   ElseIf (translateCharacter <= 95) And (translateCharacter >= 32) Then
        translateCharacter = translateCharacter
   Else
        translateCharacter = -1
   End if 

   Result = Result + Chr(translateCharacter)  'add chr 

  Next x

  Result = Result + cd
  Dim startc as number
  Dim stopc as number

  startc = 235
  stopc = 238
  Result = Chr(startc) +  Result + Chr(stopc)

  formula = Result


'===============================================================
'Encode_Code128B

  Dim data as string    

  'Replace "12345678" with your data field here  
  data = "12345678"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)
    barcodevalue = AscW(barcodechar)

    If (barcodevalue <= 127) And (barcodevalue >= 32) Then
        Result = Result + barcodechar
    End If
    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

  'Encoding         
  If (filteredlength > 254) Then        
        filtereddata = Left(filtereddata, 254)
  End If  
  
  'Check Digit  
  filteredlength = Len(filtereddata)  

  Dim Sumx as number
  Dim ResultVal as number  
  Dim Weight as number
  Dim c  as number

  Dim returnvalue  as number
  Dim inputchar as number
  Dim getCode128BValue  as number
  
  Sumx = 104
  ResultVal = -1  
  Weight = 1  

  For x = 0 To Len(filtereddata) - 1
  
    c = AscW(Mid(filtereddata, x + 1, 1))

    inputchar  = c   

    getCode128BValue = 0
    returnvalue = 0
    If (inputchar <= 127) And (inputchar >= 32) Then
        returnvalue = (inputchar - 32)
    Else
        returnvalue = -1
    End If    
    getCode128BValue = returnvalue

    Sumx = Sumx + (getCode128BValue * Weight)
    Weight = Weight + 1
  
  Next x

  ResultVal = Sumx Mod 103


  Dim inputvalue as number
  Dim getCode128BCharacter  as string
  Dim cd  as string

  'getCode128BCharacter(ResultVal)   
   getCode128BCharacter = ""
   inputvalue =  ResultVal

    If (inputvalue <= 94) And (inputvalue >= 0) Then
        inputvalue = inputvalue + 32
    ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
        inputvalue = inputvalue + 100 + 32
    Else
        inputvalue = -1
    End If   

   getCode128BCharacter =  Chr(inputvalue)

   cd = getCode128BCharacter


   x = 0  
   Result = ""
   For x = 0 To Len(filtereddata) - 1
  
      c = AscW(Mid(filtereddata, x + 1, 1))
      If (c = 127) Then
        c = c + 100
      Else
        c = c
      End if 

      Result = Result + Chr(c)    
  
   Next x

  Result = Result + cd

  Dim startc as number
  Dim stopc as number

  startc = 236
  stopc = 238
  Result = Chr(startc) +  Result + Chr(stopc)

  formula = Result




'===============================================================
'Encode_Code128C

  Dim data as string      

  'Replace "12345678" with your data field here  
  data = "12345678"
 
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)    
    
    If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
         Result = Result + barcodechar
    End If

    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

  'Encoding         
  If (filteredlength > 253) Then
        filtereddata = Left(filtereddata, 253)
  End If

  If (Len(filtereddata) Mod 2 = 1) Then        
        filtereddata = "0" + filtereddata
  End If

  
  'Check Digit  
  filteredlength = Len(filtereddata)  

  Dim Sumx as number
  Dim ResultVal as number  
  Dim Weight as number
  Dim c  as number

  Dim returnvalue  as number
  Dim inputchar as number
  Dim num  as number
  
  Sumx = 105
  ResultVal = -1  
  Weight = 1    
  
  For x = 0 To Len(filtereddata) - 1 Step 2
    
    num = Val(Mid(filtereddata, x + 1, 2))
    Sumx = Sumx + (num * Weight)
    Weight = Weight + 1        
  
  Next x

  ResultVal = Sumx Mod 103


  Dim inputvalue as number
  Dim getCode128CCharacter  as string
  Dim cd  as string

  'getCode128CCharacter(ResultVal)   
   getCode128CCharacter = ""
   inputvalue =  ResultVal

   If (inputvalue <= 94) And (inputvalue >= 0) Then
        inputvalue = inputvalue + 32
   ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
        inputvalue = inputvalue + 32 + 100
   Else
        inputvalue = -1
   End If  
   getCode128CCharacter =  Chr(inputvalue)

  cd = getCode128CCharacter
  

  'Evaluate Result
  Dim startc as number
  Dim stopc as number


  Result = ""
  x = 0
  For x = 0 To Len(filtereddata) - 1 Step 2
    
    num = Val(Mid(filtereddata, x + 1, 2))

    'getCode128CCharacter
    getCode128CCharacter = ""
    inputvalue = num
    If (inputvalue <= 94) And (inputvalue >= 0) Then
        inputvalue = inputvalue + 32
    ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
        inputvalue = inputvalue + 32 + 100
    Else
        inputvalue = -1
    End If  
    getCode128CCharacter =  Chr(inputvalue)
    Result = Result + getCode128CCharacter
    
    
   Next x

   Result = Result + cd

   startc = 237
   stopc = 238
   Result = Chr(startc) + Result + Chr(stopc)

   formula = Result



'===============================================================
'Encode_I2of5

  Dim data as string      
  Dim chk as Number

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set Check Digit to 0 or 1
  chk = 0
 
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
  Dim transformdata As String
  Dim cd  as string  
   
  Dim x as number  
  Dim z as number  
  
  cd = ""
  transformdata = ""
  Result = ""  
  datalength = Len(data)

 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)    
    
    If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
         Result = Result + barcodechar
    End If

    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

  'Encoding         
  If chk = 1 Then

        If filteredlength > 253 Then            
            filtereddata = Left(filtereddata, 253)
            
        End If

        If (Len(filtereddata) Mod 2 = 0) Then   'Make it odd number of digits
            filtereddata = "0" + filtereddata
        End If

        Dim generateCheckDigit_I2of5 as String        
        Dim toggle as number
        Dim sumx as number
        Dim lastcharpos as number  
        Dim ResultVal as number  
        
        barcodechar = ""
        barcodevalue = 0
        toggle = 1
        sumx = 0
        
        generateCheckDigit_I2of5 = ""
        
         lastcharpos = Len(filtereddata) - 1        
         For x = lastcharpos To 0 Step -1
  
              barcodechar = Mid(filtereddata, x + 1, 1)
              barcodevalue = (AscW(barcodechar) - 48)  
        
              If toggle = 1 Then
                    sumx = sumx + (barcodevalue * 3)
                    toggle = 0
              Else
                    sumx = sumx + barcodevalue
                    toggle = 1
              End If
         Next x

         If ((sumx Mod 10) = 0) Then
                ResultVal = AscW("0")
         Else
                ResultVal = (10 - (sumx Mod 10)) + AscW("0")
         End If
         
         generateCheckDigit_I2of5 = Chr(ResultVal)
         cd = generateCheckDigit_I2of5
    
    Else
        
        If filteredlength > 254 Then  
            filtereddata = Left(filtereddata, 254)
        End If

        If (Len(filtereddata) Mod 2 = 1) Then 'Make it even number of digits
            filtereddata = "0" + filtereddata
         End If
    
    End If

    filtereddata = filtereddata + cd


  
  Dim getI2of5Character as string 
  Dim inputvalue as Number 
  Dim num as number  
  
   Result = ""
   num = 0
   For x = 0 To Len(filtereddata) - 1 Step 2    
        
        num = Val(Mid(filtereddata, x + 1, 2))        

        getI2of5Character = ""
        inputvalue = num
        If (inputvalue <= 90) And (inputvalue >= 0) Then
            inputvalue = inputvalue + 32
        ElseIf (inputvalue <= 99) And (inputvalue >= 91) Then
            inputvalue = inputvalue + 100
        Else
            inputvalue = -1
        End If
        getI2of5Character = Chr(inputvalue)

        Result = Result + getI2of5Character        
    
   Next x

   Result = "{" + Result + "}" 
  

  
   formula = Result


'===============================================================
'Encode_Code39ASCII

  Dim data as string  
  Dim chk as number  

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set chk to 0 if you do not want a check digit
  chk = 1

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  

  Dim CODE39MAP() As Number
  CODE39MAP = Array(Asc("0"), Asc("1"), Asc("2"), Asc("3"), Asc("4"), Asc("5"), Asc("6"), Asc("7"), Asc("8"), Asc("9"), Asc("A"), Asc("B"), Asc("C"), Asc("D"), Asc("E"), Asc("F"), Asc("G"), Asc("H"), Asc("I"), Asc("J"), Asc("K"), Asc("L"), Asc("M"), Asc("N"), Asc("O"), Asc("P"), Asc("Q"), Asc("R"), Asc("S"), Asc("T"), Asc("U"), Asc("V"), Asc("W"), Asc("X"), Asc("Y"), Asc("Z"), Asc("-"), Asc("."), Asc(" "), Asc("$"), Asc("/"), Asc("+"), Asc("%"))
  
  Dim CODE39ASCIIMAP() As String
  CODE39ASCIIMAP = Array

   
  Dim x as number  
  Dim z as number  
  Dim RVal As Number
  Dim getCode39Value as Number
  
  
  
  Result = ""  
  datalength = Len(data)
 
  'Filter Input  
  For x = 1 To datalength 
        barcodechar = Mid(data, x , 1)        
        barcodevalue = Asc(barcodechar)
        
        If (barcodevalue >= 0) And (barcodevalue <= 127) Then
            Result = Result & barcodechar
        End If

       
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)   

        
  'Encoding
  Dim mappedStr  As string
  mappedStr  = ""
  If chk = 1 Then
    
        If filteredlength > 254 Then
            filtereddata = Left(filtereddata, 254)            
        End If

       filteredlength = Len(filtereddata)  
       
       'GetMappedString
    	mappedStr = ""    
    	For x = 0 To filteredlength - 1    
        	mappedStr = mappedStr +  CODE39ASCIIMAP(Asc(Mid(filtereddata, x + 1, 1))+1)        
    	Next x    	
    	
    	filtereddata = mappedStr
    	filteredlength = Len(filtereddata)  


       'Check Digit         
        Dim  Sumx as number  
        Dim  ResultVal  as number   
        Dim cd as string            
  
        ResultVal = -1
        Sumx = 0   
        For x = 1 To filteredlength
                barcodechar = Mid(filtereddata, x, 1)
                barcodevalue = Asc(barcodechar)                   
                

                RVal = -1
                getCode39Value = 0
                For z = 1 To 43
                    If CODE39MAP(z) = barcodevalue Then
                       RVal = (z-1) '1 based array
                    End If
                Next z    
                getCode39Value = RVal        
                Sumx = Sumx + getCode39Value                                              
                
        Next x  
        
        ResultVal = Sumx Mod 43  
        cd = Chr(CODE39MAP(ResultVal+1))  



  Else
    
        If filteredlength > 255 Then
            filtereddata = Left(filtereddata, 255)            
        End If
        
        
        filteredlength = Len(filtereddata)  
        
        'GetMappedString        
    	mappedStr = ""    
    	For x = 0 To filteredlength - 1    
        	mappedStr = mappedStr +  CODE39ASCIIMAP(Asc(Mid(filtereddata, x + 1, 1))+1)        
    	Next x    	
    	
    	filtereddata = mappedStr
    	filteredlength = Len(filtereddata)  


        cd = ""    
  End If


  Result = "*" + filtereddata + cd + "*"
  formula = Result

'===============================================================
'Encode_Code128Auto

  Dim data as string      

  'Replace "12345678" with your data field here  
  data = "12345678"

  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim barcodecharTemp  As String
  Dim barcodevalueTemp as Number
                

  Dim filtereddata As String
  Dim filteredlength As Number  
   
  Dim x as number  
  Dim z as number  
  Dim cd as String
  Dim strResult As String
  
  cd = ""
  Result = ""  
  datalength = Len(data)  
   
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)
    barcodevalue = Asc(barcodechar)
    
    If (barcodevalue <= 127) And (barcodevalue >= 0) Then
        Result = Result + barcodechar
    End If
    
  Next x

  filtereddata  = Result
    

  filteredlength = Len(filtereddata)

  'Encoding         
  If (filteredlength > 254) Then        
        filtereddata = Left(filtereddata, 254)
  End If  
  
  filteredlength = Len(filtereddata)  
  
  
  'detectAllNumbers - all numbers and even digits  
  Dim allnumbers As Number
  Dim detectAllNumbers As Number
  Result = ""
  detectAllNumbers = 0
  allnumbers = 1 
  datalength =  filteredlength

  If (datalength Mod 2 = 1) Then
     allnumbers = 0
  Else
    
        For x = 0 To datalength - 1
            barcodechar = Mid(filtereddata, x + 1, 1)
            barcodevalue = Asc(barcodechar)
            If (barcodevalue <= Asc("9")) And (barcodevalue >= Asc("0")) Then
                'do nothing
            Else
                allnumbers = 0
            End If
        Next x
  End If
  detectAllNumbers = allnumbers 


  Dim sumx As Number     
  Dim numx As Number     
  Dim Resultx As Number     
  Dim Weight As Number             
  Dim returnvalue As Number
  Dim inputchar As Number        
  Dim inputvalue As Number
  Dim endpoint As Number

  Dim numNumbers As Number  
  Dim exitx  As Number
  Dim ix  As Number
  Dim BtoC  As Number
  Dim CtoB  As Number
  Dim CtoBChar As String
  Dim BtoCChar As String

  Dim strResultTemp As String 
  Dim twonum As Number

  Dim numy As Number  
        
  If (detectAllNumbers = 0) Then
            
        'addShift
        Dim shiftchar As String                  
  		shiftchar = Chr(230)
  		datalength = Len(filtereddata)
  		strResult = ""  
		For x = 0 To datalength - 1
		      
		    barcodechar = Mid(filtereddata, x + 1, 1)
		    barcodevalue = Asc(barcodechar)
		
		    'Code 128 A - 0..31 Add Shift
		    If (barcodevalue <= 31) And (barcodevalue >= 0) Then		    
		        
		        strResult = strResult + shiftchar
		        barcodechar = Chr(Asc(barcodechar) + 96)
		        strResult = strResult + barcodechar
		    
		    Else
		        strResult = strResult + barcodechar
		    End If
		
		    
		Next x  
  		filtereddata = strResult        
        
        'Check Digit AB   - generateCheckDigit_Code128ABAuto
  		cd = ""
  		sumx = 104
  		Resultx = -1
  		numx = 0
  		strResult = ""
  		Weight = 1  		
  		
  		
  		datalength = Len(filtereddata)
        x = 0
        Do While (x < datalength)
		'For x = 0 To datalength - 1
		  
            'numx = ScanAhead_8orMore_Numbers(data, x)
            numNumbers = 0
            exitx = 0
            ix = x
            Do While ((ix < Len(filtereddata)) And (exitx = 0))
    
                barcodecharTemp = Mid(filtereddata, ix + 1, 1)
                barcodevalueTemp = Asc(barcodecharTemp)
                If (barcodevalueTemp >= Asc("0") And barcodevalueTemp <= Asc("9")) Then
                    numNumbers = numNumbers + 1
                Else
                    exitx = 1
                End If
                ix = ix + 1
        
            Loop

            'return even digits
            If (numNumbers > 8) Then
                If (numNumbers Mod 2 = 1) Then
                    numNumbers = numNumbers - 1
                End If
            End If
            numx = numNumbers

            

            If (numx >= 8) Then
    
                  endpoint = x + numx

                  '105 to Switch from B to C
                  BtoC = 99
                  sumx = sumx + (BtoC * (Weight))
                  Weight = Weight + 1      
         
                  Do While (x < endpoint)
      
                    numx = Val(Mid(filtereddata, x + 1, 2))
                    sumx = sumx + (numx * (Weight))
                    x = x + 2
                    Weight = Weight + 1

                  Loop
         
                  '104 to Switch from C back to B
                  CtoB = 100
                  sumx = sumx + (CtoB * (Weight))
                  Weight = Weight + 1

            Else
    		    numx = Asc(Mid(filtereddata, x + 1, 1))		    
		    
    		    'getCode128ABValueAuto(num)		    
    		    returnvalue = 0
    		    inputchar = numx
    		    If (inputchar <= 31) And (inputchar >= 0) Then
    		        returnvalue = (inputchar + 64)
    		    ElseIf (inputchar <= 127) And (inputchar >= 32) Then
    		        returnvalue = (inputchar - 32)
    		    ElseIf (inputchar = 230) Then
    		        returnvalue = 98 'Shift
    		    Else
    		        returnvalue = -1
    		    End If    		    		
    		
        		sumx = sumx + (returnvalue * (Weight))		   
                x = x + 1
    		    Weight = Weight + 1
            End if
		'Next x
        Loop

  		Resultx = sumx Mod 103  		
  		
  		
  		'getCode128ABCharacterAuto(Resultx)  
  		inputvalue = Resultx
  		If (inputvalue <= 94) And (inputvalue >= 0) Then
        	inputvalue = inputvalue + 32
    	ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
        	inputvalue = inputvalue + 100 + 32
    	Else
        	inputvalue = -1
    	End If
    	cd = Chr(inputvalue)
    	' End - CheckDigit Calculation   
    	    	
        
        'getAutoSwitchingAB - Convert Ascii 31 / Ascii 127 to 227
        datalength = Len(filtereddata)
        strResult = ""
        For x = 0 To datalength - 1
  
    		barcodechar = Mid(filtereddata, x + 1, 1)
    		barcodevalue = Asc(barcodechar)

    		If (barcodevalue = 31) Then
        
        		barcodechar = Chr(Asc(barcodechar) + 96 + 100)
        		strResult = strResult + barcodechar
    
    		ElseIf (barcodevalue = 127) Then
    
        		barcodechar = Chr(Asc(barcodechar) + 100)
        		strResult = strResult + barcodechar    
    		Else    	
   		     
                'numx = ScanAhead_8orMore_Numbers(data, x)                
                numNumbers = 0
                exitx = 0
                ix = x
                Do While ((ix < Len(filtereddata)) And (exitx = 0))
    
                    barcodecharTemp = Mid(filtereddata, ix + 1, 1)
                    barcodevalueTemp = Asc(barcodecharTemp)
                    If (barcodevalueTemp >= Asc("0") And barcodevalueTemp <= Asc("9")) Then
                        numNumbers = numNumbers + 1
                    Else
                        exitx = 1
                    End If
                    ix = ix + 1
        
                Loop

                'return even digits
                If (numNumbers > 8) Then
                    If (numNumbers Mod 2 = 1) Then
                        numNumbers = numNumbers - 1
                    End If
                End If
                numx = numNumbers

				If (numx >= 8) Then
            
                    'strResult = OptimizeNumbers(data, x, strResult, numx)
                    
                
                    strResultTemp = strResult
                    numy = numx

                    '105 to Switch from B to C
                    BtoCChar = Chr(231)
                    strResultTemp = strResultTemp + BtoCChar
                    
                    endpoint = x + numy
                    Do While (x < endpoint)
                
                        twonum = Val(Mid(filtereddata, x + 1, 2))                      

                        'strResultTemp = strResultTemp + getCode128CCharacterAuto(twonum)                        
                        inputvalue =  twonum
                        If (inputvalue <= 94) And (inputvalue >= 0) Then
                            inputvalue = inputvalue + 32
                        ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
                            inputvalue = inputvalue + 32 + 100
                        Else
                            inputvalue = -1
                        End If    
                        strResultTemp = strResultTemp + Chr(inputvalue)                      


                        x = x + 2
            
                    Loop

                    '104 to Switch from C back to B
                    CtoBChar = Chr(232)
                    strResultTemp = strResultTemp + CtoBChar

                    strResult = strResultTemp
                    x = x - 1
        
                Else
                    strResult = strResult + barcodechar
                End If

                

    		End If 
  		Next x
  		filtereddata = strResult     
        
        filtereddata = filtereddata + cd        
        filtereddata = Chr(236) + filtereddata + Chr(238)
        
        
    Else
    
    
    	Result = ""
    	Dim lenFiltered As Number    	
            
        '//CheckDigit C - generateCheckDigit_Code128CAuto(filtereddata)
        cd = ""                
        Dim Code128CCharacter As String
        sumx = 105
        Resultx = -1
        strResult = ""
        numx = 0
        Weight = 1
        
        datalength = Len(filtereddata)  
        For x = 0 To datalength - 1 Step 2
  
            numx = Val(Mid(filtereddata, x + 1, 2))
            sumx = sumx + (numx * Weight)
            Weight = Weight + 1
  
        Next x

        Resultx = sumx Mod 103

        'getCode128CCharacterAuto(Resultx)
        inputvalue =  Resultx
        If (inputvalue <= 94) And (inputvalue >= 0) Then
            inputvalue = inputvalue + 32
        ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
            inputvalue = inputvalue + 32 + 100
        Else
            inputvalue = -1
        End If    
        cd = Chr(inputvalue)
        'End CheckDigit C
        
    
        Result = ""    
        lenFiltered = Len(filtereddata)        
        For x = 0 To (lenFiltered - 1) Step 2        
            
            numx = Val(Mid(filtereddata, x + 1, 2))

            'getCode128CCharacterAuto(Resultx)
            Code128CCharacter = ""
            inputvalue =  numx
            If (inputvalue <= 94) And (inputvalue >= 0) Then
                inputvalue = inputvalue + 32
            ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
                inputvalue = inputvalue + 32 + 100
            Else
                inputvalue = -1
            End If    
            Code128CCharacter = Chr(inputvalue)

            Result = Result + Code128CCharacter 
        
        Next x


		filtereddata = Result     
		filtereddata = filtereddata + cd        
        filtereddata = Chr(237) + filtereddata + Chr(238)
    
    
    
    End If
    
  formula = filtereddata




'===============================================================
'Encode_ITF14

  Dim data as string      
  Dim chk as Number
  Dim itfrectangle As Number
  Dim startITF as String 
  Dim stopITF as String  

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set Check Digit to 0 or 1
  chk = 0

  'Set Bearer's Bar to Top/Bottom (0) or Rectangle (1)
  itfrectangle = 0
 
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number  
  Dim transformdata As String
  Dim cd  as string  
   
  Dim x as number  
  Dim z as number  
  
  cd = ""
  transformdata = ""
  Result = ""  
  datalength = Len(data)

 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)    
    
    If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
         Result = Result + barcodechar
    End If

    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

  'Encoding         
  If chk = 1 Then

        If filteredlength > 253 Then            
            filtereddata = Left(filtereddata, 253)
            
        End If

        If (Len(filtereddata) Mod 2 = 0) Then   'Make it odd number of digits
            filtereddata = "0" + filtereddata
        End If

        Dim generateCheckDigit_ITF14 as String        
        Dim toggle as number
        Dim sumx as number
        Dim lastcharpos as number  
        Dim ResultVal as number  
        
        barcodechar = ""
        barcodevalue = 0
        toggle = 1
        sumx = 0
        
        generateCheckDigit_ITF14 = ""
        
         lastcharpos = Len(filtereddata) - 1        
         For x = lastcharpos To 0 Step -1
  
              barcodechar = Mid(filtereddata, x + 1, 1)
              barcodevalue = (AscW(barcodechar) - 48)  
        
              If toggle = 1 Then
                    sumx = sumx + (barcodevalue * 3)
                    toggle = 0
              Else
                    sumx = sumx + barcodevalue
                    toggle = 1
              End If
         Next x

         If ((sumx Mod 10) = 0) Then
                ResultVal = AscW("0")
         Else
                ResultVal = (10 - (sumx Mod 10)) + AscW("0")
         End If
         
         generateCheckDigit_ITF14 = Chr(ResultVal)
         cd = generateCheckDigit_ITF14
    
    Else
        
        If filteredlength > 254 Then  
            filtereddata = Left(filtereddata, 254)
        End If

        If (Len(filtereddata) Mod 2 = 1) Then 'Make it even number of digits
            filtereddata = "0" + filtereddata
         End If
    
    End If

    filtereddata = filtereddata + cd


  
  Dim getITF14Character as string 
  Dim inputvalue as Number 
  Dim num as number  
  
   Result = ""
   num = 0
   For x = 0 To Len(filtereddata) - 1 Step 2    
        
        num = Val(Mid(filtereddata, x + 1, 2))        

        getITF14Character = ""
        inputvalue = num
        If (inputvalue <= 90) And (inputvalue >= 0) Then
            inputvalue = inputvalue + 32
        ElseIf (inputvalue <= 99) And (inputvalue >= 91) Then
            inputvalue = inputvalue + 100
        Else
            inputvalue = -1
        End If
        getITF14Character = Chr(inputvalue)

        Result = Result + getITF14Character        
    
   Next x


    'ITF14 
    If (itfrectangle = 1) Then
        
        startITF = Chr(124)
        stopITF = Chr(126)
        Result = startITF + Result + stopITF
    
    Else
        Result = "{" + Result + "}"
    End If 

  
   formula = Result

'==========================================================================
'Encode_UCCEAN
    
    Dim data as String
    Dim GS1Compliance As Number

    'Replace "(00)123456789012345675(12)1" with your data field here  
    'Set GS1Compliance to 1 or 0
    data = "(00)123456789012345675(12)1"   
    GS1Compliance  = 0

    Dim cd as string
    Dim Result as String
    Dim replacedata102 as String
    Dim replacedata234 as String
    Dim filtereddata as String
    Dim filteredlength as Number
    Dim datalength as Number    
    Dim x as Number    
    Dim barcodechar As String
    Dim barcodevalue As Number
    Dim fncvalue As Number
    Dim forceNULL As Number
    Dim numset As Number
    Dim exitx As Number
    Dim replaceUCCEAN As String
    Dim strResult as String
    Dim numx As Number
    
    Dim twonum As Number
    Dim inputvalue As Number

    Dim barcodecharx As String
    Dim barcodechary As string
    Dim barcodevaluex As Number
    Dim ix As Number

    Dim strResultx As String
    Dim endpoint As Number

    Dim getUCCEANCCharacter As String
    Dim getUCCEANABValue As Number
    Dim OptimizeNumbersUCCEAN As String
    

    Dim sumx as Number
    Dim Resultn as Number

    Dim FinalResult As string
    Dim xformula As string

    Dim z As Number
    Dim Weight As Number

    Dim returnvalue as Number
    Dim inputchar as Number

    cd = ""    
    replacedata102 = ""
    replacedata234 = ""
    filtereddata = ""
    FinalResult = ""
    
    Result = ""
    'filtereddata = filterInputUCCEAN(data)  
    datalength = Len(data)
    For x = 0 To datalength - 1
  
        barcodechar = Mid(data, x + 1, 1)
        barcodevalue = Asc(barcodechar)
        If ((barcodevalue <= 127) And (barcodevalue >= 0)) Then
            Result = Result + barcodechar
        End If
  
    Next x
    filtereddata = Result 

    filteredlength = Len(filtereddata)
    If filteredlength > 254 Then
            filtereddata = Left(filtereddata, 254)
    End If


    'replacedata234 = replaceUCCEAN(filtereddata, 234)
    fncvalue = 234
    data = filtereddata



    Result = ""
    datalength = Len(data)
    forceNULL = 0

    x = 0
    numset = 0 
    exitx = 0

  
    Dim startBracketPosition(8) As Number
    Dim stopBracketPosition(8) As Number
  
    Dim aiset(8) As String
    Dim dataset(8) As String

    Dim counter As Number
    Dim y  As Number    
    

    Dim fncstring As string
   
    'Check 0 based or 1 based
    For counter = 1 To 8
  
        startBracketPosition(counter) = -1
        stopBracketPosition(counter) = -1
    
    Next counter
  
    x = 0
    Do While (x < datalength)
  
        barcodecharx = Mid(data, x + 1, 1)
        If (barcodecharx = "(") Then
    
             y = x + 1
             exitx = 0
                    Do While ((y < datalength) And (exitx = 0))
                
                      barcodechary = Mid(data, y + 1, 1)
                      If (barcodechary = ")") Then
                  
                          startBracketPosition(numset+1) = x '1 based
                          stopBracketPosition(numset+1) = y '1 based
                          numset = numset + 1
                          exitx = 1
                  
                      End If
                  
                      If (exitx = 0) Then
                          y = y + 1
                      End If
                  
                    Loop
              x = y
     
        End If
        x = x + 1
    Loop

    If (numset = 0) Then
        forceNULL = 1        
    
    Else

        For x = 1 To numset 
      
              aiset(x) = ""
              dataset(x) = ""
    
              If (stopBracketPosition(x) <= startBracketPosition(x)) Then
                forceNULL = 1
                Exit For
              End If
    
              If (stopBracketPosition(x) - 1 = startBracketPosition(x)) Then
                
                forceNULL = 1
                Exit For
              End If
    
            For y = startBracketPosition(x) + 1 To stopBracketPosition(x) - 1
        
                barcodechar = Mid(data, y + 1, 1)
                barcodevalue = Asc(barcodechar)
                If ((barcodevalue <= Asc("9") And barcodevalue >= Asc("0")) Or (barcodevalue <= Asc("Z") And barcodevalue >= Asc("A")) Or (barcodevalue <= Asc("z") And barcodevalue >= Asc("a"))) Then
                    aiset(x) = aiset(x) + barcodechar
                End If
        
            Next y
    
            If (x = numset) Then
        
                For y = stopBracketPosition(x) + 1 To Len(data) - 1
            
                    barcodechar = Mid(data, y + 1, 1)
                    barcodevalue = Asc(barcodechar)
                    If ((barcodevalue <= Asc("9") And barcodevalue >= Asc("0")) Or (barcodevalue <= Asc("Z") And barcodevalue >= Asc("A")) Or (barcodevalue <= Asc("z") And barcodevalue >= Asc("a"))) Then
                        dataset(x) = dataset(x) + barcodechar
                    End If
            
                Next y
        
            Else
        
                For y = stopBracketPosition(x) + 1 To startBracketPosition(x + 1) - 1
            
                     barcodechar = Mid(data, y + 1, 1)
                     barcodevalue = Asc(barcodechar)
                    If ((barcodevalue <= Asc("9") And barcodevalue >= Asc("0")) Or (barcodevalue <= Asc("Z") And barcodevalue >= Asc("A")) Or (barcodevalue <= Asc("z") And barcodevalue >= Asc("a"))) Then
                        dataset(x) = dataset(x) + barcodechar
                    End If
            
                Next y
        
            End If
        Next x
        
    
     
        'After Loop Exit, forceNULL may be set to 1
        If (forceNULL = 1) Then        
            
            replaceUCCEAN = ""
    
        Else
        
            Result = Chr(fncvalue) + Result
            fncstring = Chr(fncvalue)
            For x = 1 To numset
      
                If (x = numset) Then
                    Result = Result + aiset(x) + dataset(x)
                Else

                    '5.7
                    If (GS1Compliance = 0) Then
                        Result = Result + aiset(x) + dataset(x) + fncstring 'existing code
                    Else
                        'Selectively add FNC1 only if compliance is on
                        If (aiset(x) = "8002" Or aiset(x) = "8003" Or aiset(x) = "8004" Or aiset(x) = "8007" Or aiset(x) = "8008" Or aiset(x) = "8020" Or aiset(x) = "240" Or aiset(x) = "241" Or aiset(x) = "250" Or aiset(x) = "251" Or aiset(x) = "400" Or aiset(x) = "401" Or aiset(x) = "403" Or aiset(x) = "420" Or aiset(x) = "421" Or aiset(x) = "423" Or aiset(x) = "10" Or aiset(x) = "21" Or aiset(x) = "22" Or aiset(x) = "23" Or aiset(x) = "30" Or aiset(x) = "37" Or aiset(x) = "90" Or aiset(x) = "91" Or aiset(x) = "92" Or aiset(x) = "93" Or aiset(x) = "94" Or aiset(x) = "95" Or aiset(x) = "96" Or aiset(x) = "97" Or aiset(x) = "98" Or aiset(x) = "99") Then
                            Result = Result + aiset(x) + dataset(x) + fncstring
                        Else
                            Result = Result + aiset(x) + dataset(x)
                        End If
                    End if     
                    
                End If
      
            Next x
            replaceUCCEAN = Result
            
      
        End If

        
  
    End If
  
    If (forceNULL = 1) Then
        replaceUCCEAN = ""
    End If
 
    replacedata234 = replaceUCCEAN      

    
    
    'detectAllNumbersUCCEAN(replacedata234)
    Dim detectAllNumbersUCCEAN As Number
    Dim allNumbers As Number
    Dim numNumbers As Number
    
    detectAllNumbersUCCEAN = 0    

    'all numbers and even digits
    data = replacedata234
    Result = ""
    allNumbers = 1
    numNumbers = 0
    datalength = Len(data)


    For x = 0 To datalength - 1
  
        barcodechar = Mid(data, x + 1, 1)
        barcodevalue = Asc(barcodechar)
    
        If ((barcodevalue <= Asc("9")) And (barcodevalue >= Asc("0"))) Then
            numNumbers = numNumbers + 1
        ElseIf (barcodevalue = 234) Then     
        
            '5.7 Loosen check when compliance is 1
            If (GS1Compliance = 0) Then        

                If ((numNumbers Mod 2) = 1) Then
                    allNumbers = 0
                End If

            End If
            numNumbers = 0
        Else
 
            allNumbers = 0
        End If
      Next x
  
      '5.7 Loosen check when compliance is 1
      If (GS1Compliance = 0) Then

         If ((numNumbers Mod 2) = 1) Then
              allNumbers = 0
         End If  

      End If  
      detectAllNumbersUCCEAN = allNumbers


     'Back to Encode
     If (detectAllNumbersUCCEAN = 0) Then                                
        

        'Result = getAutoSwitchingABUCCEAN(replacedata234) 'need to update if 234        
        Dim getAutoSwitchingABUCCEAN As String
        data = replacedata234  

        getAutoSwitchingABUCCEAN = ""
        datalength = 0
        strResult = ""        
        datalength = Len(data)

        x = 0
        Do While (x < Len(data))

            barcodechar = Mid(data, x + 1, 1)
            barcodevalue = Asc(barcodechar)

            If ((barcodevalue <= 31) And (barcodevalue >= 0)) Then
            
                strResult = strResult + Chr(230)
                barcodevalue = barcodevalue + 96
                strResult = strResult + Chr(barcodevalue)
    
            ElseIf (barcodevalue = 127) Then
    
                barcodevalue = barcodevalue + 100
                strResult = strResult + Chr(barcodevalue)
    
            Else

                
                'numx = ScanAhead_8orMore_NumbersUCCEAN(data, x)
                Dim ScanAhead_8orMore_NumbersUCCEAN As Number  

                ix = x
                numNumbers = 0
                exitx = 0
                Do While ((ix < Len(data)) And (exitx = 0))
                    barcodecharx = Mid(data, ix + 1, 1)
                    barcodevaluex = Asc(barcodecharx)
                    If ((barcodevaluex >= Asc("0")) And (barcodevaluex <= Asc("9"))) Then
                        numNumbers = numNumbers + 1
                    Else
                        exitx = 1
                    End If
                    ix = ix + 1
                Loop

                'return even digits
                If (numNumbers > 8) Then
                    If ((numNumbers Mod 2) = 1) Then
                        numNumbers = numNumbers - 1
                    End If
                End If
                ScanAhead_8orMore_NumbersUCCEAN = numNumbers
                numx = ScanAhead_8orMore_NumbersUCCEAN
                

                If (numx >= 8) Then
         
            
                    'strResult = OptimizeNumbersUCCEAN(data, x, strResult, num)
                    strResultx = strResult

                    '105 to Switch from B to C                    
                    strResultx = strResultx + Chr(231)              

                  
                    endpoint = x + numx
                    Do While (x < endpoint)
        
                        twonum = Val(Mid(data, x + 1, 2))            

                        'strResultx = strResultx + getUCCEANCCharacter(twonum)
                        inputvalue = twonum
                        If (inputvalue <= 94) And (inputvalue >= 0) Then
                            inputvalue = inputvalue + 32
                        ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
                            inputvalue = inputvalue + 32 + 100
                        Else
                            inputvalue = -1
                        End If

                        getUCCEANCCharacter = Chr(inputvalue)
                        strResultx = strResultx + getUCCEANCCharacter
                        
                        x = x + 2
        
                    Loop

                    '104 to Switch from C back to B        
                    strResultx = strResultx + Chr(232)        
                    OptimizeNumbersUCCEAN = strResultx
                    
                    strResult = OptimizeNumbersUCCEAN            
                    x = x - 1
        
                Else
            
                    strResult = strResult + barcodechar
                End If  
    
            End If

            x = x + 1
        Loop  
        getAutoSwitchingABUCCEAN = strResult

        FinalResult = getAutoSwitchingABUCCEAN

        'cd = generateCheckDigitABUCCEAN(replacedata234)
        data = replacedata234
        datalength = 0
        sumx = 104
        Resultn = -1
        strResultx = "" 
        datalength = Len(data)

        z = 0
        numx = 0
        Weight = 1
        Do While (z < Len(data))
  
            'numx = ScanAhead_8orMore_NumbersUCCEAN(data, z)            
            ix = z
            numNumbers = 0
            exitx = 0
            Do While ((ix < Len(data)) And (exitx = 0))
                    barcodecharx = Mid(data, ix + 1, 1)
                    barcodevaluex = Asc(barcodecharx)
                    If ((barcodevaluex >= Asc("0")) And (barcodevaluex <= Asc("9"))) Then
                        numNumbers = numNumbers + 1
                    Else
                        exitx = 1
                    End If
                    ix = ix + 1
            Loop

            'return even digits
            If (numNumbers > 8) Then
                    If ((numNumbers Mod 2) = 1) Then
                        numNumbers = numNumbers - 1
                    End If
            End If
            numx = numNumbers                

            If (numx >= 8) Then
    
              endpoint = z + numx

              '105 to Switch from B to C              
              sumx = sumx + (99 * (Weight))
              Weight = Weight + 1

              Do While (z < endpoint)
      
                numx = Val(Mid(data, z + 1, 2))
                sumx = sumx + (numx * (Weight))
                z = z + 2
                Weight = Weight + 1
              Loop

              '104 to Switch from C back to B              
              sumx = sumx + (100 * (Weight))
              Weight = Weight + 1

    
            Else
    
                If (Asc(Mid(data, x + 1, 1)) = 234) Then
        
                    numx = 102
                    sumx = sumx + (numx * (Weight))
        
                Else
        
                    numx = Asc(Mid(data, z + 1, 1))

                    'getUCCEANABValue(numx)
                    inputchar = numx

                    getUCCEANABValue = 0
                    returnvalue = 0
                    If (inputchar <= 31) And (inputchar >= 0) Then
                        returnvalue = (inputchar + 64)
                    ElseIf ((inputchar <= 127) And (inputchar >= 32)) Then
                        returnvalue = (inputchar - 32)
                    ElseIf (inputchar = 230) Then
                        returnvalue = 98  'Shift
                    Else
                        returnvalue = -1
                    End If
                    getUCCEANABValue = returnvalue

                    sumx = sumx + getUCCEANABValue * (Weight)
        
                End If
                z = z + 1
                Weight = Weight + 1
            End If
        Loop

        Resultn = sumx Mod 103        
        
        'cd = getUCCEANABCharacter(Resultn)
        inputvalue = Resultn
        If (inputvalue <= 94) And (inputvalue >= 0) Then
            inputvalue = inputvalue + 32
        ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
            inputvalue = inputvalue + 100 + 32
        Else
            inputvalue = -1
         End If

        cd = Chr(inputvalue)


        FinalResult = FinalResult + cd        
        FinalResult = Chr(236) + FinalResult + Chr(238)
    
      Else

        Dim Skip As Number

        'cd = generateCheckDigitCUCCEAN(replacedata234)
        data = replacedata234
        datalength = 0
        sumx = 105
        numx = 0
        Resultn = -1
        strResult = ""

        datalength = Len(data)

        x = 0
        Weight = 1
        Skip = 0
        Do While (x < Len(data))
  
            Skip = 0
            If (Asc(Mid(data, x + 1, 1)) = 234) Then
                numx = 102
                sumx = sumx + (numx * (Weight))
                x = x + 1
                Weight = Weight + 1
                Skip = 1
        
            End If

           
            '''''''''''''''''''''''
            Dim barcodechar1 As number
            Dim barcodechar2 As number
            If (Skip = 0) Then
            
                '5.7 CheckDigit
                barcodechar1 = 0
                barcodechar2 = 0
                barcodechar1 = Asc(Mid(data, x + 1, 1))
                If (x + 1 < Len(data)) Then
                    barcodechar2 = Asc(Mid(data, x + 2, 1))
                End If

                If (barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 >= Asc("0") And barcodechar2 <= Asc("9")) Then
                
                        
                        'Existing Code
                        numx = Val(Mid(data, x + 1, 2)) 'Check its x+1 and not x
                        sumx = sumx + (numx * (Weight))
                        x = x + 2
                        Weight = Weight + 1

            
                
                ElseIf ((barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 = 234) Or (barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 = 0)) Then
                                
                        Dim CtoB As number
                        Dim BtoC As number
                        Dim getUCCEANABValuex as number 

                
                        'Swing to B
                        CtoB = 100
                        sumx = sumx + (CtoB * (Weight))
                        Weight = Weight + 1


                        'Single B number
                        numx = Asc(Mid(data, x + 1, 1))

                        'getUCCEANABValuex
                        getUCCEANABValuex = 0
                        If (numx <= 31) And (numx >= 0) Then
                            getUCCEANABValuex = (numx + 64)
                        ElseIf ((numx <= 127) And (numx >= 32)) Then
                            getUCCEANABValuex = (numx - 32)
                        ElseIf (numx = 230) Then
                            getUCCEANABValuex = 98  'Shift
                        Else
                            getUCCEANABValuex = -1
                        End If

                        sumx = sumx + getUCCEANABValuex * (Weight)

                        Weight = Weight + 1
                        
                        
                                
                        'Swing back to C
                        BtoC = 99
                        sumx = sumx + (BtoC * (Weight))
                        Weight = Weight + 1
                        x = x + 1
                
                End If
            
            End If
            '''''''''''''''''''''''


        Loop

        Resultn = sumx Mod 103

        'cd = getUCCEANCCharacter(Resultn)
        inputvalue = Resultn
        If (inputvalue <= 94) And (inputvalue >= 0) Then
            inputvalue = inputvalue + 32
        ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
            inputvalue = inputvalue + 32 + 100
        Else
            inputvalue = -1
        End If
        cd = Chr(inputvalue)

        xformula=cd

    
        x = 0
        Skip = 0
        Do While (x < Len(replacedata234))
        
            Skip = 0
            If (Asc(Mid(replacedata234, x + 1, 1)) = 234) Then
                            
                FinalResult = FinalResult + Chr(234)
                x = x + 1
                Skip = 1
            
            End If

          '''''''''''''''''''''''            
          If (Skip = 0) Then
            
                '5.7
                barcodechar1 = 0
                barcodechar2 = 0
                barcodechar1 = Asc(Mid(replacedata234, x + 1, 1))
                If (x + 1 < Len(replacedata234)) Then
                    barcodechar2 = Asc(Mid(replacedata234, x + 2, 1))
                End If

                If (barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 >= Asc("0") And barcodechar2 <= Asc("9")) Then
                
                        
                        'Existing Code
                        numx = Val(Mid(replacedata234, x + 1, 2)) 'Check its x+1 and not x

                		'getUCCEANCCharacter(numx)
                		inputvalue = numx
                		If (inputvalue <= 94) And (inputvalue >= 0) Then
                    		inputvalue = inputvalue + 32
                		ElseIf (inputvalue <= 106) And (inputvalue >= 95) Then
                    		inputvalue = inputvalue + 32 + 100
                		Else
                    		inputvalue = -1
                		End If
                		getUCCEANCCharacter = Chr(inputvalue)
	
    		            FinalResult = FinalResult + getUCCEANCCharacter
            		    x = x + 2
            
                
                ElseIf ((barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 = 234) Or (barcodechar1 >= Asc("0") And barcodechar1 <= Asc("9") And barcodechar2 = 0)) Then
                                
                        Dim CtoBStr As String
                        Dim BtoCStr As String
                
                        'Switch from C back to B
                        CtoBStr = Chr(232)
                        FinalResult = FinalResult + CtoBStr

                        'Single B number
                        FinalResult = FinalResult + Chr(barcodechar1)
                        x = x + 1
                                
                        'Switch from B to C
                        BtoCStr = Chr(231)
                        FinalResult = FinalResult + BtoCStr
                
                End If
            
            End If            
            '''''''''''''''''''''''
            
        Loop

                
        FinalResult = FinalResult + cd        
        FinalResult = Chr(237) + FinalResult + Chr(238)
    
    
      End if
    
      formula = FinalResult         
        
   

'===============================================================
'Encode_Industrial2of5

  Dim data as string      
  Dim chk as Number

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set Check Digit to 0 or 1
  chk = 0
 
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number    
  Dim cd  as string  
   
  Dim x as number  
  Dim z as number  

  Dim toggle as number
  Dim Sumx as number
  Dim lastcharpos as number
  Dim Resultx as number
  
  cd = ""  
  Result = ""  
  datalength = Len(data)

 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)    
    
    If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
         Result = Result + barcodechar
    End If
    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

 
  
  'Encoding         
  If chk = 1 Then
    
        If filteredlength > 254 Then
            filtereddata = Left(filtereddata, 254)
        End If
        'cd = generateCheckDigit_Industrial2of5(filtereddata)
        toggle = 1
        Sumx = 0

        datalength = Len( filtereddata)
        lastcharpos = datalength - 1

        For x = lastcharpos To 0 Step -1
  
              barcodechar = Mid( filtereddata, x + 1, 1)
              barcodevalue = (AscW(barcodechar) - 48)  
        
              If toggle = 1 Then
                    Sumx = Sumx + (barcodevalue * 3)
                    toggle = 0
              Else
                    Sumx = Sumx + barcodevalue
                    toggle = 1
              End If
        Next x

        If ((Sumx Mod 10) = 0) Then
                Resultx = AscW("0")
        Else
                Resultx = (10 - (Sumx Mod 10)) + AscW("0")
        End If

        cd = Chr(Resultx)

    
    Else
    
        If filteredlength > 255 Then
            filtereddata = Left(filtereddata, 255)
        End If
    
    End If

    filtereddata = filtereddata + cd
    Result = "{" + filtereddata + "}"
  
    formula = Result

'===============================================================
'Encode_ModifiedPlessy

  Dim data as string      
  Dim chk as Number

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set Check Digit to 0 or 1
  chk = 0
 
  Dim Result As String
  Dim datalength as Number

  Dim barcodechar As String
  Dim barcodevalue as Number

  Dim filtereddata As String
  Dim filteredlength As Number    
  Dim cd  as string  
   
  Dim x as number  
  Dim y as number  

  Dim toggle as number
  Dim Sumx as number
  Dim lastcharpos as number
  Dim Resultx as number

  Dim doubleNumber as number
  Dim doubleStr as String
  
  cd = ""  
  Result = ""  
  datalength = Len(data)

 
  'Filter Input  
  For x = 0 To datalength - 1  
    barcodechar = Mid(data, x + 1, 1)    
    
    If AscW(barcodechar) <= AscW("9") And AscW(barcodechar) >= AscW("0") Then
         Result = Result + barcodechar
    End If
    
  Next x

  filtereddata  = Result
  filteredlength = Len(filtereddata)

   
  'Encoding         
  If chk = 1 Then
    
        If filteredlength > 15 Then
            filtereddata = Left(filtereddata, 15)
        End If
        'cd = generateCheckDigit_Industrial2of5(filtereddata)
        toggle = 1
        Sumx = 0

        datalength = Len( filtereddata)
        lastcharpos = datalength - 1

        '=================================
        For x = lastcharpos To 0 Step -1
  
              barcodechar = Mid(filtereddata, x + 1, 1)
              barcodevalue = (AscW(barcodechar) - 48)
  
        
              If toggle = 1 Then
                    doubleStr = barcodechar + doubleStr
                    toggle = 0
              Else
                    Sumx = Sumx + barcodevalue
                    toggle = 1
              End If
        Next x
        
    
        doubleNumber = Val(doubleStr)
        doubleNumber = doubleNumber * 2
  
        doubleStr = CStr(doubleNumber,0,"",".")
        doubleStr = Trim(doubleStr)
        
    
  
        For y = 0 To Len(doubleStr) - 1
  
            barcodechar = Mid(doubleStr, y + 1, 1)
            barcodevalue = (AscW(barcodechar) - 48)
            Sumx = Sumx + barcodevalue
    
    
        Next y
  
  
        '=================================

        

        If ((Sumx Mod 10) = 0) Then
                Resultx = AscW("0")
        Else
                Resultx = (10 - (Sumx Mod 10)) + AscW("0")
        End If

        cd = Chr(Resultx)

    
    Else
    
        If filteredlength > 16 Then
            filtereddata = Left(filtereddata, 16)
        End If
    
    End If

    filtereddata = filtereddata + cd
    Result = "{" + filtereddata + "}"
  
    formula = Result

'===============================================================
'Encode_Code93

  Dim data as string      
  Dim chk as Number    

  'Replace "12345678" with your data field here  
  data = "12345678"

  'Set Check Digit to 0 or 1
  chk = 1  
 
  Dim Result As String
  Dim Resultx As string
  Dim cd As String
  Dim filtereddata As String
  Dim datalength As Number
  Dim barcodevalue As Number
  Dim barcodechar As Number
  Dim translate_Code93 as string
  Dim x As Number
  Dim filteredlength As Number
    
  translate_Code93 = ""
  cd = ""
  Result = ""
  'filtereddata = filterInput_Code93(data)
  datalength = Len(data)  
  For x = 0 To datalength - 1
        barcodechar = Asc(Mid(data, x + 1, 1))
        If (barcodechar >= 0) And (barcodechar <= 127) Then
            Result = Result & Chr(barcodechar)
        End If
  Next x
  filtereddata = Result
  

  filteredlength = Len(filtereddata)
  If chk = 1 Then
    
        If filteredlength > 254 Then        
            filtereddata = Left(filtereddata, 254)            
        End If

        'cd = generateCheckDigit_Code93(filtereddata)
        ' =================   Begin Check Digit =========================
   
        Dim datax As String

        datax = filtereddata    

        Dim generateCheckDigit_Code93 As string
        Dim cchk As Number
        Dim kchk As Number
        Dim sumx As Number
        Dim y As Number    
        Dim weight As Number
        Dim code93value As Number
        Dim barcodecharx As String
        Dim forceReturn As Number
        Dim inputx As Number                
        Dim translateStr As String
        Dim getCode93Value As Number
        Dim ix As String

       
        forceReturn = 0
        sumx = 0
        y = 0
    
        weight = 1
        code93value = 0
        inputx = 0
    
        y = Len(datax) - 1
        Do While (y >= 0)
    
            barcodecharx = Mid(datax, y + 1, 1)        
        
            'translatedStr = translate_Code93(Asc(barcodecharx))
            'Translate
            inputx = Asc(barcodecharx)
            Resultx = ""
            Select Case (inputx)
    
                Case 0
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(85)
            
                Case 1
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(65)
            
                Case 2
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(66)
            
                Case 3
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(67)
            
                Case 4
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(68)
            
                Case 5
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(69)
            
                Case 6
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(70)
            
                Case 7
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(71)
            
                Case 8
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(72)
            
                Case 9
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(73)
            
                Case 10
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(74)
            
                Case 11
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(75)
            
                Case 12
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(76)
            
                Case 13
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(77)
            
                Case 14
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(78)
            
                Case 15
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(79)
            
                Case 16
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(80)
            
                Case 17
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(81)
            
                Case 18
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(82)
            
                Case 19
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(83)
            
                Case 20
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(84)
            
                Case 21
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(85)
            
                Case 22
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(86)
            
                Case 23
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(87)
            
                Case 24
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(88)
            
                Case 25
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(89)
            
                Case 26
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(90)
            
                Case 27
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(65)
            
                Case 28
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(66)
            
                Case 29
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(67)
            
                Case 30
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(68)
            
                Case 31
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(69)
            
                Case 32
                    Resultx = Resultx + Chr(32)
            
                Case 33
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(65)
            
                Case 34
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(66)
            
                Case 35
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(67)
            
                Case 36
                    Resultx = Resultx + Chr(36)
            
                Case 37
                    Resultx = Resultx + Chr(37)
            
                Case 38
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(70)
            
                Case 39
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(71)
            
                Case 40
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(72)
            
                Case 41
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(73)
            
                Case 42
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(74)
            
                Case 43
                    Resultx = Resultx + Chr(43)
            
                Case 44
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(76)
            
                Case 45
                    Resultx = Resultx + Chr(45)
            
                Case 46
                    Resultx = Resultx + Chr(46)
            
                Case 47
                    Resultx = Resultx + Chr(47)
            
                Case 48
                    Resultx = Resultx + Chr(48)
            
                Case 49
                    Resultx = Resultx + Chr(49)
            
                Case 50
                    Resultx = Resultx + Chr(50)
            
                Case 51
                    Resultx = Resultx + Chr(51)
            
                Case 52
                    Resultx = Resultx + Chr(52)
            
                Case 53
                    Resultx = Resultx + Chr(53)
            
                Case 54
                    Resultx = Resultx + Chr(54)
            
                Case 55
                    Resultx = Resultx + Chr(55)
            
                Case 56
                    Resultx = Resultx + Chr(56)
            
                Case 57
                    Resultx = Resultx + Chr(57)
            
                Case 58
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(90)
            
                Case 59
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(70)
            
                Case 60
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(71)
            
                Case 61
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(72)
            
                Case 62
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(73)
            
                Case 63
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(74)
            
                Case 64
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(86)
            
                Case 65
                    Resultx = Resultx + Chr(65)
            
                Case 66
                    Resultx = Resultx + Chr(66)
            
                Case 67
                    Resultx = Resultx + Chr(67)
            
                Case 68
                    Resultx = Resultx + Chr(68)
            
                Case 69
                    Resultx = Resultx + Chr(69)
            
                Case 70
                    Resultx = Resultx + Chr(70)
            
                Case 71
                    Resultx = Resultx + Chr(71)
            
                Case 72
                    Resultx = Resultx + Chr(72)
            
                Case 73
                    Resultx = Resultx + Chr(73)
            
                Case 74
                    Resultx = Resultx + Chr(74)
            
                Case 75
                    Resultx = Resultx + Chr(75)
            
                Case 76
                    Resultx = Resultx + Chr(76)
            
                Case 77
                    Resultx = Resultx + Chr(77)
            
                Case 78
                    Resultx = Resultx + Chr(78)
            
                Case 79
                    Resultx = Resultx + Chr(79)
            
                Case 80
                    Resultx = Resultx + Chr(80)
            
                Case 81
                    Resultx = Resultx + Chr(81)
            
                Case 82
                    Resultx = Resultx + Chr(82)
            
                Case 83
                    Resultx = Resultx + Chr(83)
            
                Case 84
                    Resultx = Resultx + Chr(84)
            
                Case 85
                    Resultx = Resultx + Chr(85)
            
                Case 86
                    Resultx = Resultx + Chr(86)
            
                Case 87
                    Resultx = Resultx + Chr(87)
            
                Case 88
                    Resultx = Resultx + Chr(88)
            
                Case 89
                    Resultx = Resultx + Chr(89)
            
                Case 90
                    Resultx = Resultx + Chr(90)
            
                Case 91
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(75)
            
                Case 92
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(76)
            
                Case 93
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(77)
            
                Case 94
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(78)
            
                Case 95
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(79)
            
                Case 96
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(87)
            
                Case 97
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(65)
            
                Case 98
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(66)
            
                Case 99
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(67)
            
                Case 100
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(68)
            
                Case 101
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(69)
            
                Case 102
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(70)
            
                Case 103
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(71)
            
                Case 104
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(72)
            
                Case 105
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(73)
            
                Case 106
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(74)
            
                Case 107
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(75)
            
                Case 108
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(76)
            
                Case 109
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(77)
            
                Case 110
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(78)
            
                Case 111
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(79)
            
                Case 112
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(80)
            
                Case 113
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(81)
            
                Case 114
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(82)
            
                Case 115
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(83)
            
                Case 116
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(84)
            
                Case 117
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(85)
            
                Case 118
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(86)
            
                Case 119
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(87)
            
                Case 120
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(88)
            
                Case 121
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(89)
            
                Case 122
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(90)
            
                Case 123
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(80)
            
                Case 124
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(81)
            
                Case 125
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(82)
            
                Case 126
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(83)
            
                Case 127
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(84)
            
            End Select
            translate_Code93 = Resultx    
            translateStr = translate_Code93
            'end translate                
                
            Dim lx As Number 
            lx = Len(translateStr)        

            If (lx = 2) Then            

                'code93value = getCode93Value(Asc(Mid(translatedStr, 1 + 1, 1)))
                inputx = Asc(Mid(translateStr, 1 + 1, 1))
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value
            
                'weight = (weight>20) ? 1 : weight
                If (weight > 20) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1

            
                'code93value = getCode93Value(Asc(Mid(translatedStr, 0 + 1, 1)))
                inputx = Asc(Mid(translateStr, 0 + 1, 1))
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value            

                If (weight > 20) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1
        
            ElseIf (lx = 1) Then                            
            
            
                'code93value = getCode93Value(Asc(Mid(translatedStr, 0 + 1, 1)))
                inputx = Asc(Mid(translateStr, 0 + 1, 1))
            
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value            
            
            

                If (weight > 20) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1


        
            Else
            
                forceReturn = 1  'return "";
            End If

            y = y - 1    

            'ix = ix + barcodecharx
        
        Loop
    

        cchk = sumx Mod 47
        weight = 2
        sumx = sumx Mod 47
        y = Len(datax) - 1
        Do While (y >= 0)
    
            barcodecharx = Mid(datax, y + 1, 1)
            'translatedStr = translate_Code93(Asc(barcodecharx))
            'Translate
            inputx = Asc(barcodecharx)
            Resultx = ""
            Select Case (inputx)
    
                Case 0
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(85)
            
                Case 1
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(65)
            
                Case 2
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(66)
            
                Case 3
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(67)
            
                Case 4
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(68)
            
                Case 5
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(69)
            
                Case 6
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(70)
            
                Case 7
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(71)
            
                Case 8
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(72)
            
                Case 9
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(73)
            
                Case 10
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(74)
            
                Case 11
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(75)
            
                Case 12
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(76)
            
                Case 13
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(77)
            
                Case 14
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(78)
            
                Case 15
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(79)
            
                Case 16
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(80)
            
                Case 17
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(81)
            
                Case 18
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(82)
            
                Case 19
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(83)
            
                Case 20
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(84)
            
                Case 21
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(85)
            
                Case 22
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(86)
            
                Case 23
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(87)
            
                Case 24
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(88)
            
                Case 25
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(89)
            
                Case 26
                    Resultx = Resultx + Chr(193)
                    Resultx = Resultx + Chr(90)
            
                Case 27
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(65)
            
                Case 28
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(66)
            
                Case 29
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(67)
            
                Case 30
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(68)
            
                Case 31
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(69)
            
                Case 32
                    Resultx = Resultx + Chr(32)
            
                Case 33
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(65)
            
                Case 34
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(66)
            
                Case 35
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(67)
            
                Case 36
                    Resultx = Resultx + Chr(36)
            
                Case 37
                    Resultx = Resultx + Chr(37)
            
                Case 38
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(70)
            
                Case 39
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(71)
            
                Case 40
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(72)
            
                Case 41
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(73)
            
                Case 42
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(74)
            
                Case 43
                    Resultx = Resultx + Chr(43)
            
                Case 44
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(76)
            
                Case 45
                    Resultx = Resultx + Chr(45)
            
                Case 46
                    Resultx = Resultx + Chr(46)
            
                Case 47
                    Resultx = Resultx + Chr(47)
            
                Case 48
                    Resultx = Resultx + Chr(48)
            
                Case 49
                    Resultx = Resultx + Chr(49)
            
                Case 50
                    Resultx = Resultx + Chr(50)
            
                Case 51
                    Resultx = Resultx + Chr(51)
            
                Case 52
                    Resultx = Resultx + Chr(52)
            
                Case 53
                    Resultx = Resultx + Chr(53)
            
                Case 54
                    Resultx = Resultx + Chr(54)
            
                Case 55
                    Resultx = Resultx + Chr(55)
            
                Case 56
                    Resultx = Resultx + Chr(56)
            
                Case 57
                    Resultx = Resultx + Chr(57)
            
                Case 58
                    Resultx = Resultx + Chr(195)
                    Resultx = Resultx + Chr(90)
            
                Case 59
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(70)
            
                Case 60
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(71)
            
                Case 61
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(72)
            
                Case 62
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(73)
            
                Case 63
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(74)
            
                Case 64
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(86)
            
                Case 65
                    Resultx = Resultx + Chr(65)
            
                Case 66
                    Resultx = Resultx + Chr(66)
            
                Case 67
                    Resultx = Resultx + Chr(67)
            
                Case 68
                    Resultx = Resultx + Chr(68)
            
                Case 69
                    Resultx = Resultx + Chr(69)
            
                Case 70
                    Resultx = Resultx + Chr(70)
            
                Case 71
                    Resultx = Resultx + Chr(71)
            
                Case 72
                    Resultx = Resultx + Chr(72)
            
                Case 73
                    Resultx = Resultx + Chr(73)
            
                Case 74
                    Resultx = Resultx + Chr(74)
            
                Case 75
                    Resultx = Resultx + Chr(75)
            
                Case 76
                    Resultx = Resultx + Chr(76)
            
                Case 77
                    Resultx = Resultx + Chr(77)
            
                Case 78
                    Resultx = Resultx + Chr(78)
            
                Case 79
                    Resultx = Resultx + Chr(79)
            
                Case 80
                    Resultx = Resultx + Chr(80)
            
                Case 81
                    Resultx = Resultx + Chr(81)
            
                Case 82
                    Resultx = Resultx + Chr(82)
            
                Case 83
                    Resultx = Resultx + Chr(83)
            
                Case 84
                    Resultx = Resultx + Chr(84)
            
                Case 85
                    Resultx = Resultx + Chr(85)
            
                Case 86
                    Resultx = Resultx + Chr(86)
            
                Case 87
                    Resultx = Resultx + Chr(87)
            
                Case 88
                    Resultx = Resultx + Chr(88)
            
                Case 89
                    Resultx = Resultx + Chr(89)
            
                Case 90
                    Resultx = Resultx + Chr(90)
            
                Case 91
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(75)
            
                Case 92
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(76)
            
                Case 93
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(77)
            
                Case 94
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(78)
            
                Case 95
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(79)
            
                Case 96
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(87)
            
                Case 97
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(65)
            
                Case 98
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(66)
            
                Case 99
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(67)
            
                Case 100
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(68)
            
                Case 101
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(69)
            
                Case 102
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(70)
            
                Case 103
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(71)
            
                Case 104
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(72)
            
                Case 105
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(73)
            
                Case 106
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(74)
            
                Case 107
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(75)
            
                Case 108
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(76)
            
                Case 109
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(77)
            
                Case 110
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(78)
            
                Case 111
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(79)
            
                Case 112
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(80)
            
                Case 113
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(81)
            
                Case 114
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(82)
            
                Case 115
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(83)
            
                Case 116
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(84)
            
                Case 117
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(85)
            
                Case 118
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(86)
            
                Case 119
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(87)
            
                Case 120
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(88)
            
                Case 121
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(89)
            
                Case 122
                    Resultx = Resultx + Chr(196)
                    Resultx = Resultx + Chr(90)
            
                Case 123
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(80)
            
                Case 124
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(81)
            
                Case 125
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(82)
            
                Case 126
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(83)
            
                Case 127
                    Resultx = Resultx + Chr(194)
                    Resultx = Resultx + Chr(84)
            
            End Select
            translate_Code93 = Resultx    
            translateStr = translate_Code93
            'end translate
        
            If (Len(translateStr) = 2) Then
        
            
                'code93value = getCode93Value(Asc(Mid(translatedStr, 1 + 1, 1)))
                inputx = Asc(Mid(translateStr, 1 + 1, 1))
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value


                If (weight > 15) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1

            
                'code93value = getCode93Value(Asc(Mid(translatedStr, 0 + 1, 1)))
                inputx = Asc(Mid(translateStr, 0 + 1, 1))
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value
            
                If (weight > 15) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1
        
            ElseIf (Len(translateStr) = 1) Then
        
            
                'code93value = getCode93Value(Asc(Mid(translatedStr, 0 + 1, 1)))
                inputx = Asc(Mid(translateStr, 0 + 1, 1))
                If (inputx >= 193) And (inputx <= 196) Then
                    inputx = inputx - 150
                ElseIf (inputx = 32) Then
                    inputx = 38
                ElseIf (inputx = 36) Then
                    inputx = 39
                ElseIf (inputx = 37) Then
                    inputx = 42
                ElseIf (inputx = 43) Then
                    inputx = 41
                ElseIf (inputx = 45) Then
                    inputx = 36
                ElseIf (inputx = 46) Then
                    inputx = 37
                ElseIf (inputx = 47) Then
                    inputx = 40
                ElseIf (inputx >= 48) And (inputx <= 57) Then
                    inputx = inputx - 48
                ElseIf (inputx >= 65) And (inputx <= 90) Then
                    inputx = inputx - 55
                End If
                getCode93Value = inputx
                code93value = getCode93Value
            
                If (weight > 15) Then
                    weight = 1
                End If
                sumx = sumx + (weight * code93value)
                weight = weight + 1
            Else
                forceReturn = 1  'return "";
            End If

            y = y - 1
    
        Loop
        kchk = sumx Mod 47

    
        Dim CChrStr as String
        Dim KChrStr as String
        Dim getCode93Character As Number
        If (forceReturn = 1) Then
            generateCheckDigit_Code93 = ""
        Else
            'generateCheckDigit_Code93 = Chr(getCode93Character(cchk)) + Chr(getCode93Character(kchk))
            'getCode93Character(cchk)
            inputx  = cchk
            If (inputx >= 43) And (inputx <= 46) Then
                inputx = inputx + 150
            ElseIf (inputx = 38) Then
                inputx = 32
            ElseIf (inputx = 39) Then
                inputx = 36
            ElseIf (inputx = 42) Then
                inputx = 37
            ElseIf (inputx = 41) Then
                inputx = 43
            ElseIf (inputx = 36) Then
                inputx = 45
            ElseIf (inputx = 37) Then
                inputx = 46
            ElseIf (inputx = 40) Then
                inputx = 47
            ElseIf (inputx >= 0) And (inputx <= 9) Then
                inputx = inputx + 48
            ElseIf (inputx >= 10) And (inputx <= 35) Then
                inputx = inputx + 55
            End If
            getCode93Character = inputx
            CChrStr = Chr(getCode93Character)

            'getCode93Character(kchk)
            inputx  = kchk
            If (inputx >= 43) And (inputx <= 46) Then
                inputx = inputx + 150
            ElseIf (inputx = 38) Then
                inputx = 32
            ElseIf (inputx = 39) Then
                inputx = 36
            ElseIf (inputx = 42) Then
                inputx = 37
            ElseIf (inputx = 41) Then
                inputx = 43
            ElseIf (inputx = 36) Then
                inputx = 45
            ElseIf (inputx = 37) Then
                inputx = 46
            ElseIf (inputx = 40) Then
                inputx = 47
            ElseIf (inputx >= 0) And (inputx <= 9) Then
                inputx = inputx + 48
            ElseIf (inputx >= 10) And (inputx <= 35) Then
                inputx = inputx + 55
            End If
            getCode93Character = inputx
            KChrStr = Chr(getCode93Character)

            generateCheckDigit_Code93 = CChrStr + KChrStr

        End If
        ' =================   End Check Digit =========================
        cd = generateCheckDigit_Code93

    
  Else
    
        If filteredlength > 255 Then            
            filtereddata = Left(filtereddata, 255)            
        End If    
  End If    
  
    
  Result = ""
  datalength = 0
  datalength = Len(filtereddata) '<-
  For x = 0 To datalength - 1
        
    barcodevalue = Asc(Mid(filtereddata, x + 1, 1)) '<-

    'Result = Result + translate_Code93(barcodevalue)
    'Translate
    inputx = barcodevalue
    Resultx = ""
    Select Case (inputx)
    
        Case 0
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(85)
            
        Case 1
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(65)
            
        Case 2
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(66)
            
        Case 3
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(67)
            
        Case 4
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(68)
            
        Case 5
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(69)
            
        Case 6
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(70)
            
        Case 7
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(71)
            
        Case 8
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(72)
            
        Case 9
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(73)
            
        Case 10
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(74)
            
        Case 11
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(75)
            
        Case 12
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(76)
            
        Case 13
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(77)
            
        Case 14
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(78)
            
        Case 15
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(79)
            
        Case 16
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(80)
            
        Case 17
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(81)
            
        Case 18
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(82)
            
        Case 19
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(83)
            
        Case 20
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(84)
            
        Case 21
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(85)
            
        Case 22
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(86)
            
        Case 23
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(87)
            
        Case 24
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(88)
            
        Case 25
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(89)
            
        Case 26
            Resultx = Resultx + Chr(193)
            Resultx = Resultx + Chr(90)
            
        Case 27
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(65)
            
        Case 28
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(66)
            
        Case 29
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(67)
            
        Case 30
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(68)
            
        Case 31
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(69)
            
        Case 32
            Resultx = Resultx + Chr(32)
            
        Case 33
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(65)
            
        Case 34
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(66)
            
        Case 35
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(67)
            
        Case 36
            Resultx = Resultx + Chr(36)
            
        Case 37
            Resultx = Resultx + Chr(37)
            
        Case 38
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(70)
            
        Case 39
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(71)
            
        Case 40
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(72)
            
        Case 41
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(73)
            
        Case 42
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(74)
            
        Case 43
            Resultx = Resultx + Chr(43)
            
        Case 44
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(76)
            
        Case 45
            Resultx = Resultx + Chr(45)
            
        Case 46
            Resultx = Resultx + Chr(46)
            
        Case 47
            Resultx = Resultx + Chr(47)
            
        Case 48
            Resultx = Resultx + Chr(48)
            
        Case 49
            Resultx = Resultx + Chr(49)
            
        Case 50
            Resultx = Resultx + Chr(50)
            
        Case 51
            Resultx = Resultx + Chr(51)
            
        Case 52
            Resultx = Resultx + Chr(52)
            
        Case 53
            Resultx = Resultx + Chr(53)
            
        Case 54
            Resultx = Resultx + Chr(54)
            
        Case 55
            Resultx = Resultx + Chr(55)
            
        Case 56
            Resultx = Resultx + Chr(56)
            
        Case 57
            Resultx = Resultx + Chr(57)
            
        Case 58
            Resultx = Resultx + Chr(195)
            Resultx = Resultx + Chr(90)
            
        Case 59
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(70)
            
        Case 60
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(71)
            
        Case 61
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(72)
            
        Case 62
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(73)
            
        Case 63
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(74)
            
        Case 64
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(86)
            
        Case 65
            Resultx = Resultx + Chr(65)
            
        Case 66
            Resultx = Resultx + Chr(66)
            
        Case 67
            Resultx = Resultx + Chr(67)
            
        Case 68
            Resultx = Resultx + Chr(68)
            
        Case 69
            Resultx = Resultx + Chr(69)
            
        Case 70
            Resultx = Resultx + Chr(70)
            
        Case 71
            Resultx = Resultx + Chr(71)
            
        Case 72
            Resultx = Resultx + Chr(72)
            
        Case 73
            Resultx = Resultx + Chr(73)
            
        Case 74
            Resultx = Resultx + Chr(74)
            
        Case 75
            Resultx = Resultx + Chr(75)
            
        Case 76
            Resultx = Resultx + Chr(76)
            
        Case 77
            Resultx = Resultx + Chr(77)
            
        Case 78
            Resultx = Resultx + Chr(78)
            
        Case 79
            Resultx = Resultx + Chr(79)
            
        Case 80
            Resultx = Resultx + Chr(80)
            
        Case 81
            Resultx = Resultx + Chr(81)
            
        Case 82
            Resultx = Resultx + Chr(82)
            
        Case 83
            Resultx = Resultx + Chr(83)
            
        Case 84
            Resultx = Resultx + Chr(84)
            
        Case 85
            Resultx = Resultx + Chr(85)
            
        Case 86
            Resultx = Resultx + Chr(86)
            
        Case 87
            Resultx = Resultx + Chr(87)
            
        Case 88
            Resultx = Resultx + Chr(88)
            
        Case 89
            Resultx = Resultx + Chr(89)
            
        Case 90
            Resultx = Resultx + Chr(90)
            
        Case 91
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(75)
            
        Case 92
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(76)
            
        Case 93
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(77)
            
        Case 94
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(78)
            
        Case 95
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(79)
            
        Case 96
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(87)
            
        Case 97
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(65)
            
        Case 98
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(66)
            
        Case 99
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(67)
            
        Case 100
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(68)
            
        Case 101
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(69)
            
        Case 102
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(70)
            
        Case 103
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(71)
            
        Case 104
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(72)
            
        Case 105
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(73)
            
        Case 106
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(74)
            
        Case 107
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(75)
            
        Case 108
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(76)
            
        Case 109
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(77)
            
        Case 110
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(78)
            
        Case 111
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(79)
            
        Case 112
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(80)
            
        Case 113
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(81)
            
        Case 114
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(82)
            
        Case 115
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(83)
            
        Case 116
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(84)
            
        Case 117
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(85)
            
        Case 118
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(86)
            
        Case 119
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(87)
            
        Case 120
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(88)
            
        Case 121
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(89)
            
        Case 122
            Resultx = Resultx + Chr(196)
            Resultx = Resultx + Chr(90)
            
        Case 123
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(80)
            
        Case 124
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(81)
            
        Case 125
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(82)
            
        Case 126
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(83)
            
        Case 127
            Resultx = Resultx + Chr(194)
            Resultx = Resultx + Chr(84)
            
    End Select
    translate_Code93 = Resultx    
    Result = Result + translate_Code93    
    
   Next x
    

   formula = Chr(197) + Result + cd + Chr(198)

'===============================================================
'Encode_CodeCodabar

  Dim data as string      

  'Replace "A1234567890A" with your data field here  
  data = "A1234567890A"
 
  Dim Result As String
  Dim filtereddata As String
  Dim datalength As Number
  Dim barcodechar As String
  Dim x As Number
  Dim y As Number
  Dim filteredlength As Number    
  Dim returnVal As Number

  Dim CODECODABARMAP(43) As String
  CODECODABARMAP = Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "-", ".", "$", "/", "+", ":")

  Result = ""
  datalength = Len(data)  
  For x = 0 To datalength - 1
  
    barcodechar = Mid(data, x + 1, 1)

    'getCodeCodabarValue(barcodechar)
    returnVal = -1
    For y = 0 To 20 - 1
    
        If (Asc(CODECODABARMAP(y+1)) = Asc(barcodechar)) Then
            returnVal = y
            Exit For
        End If
    Next y
    If (returnVal <> -1) Then        
        Result = Result + barcodechar
    End If
  
  Next x

  filtereddata = Result
  filteredlength = Len(filtereddata)

  If (filteredlength > 255) Then
        filtereddata = Left(filtereddata, 255)
  End If

  formula = filtereddata

' ===================================================================================
' Encode_POSTNET

    Dim data as string  

   'Replace "90721" with your data field here  
    data = "90721"


    Dim cd as String
    Dim result as String    
    Dim filtereddata as String
    Dim filteredlength as Number    

    Dim resultx as String
    Dim datalengthx as Number
    Dim x as Number
    Dim barcodecharx as String

    Dim datalengthy as Number
    Dim Sumx as Number
    Dim resulty as Number
    Dim strResult As String
    Dim barcodechary as String
    Dim y as Number
    Dim getPOSTNETValue As Number
    Dim getPOSTNETCharacter As Number


    cd = ""
    result = ""
    
    'filtereddata = filterInput_POSTNET(data)
    resultx = ""
    datalengthx = Len(data)
    For x = 0 To datalengthx - 1
  
        barcodecharx = Mid(data, x + 1, 1)
        If (Asc(barcodecharx) >= Asc("0") And Asc(barcodecharx) <= Asc("9")) Then
             resultx = resultx + barcodecharx
        End If
    Next x
    filtereddata = resultx
    filteredlength = Len(filtereddata)

    If (filteredlength > 11) Then
        filtereddata = Left(filtereddata, 11)
    End If

    'cd = generateCheckDigit_POSTNET(filtereddata)
    ' ============================================
    datalengthy = 0
    Sumx = 0
    resulty = -1
    strResult = ""
    barcodechary = ""

    datalengthy = Len(filtereddata)
    For y = 0 To datalengthy - 1
        
        barcodechary = Mid(filtereddata, y + 1, 1)        
        getPOSTNETValue = Asc(barcodechary) - 48
        Sumx = Sumx + getPOSTNETValue
    Next y

    resulty = Sumx Mod 10
    If (resulty <> 0) Then
        resulty = (10 - resulty)
    End If

    'getPOSTNETCharacter(resulty)
    getPOSTNETCharacter = resulty + 48
    strResult = Chr(getPOSTNETCharacter)

    cd = strResult
    ' =============================================
    
    result = "{"+filtereddata + cd+"}"
    formula = result




'======================================================================================================
' Encode_GS1Databar14

    Dim data as string  
    Dim linkage as number

    'Replace "12401234567898" with your data field here  
    data = "12401234567898"
    linkage = 0

    Dim result As String

    Dim cd As String
    Dim filtereddata As String
    Dim filteredlength as number
    Dim addcharlength As number
    Dim humanText As String
    Dim x As number
    Dim leftstr, rightstr As String
    Dim valuez, leftz, rightz As Currency
    Dim tempasc As number
    Dim leftx, rightx, data1, data2, data3, data4, sumx, cleft, cright, ctemp, checksumval As number
    Dim data5 as number
    Dim widths() As number
    Dim tempChar As String
    Dim bwresult As String
    Dim black As number
    Dim retval As number

    'getGS1widths
    Dim baryy As number
    Dim elmWidth As number
    Dim mxwElement As number
    Dim subVal, lessVal As number
    Dim narrowMask As number
    Dim tempMask As number
    Dim nz As number
    Dim rz As number
    Dim iz, jz As number
    Dim maxDenomz, minDenomz As number
    Dim valz As number
    
    Dim valpp As number
	Dim npp As number
    Dim elements  As number
   	Dim maxWidth As number
    Dim noNarrow As number
    
    Dim datalength As number
    Dim barcodechar as String

    Dim debugstr as string
        
    Dim checksum(32) As number
    Dim GS1DATABAR14FINDERS(45) As number
    
    Dim widthsodd(4) As number
    Dim widthseven(4) As number
    Dim results1odd(4) As number
    Dim results2odd(4) As number
    Dim results3odd(4) As number
    Dim results4odd(4) As number
    
    Dim results1even(4) As number
    Dim results2even(4) As number
    Dim results3even(4) As number
    Dim results4even(4) As number

    Dim WIDTH16_4_0(35) As number
    Dim WIDTH16_4_1(35) As number
    Dim WIDTH15_4_0(28) As number
    Dim WIDTH15_4_1(28) As number
    
    
    'CHECKSUM
    checksum(0*8+ 0+1) = 1
    checksum(0*8+ 1+1) = 3
    checksum(0*8+ 2+1) = 9
    checksum(0*8+ 3+1) = 27
    checksum(0*8+ 4+1) = 2
    checksum(0*8+ 5+1) = 6
    checksum(0*8+ 6+1) = 18
    checksum(0*8+ 7+1) = 54
    
    checksum(1*8+ 0+1) = 4
    checksum(1*8+ 1+1) = 12
    checksum(1*8+ 2+1) = 36
    checksum(1*8+ 3+1) = 29
    checksum(1*8+ 4+1) = 8
    checksum(1*8+ 5+1) = 24
    checksum(1*8+ 6+1) = 72
    checksum(1*8+ 7+1) = 58
    
    checksum(2*8+ 0+1) = 16
    checksum(2*8+ 1+1) = 48
    checksum(2*8+ 2+1) = 65
    checksum(2*8+ 3+1) = 37
    checksum(2*8+ 4+1) = 32
    checksum(2*8+ 5+1) = 17
    checksum(2*8+ 6+1) = 51
    checksum(2*8+ 7+1) = 74
    
    checksum(3*8+ 0+1) = 64
    checksum(3*8+ 1+1) = 34
    checksum(3*8+ 2+1) = 23
    checksum(3*8+ 3+1) = 69
    checksum(3*8+ 4+1) = 49
    checksum(3*8+ 5+1) = 68
    checksum(3*8+ 6+1) = 46
    checksum(3*8+ 7+1) = 59
    
    
    'GS1DATABAR14FINDERS
    GS1DATABAR14FINDERS(0*5+ 0+1) = 3
    GS1DATABAR14FINDERS(0*5+ 1+1) = 8
    GS1DATABAR14FINDERS(0*5+ 2+1) = 2
    GS1DATABAR14FINDERS(0*5+ 3+1) = 1
    GS1DATABAR14FINDERS(0*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(1*5+ 0+1) = 3
    GS1DATABAR14FINDERS(1*5+ 1+1) = 5
    GS1DATABAR14FINDERS(1*5+ 2+1) = 5
    GS1DATABAR14FINDERS(1*5+ 3+1) = 1
    GS1DATABAR14FINDERS(1*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(2*5+ 0+1) = 3
    GS1DATABAR14FINDERS(2*5+ 1+1) = 3
    GS1DATABAR14FINDERS(2*5+ 2+1) = 7
    GS1DATABAR14FINDERS(2*5+ 3+1) = 1
    GS1DATABAR14FINDERS(2*5+ 4+1) = 1
        
    GS1DATABAR14FINDERS(3*5+ 0+1) = 3
    GS1DATABAR14FINDERS(3*5+ 1+1) = 1
    GS1DATABAR14FINDERS(3*5+ 2+1) = 9
    GS1DATABAR14FINDERS(3*5+ 3+1) = 1
    GS1DATABAR14FINDERS(3*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(4*5+ 0+1) = 2
    GS1DATABAR14FINDERS(4*5+ 1+1) = 7
    GS1DATABAR14FINDERS(4*5+ 2+1) = 4
    GS1DATABAR14FINDERS(4*5+ 3+1) = 1
    GS1DATABAR14FINDERS(4*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(5*5+ 0+1) = 2
    GS1DATABAR14FINDERS(5*5+ 1+1) = 5
    GS1DATABAR14FINDERS(5*5+ 2+1) = 6
    GS1DATABAR14FINDERS(5*5+ 3+1) = 1
    GS1DATABAR14FINDERS(5*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(6*5+ 0+1) = 2
    GS1DATABAR14FINDERS(6*5+ 1+1) = 3
    GS1DATABAR14FINDERS(6*5+ 2+1) = 8
    GS1DATABAR14FINDERS(6*5+ 3+1) = 1
    GS1DATABAR14FINDERS(6*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(7*5+ 0+1) = 1
    GS1DATABAR14FINDERS(7*5+ 1+1) = 5
    GS1DATABAR14FINDERS(7*5+ 2+1) = 7
    GS1DATABAR14FINDERS(7*5+ 3+1) = 1
    GS1DATABAR14FINDERS(7*5+ 4+1) = 1
    
    GS1DATABAR14FINDERS(8*5+ 0+1) = 1
    GS1DATABAR14FINDERS(8*5+ 1+1) = 3
    GS1DATABAR14FINDERS(8*5+ 2+1) = 9
    GS1DATABAR14FINDERS(8*5+ 3+1) = 1
    GS1DATABAR14FINDERS(8*5+ 4+1) = 1

    '640
    WIDTH16_4_0(0*7+ 0+1) = 0
    WIDTH16_4_0(0*7+ 1+1) = 160
    WIDTH16_4_0(0*7+ 2+1) = 1
    WIDTH16_4_0(0*7+ 3+1) = 4
    WIDTH16_4_0(0*7+ 4+1) = 4
    WIDTH16_4_0(0*7+ 5+1) = 1
    WIDTH16_4_0(0*7+ 6+1) = 0

    WIDTH16_4_0(1*7+ 0+1) = 161
    WIDTH16_4_0(1*7+ 1+1) = 960
    WIDTH16_4_0(1*7+ 2+1) = 10
    WIDTH16_4_0(1*7+ 3+1) = 6
    WIDTH16_4_0(1*7+ 4+1) = 4
    WIDTH16_4_0(1*7+ 5+1) = 3
    WIDTH16_4_0(1*7+ 6+1) = 0
    
    WIDTH16_4_0(2*7+ 0+1) = 961
    WIDTH16_4_0(2*7+ 1+1) = 2014
    WIDTH16_4_0(2*7+ 2+1) = 34
    WIDTH16_4_0(2*7+ 3+1) = 8
    WIDTH16_4_0(2*7+ 4+1) = 4
    WIDTH16_4_0(2*7+ 5+1) = 5
    WIDTH16_4_0(2*7+ 6+1) = 0
    
    WIDTH16_4_0(3*7+ 0+1) = 2015
    WIDTH16_4_0(3*7+ 1+1) = 2714
    WIDTH16_4_0(3*7+ 2+1) = 70
    WIDTH16_4_0(3*7+ 3+1) = 10
    WIDTH16_4_0(3*7+ 4+1) = 4
    WIDTH16_4_0(3*7+ 5+1) = 6
    WIDTH16_4_0(3*7+ 6+1) = 0

    WIDTH16_4_0(4*7+ 0+1) = 2715
    WIDTH16_4_0(4*7+ 1+1) = 2840
    WIDTH16_4_0(4*7+ 2+1) = 126
    WIDTH16_4_0(4*7+ 3+1) = 12
    WIDTH16_4_0(4*7+ 4+1) = 4
    WIDTH16_4_0(4*7+ 5+1) = 8
    WIDTH16_4_0(4*7+ 6+1) = 0
        
               
    '641
    WIDTH16_4_1(0*7+ 0+1) = 0
    WIDTH16_4_1(0*7+ 1+1) = 160
    WIDTH16_4_1(0*7+ 2+1) = 1
    WIDTH16_4_1(0*7+ 3+1) = 12
    WIDTH16_4_1(0*7+ 4+1) = 4
    WIDTH16_4_1(0*7+ 5+1) = 8
    WIDTH16_4_1(0*7+ 6+1) = 1

    WIDTH16_4_1(1*7+ 0+1) = 161
    WIDTH16_4_1(1*7+ 1+1) = 960
    WIDTH16_4_1(1*7+ 2+1) = 10
    WIDTH16_4_1(1*7+ 3+1) = 10
    WIDTH16_4_1(1*7+ 4+1) = 4
    WIDTH16_4_1(1*7+ 5+1) = 6
    WIDTH16_4_1(1*7+ 6+1) = 1

    WIDTH16_4_1(2*7+ 0+1) = 961
    WIDTH16_4_1(2*7+ 1+1) = 2014
    WIDTH16_4_1(2*7+ 2+1) = 34
    WIDTH16_4_1(2*7+ 3+1) = 8
    WIDTH16_4_1(2*7+ 4+1) = 4
    WIDTH16_4_1(2*7+ 5+1) = 4
    WIDTH16_4_1(2*7+ 6+1) = 1

    WIDTH16_4_1(3*7+ 0+1) = 2015
    WIDTH16_4_1(3*7+ 1+1) = 2714
    WIDTH16_4_1(3*7+ 2+1) = 70
    WIDTH16_4_1(3*7+ 3+1) = 6
    WIDTH16_4_1(3*7+ 4+1) = 4
    WIDTH16_4_1(3*7+ 5+1) = 3
    WIDTH16_4_1(3*7+ 6+1) = 1

    WIDTH16_4_1(4*7+ 0+1) = 2715
    WIDTH16_4_1(4*7+ 1+1) = 2840
    WIDTH16_4_1(4*7+ 2+1) = 126
    WIDTH16_4_1(4*7+ 3+1) = 4
    WIDTH16_4_1(4*7+ 4+1) = 4
    WIDTH16_4_1(4*7+ 5+1) = 1
    WIDTH16_4_1(4*7+ 6+1) = 1
    
        
    '540
    WIDTH15_4_0(0*7+ 0+1) = 0
    WIDTH15_4_0(0*7+ 1+1) = 335
    WIDTH15_4_0(0*7+ 2+1) = 4
    WIDTH15_4_0(0*7+ 3+1) = 10
    WIDTH15_4_0(0*7+ 4+1) = 4
    WIDTH15_4_0(0*7+ 5+1) = 7
    WIDTH15_4_0(0*7+ 6+1) = 1
    
    WIDTH15_4_0(1*7+ 0+1) = 336
    WIDTH15_4_0(1*7+ 1+1) = 1035
    WIDTH15_4_0(1*7+ 2+1) = 20
    WIDTH15_4_0(1*7+ 3+1) = 8
    WIDTH15_4_0(1*7+ 4+1) = 4
    WIDTH15_4_0(1*7+ 5+1) = 5
    WIDTH15_4_0(1*7+ 6+1) = 1
    
    WIDTH15_4_0(2*7+ 0+1) = 1036
    WIDTH15_4_0(2*7+ 1+1) = 1515
    WIDTH15_4_0(2*7+ 2+1) = 48
    WIDTH15_4_0(2*7+ 3+1) = 6
    WIDTH15_4_0(2*7+ 4+1) = 4
    WIDTH15_4_0(2*7+ 5+1) = 3
    WIDTH15_4_0(2*7+ 6+1) = 1
        
    WIDTH15_4_0(3*7+ 0+1) = 1516
    WIDTH15_4_0(3*7+ 1+1) = 1596
    WIDTH15_4_0(3*7+ 2+1) = 81
    WIDTH15_4_0(3*7+ 3+1) = 4
    WIDTH15_4_0(3*7+ 4+1) = 4
    WIDTH15_4_0(3*7+ 5+1) = 1
    WIDTH15_4_0(3*7+ 6+1) = 1
    
    
    '541
    WIDTH15_4_1(0*7+ 0+1) = 0
    WIDTH15_4_1(0*7+ 1+1) = 335
    WIDTH15_4_1(0*7+ 2+1) = 4
    WIDTH15_4_1(0*7+ 3+1) = 5
    WIDTH15_4_1(0*7+ 4+1) = 4
    WIDTH15_4_1(0*7+ 5+1) = 2
    WIDTH15_4_1(0*7+ 6+1) = 0
     
    WIDTH15_4_1(1*7+ 0+1) = 336
    WIDTH15_4_1(1*7+ 1+1) = 1035
    WIDTH15_4_1(1*7+ 2+1) = 20
    WIDTH15_4_1(1*7+ 3+1) = 7
    WIDTH15_4_1(1*7+ 4+1) = 4
    WIDTH15_4_1(1*7+ 5+1) = 4
    WIDTH15_4_1(1*7+ 6+1) = 0
    
    WIDTH15_4_1(2*7+ 0+1) = 1036
    WIDTH15_4_1(2*7+ 1+1) = 1515
    WIDTH15_4_1(2*7+ 2+1) = 48
    WIDTH15_4_1(2*7+ 3+1) = 9
    WIDTH15_4_1(2*7+ 4+1) = 4
    WIDTH15_4_1(2*7+ 5+1) = 6
    WIDTH15_4_1(2*7+ 6+1) = 0
    
    WIDTH15_4_1(3*7+ 0+1) = 1516
    WIDTH15_4_1(3*7+ 1+1) = 1596
    WIDTH15_4_1(3*7+ 2+1) = 81
    WIDTH15_4_1(3*7+ 3+1) = 11
    WIDTH15_4_1(3*7+ 4+1) = 4
    WIDTH15_4_1(3*7+ 5+1) = 8
    WIDTH15_4_1(3*7+ 6+1) = 0
    
             
    debugstr = ""
    cd = ""    
    filtereddata = ""
    result = ""

    datalength = Len(data)
    
    
    barcodechar = ""
    For x = 0 To datalength - 1
  
        barcodechar = Mid(data, x + 1, 1)
        If (AscW(barcodechar) <= AscW("9")) And (AscW(barcodechar) >= AscW("0")) Then
             filtereddata =  filtereddata + barcodechar
        End If

    Next x

    filteredlength = Len(filtereddata)

    If (filteredlength > 14) Then          
            filtereddata = Left(filtereddata,14)
    End If
     
    If (filteredlength < 14) Then
        addcharlength = 14 - filteredlength - 1
        For x = 0 To addcharlength - 1
            filtereddata = "0" + filtereddata
        Next x

	Dim cdresult As String
	Dim cv As number
	Dim multi As number
	Dim total As number
	
    	cv = 0
    	multi = 3
    	total = 0
    	cdresult = ""
    
    	For x = 1 To Len(filtereddata)
          If (Asc(Mid(filtereddata, x, 1)) - 48 <= 9 And Asc(Mid(filtereddata, x, 1)) - 48 >= 0) Then
            	cdresult = cdresult + Mid(filtereddata, x, 1)
          End If
    	Next x

    	For x = 1 To Len(cdresult)
          cv = Asc(Mid(cdresult, x, 1)) - 48
          total = total + cv * multi
          If (multi = 3) Then
            multi = 1
          Else
            multi = 3
          End If
            
    	Next x
    
        Dim modresult As number
        modresult = total Mod 10
        If (modresult <> 0) Then
            modresult = 10 - modresult
        End If
    
        cdresult = CStr(modresult,0)
        filtereddata = filtereddata + cdresult

    End If
    
       
    humanText = "(01)" + right(filtereddata, 14)    
    filtereddata = left(filtereddata, 13) 'Exclude Check Digit
    
    'ver 1.1
    If (linkage = 1) Then
        filtereddata = "1" + filtereddata
    End If
    
    filteredlength = Len(filtereddata)    
    valuez = 0
    For x = 0 To (filteredlength - 1)
        tempChar = Mid(filtereddata, x + 1, 1)
        tempasc = AscW(tempChar)
        valuez = tempasc - 48 + (valuez * 10)
    Next x
    
    
    sumx = 0
    
    leftz = valuez / 4537077
    
    'Check
    leftx = Int(leftz)
    rightz = valuez - leftx * 4537077
    'rightz = valuez mod 4537077
    
    rightx = rightz
    
    data1 = Int(leftx / 1597)
    data2 = leftx Mod 1597
    'data3 = Int(rightx / 1597)
    'data4 = rightx Mod 1597
    data3 = Int((valuez mod 4537077) / 1597)
    data4 = Int((valuez mod 4537077) mod 1597)

    
    'formula = cstr(data1) + " " + cstr(data2) + cstr(data3) + cstr(data4)
        
    Dim maskval1,maskval2 as number
    Dim maskdiv1,maskdiv2 as number
    Dim masksum as number
    Dim mz as number

    ''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data1, 1, 16, widthsodd)
     For x = 0 To 4
                
            If (data1 >= WIDTH16_4_1(x*7+ 0+1) And data1 <= WIDTH16_4_1(x*7+ 1+1)) Then    
                            '''retval = getGS1widths(Int((data1 - WIDTH16_4_1(x*7+ 0+1)) / WIDTH16_4_1(x*7+ 2+1)), WIDTH16_4_1(x*7+ 3+1), WIDTH16_4_1(x*7+ 4+1), WIDTH16_4_1(x*7+5+1), WIDTH16_4_1(x*7+ 6+1), widths)
                            valpp = Int((data1 - WIDTH16_4_1(x*7+ 0+1)) / WIDTH16_4_1(x*7+ 2+1))
                        	npp  = WIDTH16_4_1(x*7+ 3+1)
                        	elements  = WIDTH16_4_1(x*7+ 4+1)
                        	maxWidth = WIDTH16_4_1(x*7+5+1)
                        	noNarrow = WIDTH16_4_1(x*7+ 6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                
                                'Bitwise OR
                                'narrowMask = narrowMask Or tempMask                                
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31
        
                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then 'or                                           
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum                                
                        
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        

                                            End If




                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))

                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31
        
                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    'And (Not 
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum                                

                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthsodd(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthsodd(baryy+1) = npp
    


            End If                
     Next x
       

    ''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data1, 0, 16, widthseven)
    For x = 0 To 4
                If (data1 >= WIDTH16_4_0(x*7+0+1) And data1 <= WIDTH16_4_0(x*7+1+1)) Then             
                    '''retval = getGS1widths(Int((data - WIDTH16_4_0(x, 0)) Mod WIDTH16_4_0(x, 2)), WIDTH16_4_0(x, 3), WIDTH16_4_0(x, 4), WIDTH16_4_0(x, 5), WIDTH16_4_0(x, 6), widths)

                        	valpp = Int((data1 - WIDTH16_4_0(x*7+ 0+1)) Mod WIDTH16_4_0(x*7+ 2+1))
                        	npp  = WIDTH16_4_0(x*7+ 3+1)
                        	elements  = WIDTH16_4_0(x*7+ 4+1)
                        	maxWidth = WIDTH16_4_0(x*7+ 5+1)
                        	noNarrow = WIDTH16_4_0(x*7+ 6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                'narrowMask = narrowMask Or tempMask
                                'Bitwise Operations                                            
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31

                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then    'OR
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum     
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        


                                            End If
                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))    
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))
                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31

                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum     




                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthseven(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthseven(baryy+1) = npp    
                
                End If
    Next x

  
    
    For x = 0 To 3
        
        results1odd(x+1) = widthsodd(x+1)
        results1even(x+1) = widthseven(x+1)
        sumx = sumx + checksum(0*8+ (x * 2)+1) * widthsodd(x+1) + checksum(0*8+ (x * 2) + 1+1) * widthseven(x+1)

        'debugstr =  debugstr + cstr(results1odd(x+1)) + "," + cstr(results1even(x+1)) + ","
        
    
    Next x
    
    
    '''''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data2, 1, 15, widthsodd)
    For x = 0 To 3
           If (data2 >= WIDTH15_4_1(x*7+ 0+1) And data2 <= WIDTH15_4_1(x*7+ 1+1)) Then

                        'retval = getGS1widths(Int((data2 - WIDTH15_4_1(x*7+ 0+1)) Mod WIDTH15_4_1(x*7+ 2+1)), WIDTH15_4_1(x*7+ 3+1), WIDTH15_4_1(x*7+ 4+1), WIDTH15_4_1(x*7+ 5+1), WIDTH15_4_1(x*7+ 6+1), widths)
    
                    	valpp = Int((data2 - WIDTH15_4_1(x*7+ 0+1)) Mod WIDTH15_4_1(x*7+ 2+1))
                    	npp  = WIDTH15_4_1(x*7+ 3+1) 
                    	elements = WIDTH15_4_1(x*7+ 4+1)
                    	maxWidth = WIDTH15_4_1(x*7+ 5+1) 
                    	noNarrow = WIDTH15_4_1(x*7+ 6+1)
               
                        narrowMask = 0
                        For baryy = 0 To (elements - 1 - 1)
    
                            'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                            elmWidth = 1
                            tempMask = 2 ^ baryy
                            'narrowMask = narrowMask Or tempMask
                            'Bitwise Operations                                            
                            maskdiv1 = narrowMask
                            maskdiv2 = tempMask
                            masksum = 0
                            For mz = 0 to 31

                                maskval1 = maskdiv1 mod 2
                                maskval2 = maskdiv2 mod 2

                                if ((maskval1=1) or (maskval2=1)) then   
                                       masksum =  masksum  +  2^mz
                                end if

                                maskdiv1 = Int(maskdiv1 /2) 
                                maskdiv2 = Int(maskdiv2 /2)

                            Next mz        
                            narrowMask = masksum     

            
                            Do While (1 > 0)
        
                                        ' get all combinations
                                        'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                        nz = npp - elmWidth - 1
                                        rz = elements - baryy - 2
                                        If (nz - rz > rz) Then
        
                                            minDenomz = rz
                                            maxDenomz = nz - rz
        
                                        Else
                                            minDenomz = nz - rz
                                            maxDenomz = rz
                                        End If
        
        
                                        valz = 1
                                        jz = 1
                                        For iz = nz To maxDenomz + 1 Step -1
        
                                            valz = valz * iz
                                            If (jz <= minDenomz) Then
                                                valz = valz / jz
                                                jz = jz + 1
                                            End If
            
                                        Next iz
                                        Do While (jz <= minDenomz)
            
                                            valz = valz / jz
                                            jz = jz + 1
            
                                        Loop
                                        subVal = valz


                                        ' less combinations with no single module element
                                        'if ((!noNarrow) and (narrowMask==0) and
                                        If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                            'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                            nz = npp - elmWidth - (elements - baryy)
                                            rz = elements - baryy - 2

                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = subVal - valz 
        


                                        End If
                                        ' less combinations with elements > maxval
                                        If (elements - baryy - 1 > 1) Then
                    
                                            'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                            lessVal = 0
                                            mxwElement = npp - elmWidth - (elements - baryy - 2)
                                            Do While (mxwElement > maxWidth)
                                                
                                                    'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                    nz = npp - elmWidth - mxwElement - 1
                                                    rz = elements - baryy - 3

                                                    If (nz - rz > rz) Then
        
                                                        minDenomz = rz
                                                        maxDenomz = nz - rz
        
                                                    Else
                                                        minDenomz = nz - rz
                                                        maxDenomz = rz
                                                    End If        
        
                                                    valz = 1
                                                    jz = 1
                                                    For iz = nz To maxDenomz + 1 Step -1
        
                                                        valz = valz * iz
                                                        If (jz <= minDenomz) Then
                                                            valz = valz / jz
                                                            jz = jz + 1
                                                        End If
            
                                                    Next iz
                                                    Do While (jz <= minDenomz)
            
                                                        valz = valz / jz
                                                        jz = jz + 1
            
                                                    Loop                            
                                                    lessVal = lessVal + valz 

                                                    mxwElement = mxwElement - 1
                        
                                                Loop
                                                'to return        
                                                subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                        ElseIf (npp - elmWidth > maxWidth) Then
                    
                                            subVal = subVal - 1
                        
                                        End If
                                        valpp = valpp - subVal
                                        If (valpp < 0) Then
                                            Exit Do
                                        End If
                    
                    
                                        elmWidth = elmWidth + 1
                                        tempMask = 2 ^ baryy
                                        'narrowMask = narrowMask And (Not (tempMask))
                                        'Bitwise Operations                                            
                                        maskdiv1 = narrowMask
                                        maskdiv2 = tempMask
                                        masksum = 0
                                        For mz = 0 to 31

                                            maskval1 = maskdiv1 mod 2
                                            maskval2 = maskdiv2 mod 2

                                            if ((maskval1=1) and (maskval2=0)) then 
                                                   masksum =  masksum  +  2^mz
                                            end if

                                            maskdiv1 = Int(maskdiv1 /2) 
                                            maskdiv2 = Int(maskdiv2 /2)

                                        Next mz        
                                        narrowMask = masksum     



                            Loop
            
                            valpp = valpp + subVal
                            npp = npp - elmWidth
                            widthsodd(baryy+1) = elmWidth        
    
                        Next baryy    
                        widthsodd(baryy+1) = npp

           End If
    Next x

    '''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data2, 0, 15, widthseven)
    For x = 0 To 3

                If (data2 >= WIDTH15_4_0(x*7+ 0+1) And data2 <= WIDTH15_4_0(x*7+ 1+1)) Then                    

                'retval = getGS1widths(Int((data2 - WIDTH15_4_0(x*7+ 0+1)) / WIDTH15_4_0(x*7+ 2+1)), WIDTH15_4_0(x*7+ 3+1), WIDTH15_4_0(x*7+ 4+1), WIDTH15_4_0(x*7+ 5+1), WIDTH15_4_0(x*7+ 6+1), widths)

                valpp = Int((data2 - WIDTH15_4_0(x*7+ 0+1)) / WIDTH15_4_0(x*7+ 2+1))
            	npp   = WIDTH15_4_0(x*7+ 3+1)
            	elements  = WIDTH15_4_0(x*7+ 4+1)
            	maxWidth = WIDTH15_4_0(x*7+ 5+1) 
            	noNarrow = WIDTH15_4_0(x*7+ 6+1)
               
                narrowMask = 0
                For baryy = 0 To (elements - 1 - 1)
    
                    'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                    elmWidth = 1
                    tempMask = 2 ^ baryy
                    'narrowMask = narrowMask Or tempMask
                    'Bitwise Operations                                            
                    maskdiv1 = narrowMask
                    maskdiv2 = tempMask
                    masksum = 0
                    For mz = 0 to 31

                        maskval1 = maskdiv1 mod 2
                        maskval2 = maskdiv2 mod 2

                        if ((maskval1=1) or (maskval2=1)) then    'OR
                               masksum =  masksum  +  2^mz
                        end if

                        maskdiv1 = Int(maskdiv1 /2) 
                        maskdiv2 = Int(maskdiv2 /2)

                    Next mz        
                    narrowMask = masksum     



            
                    Do While (1 > 0)
        
                                ' get all combinations
                                'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                nz = npp - elmWidth - 1
                                rz = elements - baryy - 2
                                If (nz - rz > rz) Then
        
                                    minDenomz = rz
                                    maxDenomz = nz - rz
        
                                Else
                                    minDenomz = nz - rz
                                    maxDenomz = rz
                                End If
        
        
                                valz = 1
                                jz = 1
                                For iz = nz To maxDenomz + 1 Step -1
        
                                    valz = valz * iz
                                    If (jz <= minDenomz) Then
                                        valz = valz / jz
                                        jz = jz + 1
                                    End If
            
                                Next iz
                                Do While (jz <= minDenomz)
            
                                    valz = valz / jz
                                    jz = jz + 1
            
                                Loop
                                subVal = valz


                                ' less combinations with no single module element
                                'if ((!noNarrow) and (narrowMask==0) and
                                If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                    'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                    nz = npp - elmWidth - (elements - baryy)
                                    rz = elements - baryy - 2

                                    If (nz - rz > rz) Then
        
                                        minDenomz = rz
                                        maxDenomz = nz - rz
        
                                    Else
                                        minDenomz = nz - rz
                                        maxDenomz = rz
                                    End If
        
        
                                    valz = 1
                                    jz = 1
                                    For iz = nz To maxDenomz + 1 Step -1
        
                                        valz = valz * iz
                                        If (jz <= minDenomz) Then
                                            valz = valz / jz
                                            jz = jz + 1
                                        End If
            
                                    Next iz
                                    Do While (jz <= minDenomz)
            
                                        valz = valz / jz
                                        jz = jz + 1
            
                                    Loop
                                    subVal = subVal - valz 
        


                                End If
                                ' less combinations with elements > maxval
                                If (elements - baryy - 1 > 1) Then
                    
                                    'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                    lessVal = 0
                                    mxwElement = npp - elmWidth - (elements - baryy - 2)
                                    Do While (mxwElement > maxWidth)
                                                
                                            'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                            nz = npp - elmWidth - mxwElement - 1
                                            rz = elements - baryy - 3

                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop                            
                                            lessVal = lessVal + valz 

                                            mxwElement = mxwElement - 1
                        
                                        Loop
                                        'to return        
                                         subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                ElseIf (npp - elmWidth > maxWidth) Then
                    
                                    subVal = subVal - 1
                        
                                End If
                                valpp = valpp - subVal
                                If (valpp < 0) Then
                                    Exit Do
                                End If
                    
                    
                                elmWidth = elmWidth + 1
                                tempMask = 2 ^ baryy
                                'narrowMask = narrowMask And (Not (tempMask))
                                'Bitwise Operations                                            
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31

                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) and (maskval2=0)) then    
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum     


                    Loop
            
                    valpp = valpp + subVal
                    npp = npp - elmWidth
                     widthseven(baryy+1) = elmWidth        
    
                Next baryy    
                widthseven(baryy+1) = npp   


                End If
    Next x


    For x = 0 To 3
        
        results2odd(x+1) = widthsodd(x+1)
        results2even(x+1) = widthseven(x+1)
        sumx = sumx + checksum(1*8+ (x * 2)+1) * widthsodd(x+1) + checksum(1*8+ (x * 2) + 1+1) * widthseven(x+1)
        
        'debugstr =  debugstr + cstr(results2odd(x+1)) + "," + cstr(results2even(x+1)) + "," 

    Next x
    
    
    '''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data3, 1, 16, widthsodd)
    For x = 0 To 4
                
                If (data3 >= WIDTH16_4_1(x*7+ 0+1) And data3 <= WIDTH16_4_1(x*7+ 1+1)) Then                 
                                
                                'retval = getGS1widths(Int((data3 - WIDTH16_4_1(x*7+ 0)) / WIDTH16_4_1(x*7+ 2)), WIDTH16_4_1(x*7+ 3), WIDTH16_4_1(x*7+ 4), WIDTH16_4_1(x*7+ 5), WIDTH16_4_1(x*7+ 6), widths)
                                valpp = Int((data3 - WIDTH16_4_1(x*7+0+1))/WIDTH16_4_1(x*7+ 2+1))                                
                            	npp  = WIDTH16_4_1(x*7+ 3+1)
                            	elements  =  WIDTH16_4_1(x*7+ 4+1)
                            	maxWidth  =  WIDTH16_4_1(x*7+ 5+1) 
                            	noNarrow  =  WIDTH16_4_1(x*7+ 6+1)
               
                                narrowMask = 0
                                For baryy = 0 To (elements - 1 - 1)
    
                                    'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                    elmWidth = 1
                                    tempMask = 2 ^ baryy
                                    'narrowMask = narrowMask Or tempMask
                                    'Bitwise Operations                                            
                                     maskdiv1 = narrowMask
                                     maskdiv2 = tempMask
                                     masksum = 0
                                     For mz = 0 to 31

                                            maskval1 = maskdiv1 mod 2
                                            maskval2 = maskdiv2 mod 2

                                            if ((maskval1=1) or (maskval2=1)) then 
                                                   masksum =  masksum  +  2^mz
                                            end if

                                            maskdiv1 = Int(maskdiv1 /2) 
                                            maskdiv2 = Int(maskdiv2 /2)

                                     Next mz        
                                     narrowMask = masksum     


            
                                    Do While (1 > 0)
        
                                                ' get all combinations
                                                'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                                nz = npp - elmWidth - 1
                                                rz = elements - baryy - 2
                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = valz


                                                ' less combinations with no single module element
                                                'if ((!noNarrow) and (narrowMask==0) and
                                                If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                    'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                    nz = npp - elmWidth - (elements - baryy)
                                                    rz = elements - baryy - 2

                                                    If (nz - rz > rz) Then
        
                                                        minDenomz = rz
                                                        maxDenomz = nz - rz
        
                                                    Else
                                                        minDenomz = nz - rz
                                                        maxDenomz = rz
                                                    End If
        
        
                                                    valz = 1
                                                    jz = 1
                                                    For iz = nz To maxDenomz + 1 Step -1
        
                                                        valz = valz * iz
                                                        If (jz <= minDenomz) Then
                                                            valz = valz / jz
                                                            jz = jz + 1
                                                        End If
            
                                                    Next iz
                                                    Do While (jz <= minDenomz)
            
                                                        valz = valz / jz
                                                        jz = jz + 1
            
                                                    Loop
                                                    subVal = subVal - valz 
        


                                                End If
                                                ' less combinations with elements > maxval
                                                If (elements - baryy - 1 > 1) Then
                    
                                                    'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                    lessVal = 0
                                                    mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                    Do While (mxwElement > maxWidth)
                                                
                                                            'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                            nz = npp - elmWidth - mxwElement - 1
                                                            rz = elements - baryy - 3

                                                            If (nz - rz > rz) Then
        
                                                                minDenomz = rz
                                                                maxDenomz = nz - rz
        
                                                            Else
                                                                minDenomz = nz - rz
                                                                maxDenomz = rz
                                                            End If        
        
                                                            valz = 1
                                                            jz = 1
                                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                                valz = valz * iz
                                                                If (jz <= minDenomz) Then
                                                                    valz = valz / jz
                                                                    jz = jz + 1
                                                                End If
            
                                                            Next iz
                                                            Do While (jz <= minDenomz)
            
                                                                valz = valz / jz
                                                                jz = jz + 1
            
                                                            Loop                            
                                                            lessVal = lessVal + valz 

                                                            mxwElement = mxwElement - 1
                        
                                                        Loop
                                                        'to return        
                                                        subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                                ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                    subVal = subVal - 1
                        
                                                End If
                                                valpp = valpp - subVal
                                                If (valpp < 0) Then
                                                    Exit Do
                                                End If
                    
                    
                                                elmWidth = elmWidth + 1
                                                tempMask = 2 ^ baryy
                                                'narrowMask = narrowMask And (Not (tempMask))
                                                'Bitwise Operations                                            
                                                maskdiv1 = narrowMask
                                                maskdiv2 = tempMask
                                                masksum = 0
                                                For mz = 0 to 31

                                                    maskval1 = maskdiv1 mod 2
                                                    maskval2 = maskdiv2 mod 2

                                                    if ((maskval1=1) and (maskval2=0)) then 
                                                           masksum =  masksum  +  2^mz
                                                    end if

                                                    maskdiv1 = Int(maskdiv1 /2) 
                                                    maskdiv2 = Int(maskdiv2 /2)

                                                Next mz        
                                                narrowMask = masksum     



                                    Loop
            
                                    valpp = valpp + subVal
                                    npp = npp - elmWidth
                                    widthsodd(baryy+1) = elmWidth        
    
                                Next baryy    
                                widthsodd(baryy+1) = npp    

                End If
                
    Next x


    '''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data3, 0, 16, widthseven)
    For x = 0 To 4

                If (data3 >= WIDTH16_4_0(x*7+ 0+1) And data3<= WIDTH16_4_0(x*7+ 1+1)) Then 

                                'retval = getGS1widths(Int((data3 - WIDTH16_4_0(x*7+ 0+1)) Mod WIDTH16_4_0(x*7+ 2+1)), WIDTH16_4_0(x*7+ 3+1), WIDTH16_4_0(x*7+ 4+1), WIDTH16_4_0(x*7+ 5+1), WIDTH16_4_0(x*7+ 6+1), widths)                                
                                valpp = Int((data3 - WIDTH16_4_0(x*7+ 0+1)) Mod WIDTH16_4_0(x*7+ 2+1))                                                       
                            	npp  =  WIDTH16_4_0(x*7+ 3+1)
                            	elements  = WIDTH16_4_0(x*7+ 4+1)
                            	maxWidth  = WIDTH16_4_0(x*7+ 5+1) 
                            	noNarrow  = WIDTH16_4_0(x*7+ 6+1)
               
                                narrowMask = 0
                                For baryy = 0 To (elements - 1 - 1)
    
                                    'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                    elmWidth = 1
                                    tempMask = 2 ^ baryy
                                    'narrowMask = narrowMask Or tempMask
                                    'Bitwise Operations                                            
                                     maskdiv1 = narrowMask
                                     maskdiv2 = tempMask
                                     masksum = 0
                                     For mz = 0 to 31

                                            maskval1 = maskdiv1 mod 2
                                            maskval2 = maskdiv2 mod 2

                                            if ((maskval1=1) or (maskval2=1)) then 
                                                   masksum =  masksum  +  2^mz
                                            end if

                                            maskdiv1 = Int(maskdiv1 /2) 
                                            maskdiv2 = Int(maskdiv2 /2)

                                     Next mz        
                                     narrowMask = masksum     
                                     
            
                                     Do While (1 > 0)
        
                                                ' get all combinations
                                                'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                                nz = npp - elmWidth - 1
                                                rz = elements - baryy - 2
                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = valz
                                                
                                                ' less combinations with no single module element
                                                'if ((!noNarrow) and (narrowMask==0) and
                                                If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                    'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                    nz = npp - elmWidth - (elements - baryy)
                                                    rz = elements - baryy - 2

                                                    If (nz - rz > rz) Then
        
                                                        minDenomz = rz
                                                        maxDenomz = nz - rz
        
                                                    Else
                                                        minDenomz = nz - rz
                                                        maxDenomz = rz
                                                    End If
        
        
                                                    valz = 1
                                                    jz = 1
                                                    For iz = nz To maxDenomz + 1 Step -1
        
                                                        valz = valz * iz
                                                        If (jz <= minDenomz) Then
                                                            valz = valz / jz
                                                            jz = jz + 1
                                                        End If
            
                                                    Next iz
                                                    Do While (jz <= minDenomz)
            
                                                        valz = valz / jz
                                                        jz = jz + 1
            
                                                    Loop
                                                    subVal = subVal - valz 

                                                End If
                                                
                                                ' less combinations with elements > maxval
                                                If (elements - baryy - 1 > 1) Then
                    
                                                    'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                    lessVal = 0
                                                    mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                    
                                                    
                                                    Do While (mxwElement > maxWidth)
                                                
                                                            'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                            nz = npp - elmWidth - mxwElement - 1
                                                            rz = elements - baryy - 3

                                                            If (nz - rz > rz) Then
        
                                                                minDenomz = rz
                                                                maxDenomz = nz - rz
        
                                                            Else
                                                                minDenomz = nz - rz
                                                                maxDenomz = rz
                                                            End If        
        
                                                            valz = 1
                                                            jz = 1
                                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                                valz = valz * iz
                                                                If (jz <= minDenomz) Then
                                                                    valz = valz / jz
                                                                    jz = jz + 1
                                                                End If
            
                                                            Next iz
                                                    


                                                            Do While (jz <= minDenomz)
            
                                                                valz = valz / jz
                                                                jz = jz + 1
            
                                                            Loop                            
                                                            lessVal = lessVal + valz 
                                                            

                                                            mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                                            
                                                ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                    subVal = subVal - 1
                        
                                                End If
                                                valpp = valpp - subVal
                                             
                                                If (valpp < 0) Then
                                                    Exit Do
                                                End If
                    
                    
                                                elmWidth = elmWidth + 1
                                                tempMask = 2 ^ baryy
                                                'narrowMask = narrowMask And (Not (tempMask))
                                                'Bitwise Operations                                            
                                                 maskdiv1 = narrowMask
                                                 maskdiv2 = tempMask
                                                 masksum = 0
                                                 For mz = 0 to 31

                                                    maskval1 = maskdiv1 mod 2
                                                    maskval2 = maskdiv2 mod 2

                                                    if ((maskval1=1) and (maskval2=0)) then 
                                                           masksum =  masksum  +  2^mz
                                                    end if

                                                    maskdiv1 = Int(maskdiv1 /2) 
                                                    maskdiv2 = Int(maskdiv2 /2)

                                                 Next mz        
                                                 narrowMask = masksum     
                                                 


                                    Loop
            
                                    valpp = valpp + subVal
                                    npp = npp - elmWidth
                                    widthseven(baryy+1) = elmWidth        
                                    
    
                                Next baryy    
                                widthseven(baryy+1) = npp    
                
                End If
    Next x
    
    

    For x = 0 To 3        
        
        results3odd(x+1) = widthsodd(x+1)
        results3even(x+1) = widthseven(x+1)
        sumx = sumx + checksum(2*8+ (x * 2)+1) * widthsodd(x+1) + checksum(2*8+ (x * 2) + 1+1) * widthseven(x+1)

        'debugstr =  debugstr + cstr(results3odd(x+1)) + "," + cstr(results3even(x+1)) + "," 
        
    Next x    
    
    ''''''''''''''''''''''''''''''''''''''''''''''   
    'retval = getGS1W(data4, 1, 15, widthsodd)
    For x = 0 To 3
                If (data4 >= WIDTH15_4_1(x*7+0+1) And data4 <= WIDTH15_4_1(x*7+1+1)) Then

                                'retval = getGS1widths(Int((data4 - WIDTH15_4_1(x*7+0)) Mod WIDTH15_4_1(x*7+2)), WIDTH15_4_1(x*7+3), WIDTH15_4_1(x*7+4), WIDTH15_4_1(x*7+5), WIDTH15_4_1(x*7+6), widths)   
                                valpp = Int((data4 - WIDTH15_4_1(x*7+0+1)) Mod WIDTH15_4_1(x*7+2+1))
                            	npp  =  WIDTH15_4_1(x*7+3+1) 
                            	elements  = WIDTH15_4_1(x*7+4+1) 
                            	maxWidth  = WIDTH15_4_1(x*7+5+1) 
                            	noNarrow  = WIDTH15_4_1(x*7+6+1)
               
                                narrowMask = 0
                                For baryy = 0 To (elements - 1 - 1)
    
                                    'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                    elmWidth = 1
                                    tempMask = 2 ^ baryy
                                    'narrowMask = narrowMask Or tempMask
                                    'Bitwise Operations                                            
                                    maskdiv1 = narrowMask
                                    maskdiv2 = tempMask
                                    masksum = 0
                                    For mz = 0 to 31

                                            maskval1 = maskdiv1 mod 2
                                            maskval2 = maskdiv2 mod 2

                                            if ((maskval1=1) or (maskval2=1)) then 
                                                   masksum =  masksum  +  2^mz
                                            end if

                                            maskdiv1 = Int(maskdiv1 /2) 
                                            maskdiv2 = Int(maskdiv2 /2)

                                    Next mz        
                                    narrowMask = masksum     

            
                                    Do While (1 > 0)
        
                                                ' get all combinations
                                                'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                                nz = npp - elmWidth - 1
                                                rz = elements - baryy - 2
                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = valz


                                                ' less combinations with no single module element
                                                'if ((!noNarrow) and (narrowMask==0) and
                                                If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                    'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                    nz = npp - elmWidth - (elements - baryy)
                                                    rz = elements - baryy - 2

                                                    If (nz - rz > rz) Then
        
                                                        minDenomz = rz
                                                        maxDenomz = nz - rz
        
                                                    Else
                                                        minDenomz = nz - rz
                                                        maxDenomz = rz
                                                    End If
        
        
                                                    valz = 1
                                                    jz = 1
                                                    For iz = nz To maxDenomz + 1 Step -1
        
                                                        valz = valz * iz
                                                        If (jz <= minDenomz) Then
                                                            valz = valz / jz
                                                            jz = jz + 1
                                                        End If
            
                                                    Next iz
                                                    Do While (jz <= minDenomz)
            
                                                        valz = valz / jz
                                                        jz = jz + 1
            
                                                    Loop
                                                    subVal = subVal - valz 
        


                                                End If
                                                ' less combinations with elements > maxval
                                                If (elements - baryy - 1 > 1) Then
                    
                                                    'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                    lessVal = 0
                                                    mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                    Do While (mxwElement > maxWidth)
                                                
                                                            'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                            nz = npp - elmWidth - mxwElement - 1
                                                            rz = elements - baryy - 3

                                                            If (nz - rz > rz) Then
        
                                                                minDenomz = rz
                                                                maxDenomz = nz - rz
        
                                                            Else
                                                                minDenomz = nz - rz
                                                                maxDenomz = rz
                                                            End If        
        
                                                            valz = 1
                                                            jz = 1
                                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                                valz = valz * iz
                                                                If (jz <= minDenomz) Then
                                                                    valz = valz / jz
                                                                    jz = jz + 1
                                                                End If
            
                                                            Next iz
                                                            Do While (jz <= minDenomz)
            
                                                                valz = valz / jz
                                                                jz = jz + 1
            
                                                            Loop                            
                                                            lessVal = lessVal + valz 

                                                            mxwElement = mxwElement - 1
                        
                                                        Loop
                                                        'to return        
                                                        subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                                ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                    subVal = subVal - 1
                        
                                                End If
                                                valpp = valpp - subVal
                                                If (valpp < 0) Then
                                                    Exit Do
                                                End If
                    
                    
                                                elmWidth = elmWidth + 1
                                                tempMask = 2 ^ baryy
                                                'narrowMask = narrowMask And (Not (tempMask))
                                                'Bitwise Operations                                            
                                                maskdiv1 = narrowMask
                                                maskdiv2 = tempMask
                                                masksum = 0
                                                For mz = 0 to 31

                                                    maskval1 = maskdiv1 mod 2
                                                    maskval2 = maskdiv2 mod 2

                                                    if ((maskval1=1) and (maskval2=0)) then    'OR
                                                           masksum =  masksum  +  2^mz
                                                    end if

                                                    maskdiv1 = Int(maskdiv1 /2) 
                                                    maskdiv2 = Int(maskdiv2 /2)

                                                Next mz        
                                                narrowMask = masksum     

                                    Loop
            
                                    valpp = valpp + subVal
                                    npp = npp - elmWidth
                                    widthsodd(baryy+1) = elmWidth        
    
                                Next baryy    
                                widthsodd(baryy+1) = npp    



                End If
    Next x

    '''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1W(data4, 0, 15, widthseven) 
    For x = 0 To 3
            If (data4 >= WIDTH15_4_0(x*7+ 0+1) And data4 <= WIDTH15_4_0(x*7+ 1+1)) Then

                                'retval = getGS1widths(Int((data4 - WIDTH15_4_0(x*7+ 0+1)) / WIDTH15_4_0(x*7+ 2+1)), WIDTH15_4_0(x*7+ 3+1), WIDTH15_4_0(x*7+ 4+1), WIDTH15_4_0(x*7+ 5+1), WIDTH15_4_0(x*7+ 6+1), widths)                                
                                valpp = Int((data4 - WIDTH15_4_0(x*7+ 0+1)) / WIDTH15_4_0(x*7+ 2+1)) 
                            	npp  =  WIDTH15_4_0(x*7+ 3+1) 
                            	elements  = WIDTH15_4_0(x*7+ 4+1) 
                            	maxWidth  = WIDTH15_4_0(x*7+ 5+1) 
                            	noNarrow  = WIDTH15_4_0(x*7+ 6+1)
               
                                narrowMask = 0
                                For baryy = 0 To (elements - 1 - 1)
    
                                    'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                    elmWidth = 1
                                    tempMask = 2 ^ baryy
                                    'narrowMask = narrowMask Or tempMask
                                    'Bitwise Operations                                            
                                    maskdiv1 = narrowMask
                                    maskdiv2 = tempMask
                                    masksum = 0
                                    For mz = 0 to 31

                                        maskval1 = maskdiv1 mod 2
                                        maskval2 = maskdiv2 mod 2

                                        if ((maskval1=1) or (maskval2=1)) then    'OR
                                               masksum =  masksum  +  2^mz
                                        end if

                                        maskdiv1 = Int(maskdiv1 /2) 
                                        maskdiv2 = Int(maskdiv2 /2)

                                    Next mz        
                                    narrowMask = masksum     
            
                                    Do While (1 > 0)
        
                                                ' get all combinations
                                                'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                                nz = npp - elmWidth - 1
                                                rz = elements - baryy - 2
                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = valz


                                                ' less combinations with no single module element
                                                'if ((!noNarrow) and (narrowMask==0) and
                                                If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                    'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                    nz = npp - elmWidth - (elements - baryy)
                                                    rz = elements - baryy - 2

                                                    If (nz - rz > rz) Then
        
                                                        minDenomz = rz
                                                        maxDenomz = nz - rz
        
                                                    Else
                                                        minDenomz = nz - rz
                                                        maxDenomz = rz
                                                    End If
        
        
                                                    valz = 1
                                                    jz = 1
                                                    For iz = nz To maxDenomz + 1 Step -1
        
                                                        valz = valz * iz
                                                        If (jz <= minDenomz) Then
                                                            valz = valz / jz
                                                            jz = jz + 1
                                                        End If
            
                                                    Next iz
                                                    Do While (jz <= minDenomz)
            
                                                        valz = valz / jz
                                                        jz = jz + 1
            
                                                    Loop
                                                    subVal = subVal - valz 
        


                                                End If
                                                ' less combinations with elements > maxval
                                                If (elements - baryy - 1 > 1) Then
                    
                                                    'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                    lessVal = 0
                                                    mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                    Do While (mxwElement > maxWidth)
                                                
                                                            'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                            nz = npp - elmWidth - mxwElement - 1
                                                            rz = elements - baryy - 3

                                                            If (nz - rz > rz) Then
        
                                                                minDenomz = rz
                                                                maxDenomz = nz - rz
        
                                                            Else
                                                                minDenomz = nz - rz
                                                                maxDenomz = rz
                                                            End If        
        
                                                            valz = 1
                                                            jz = 1
                                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                                valz = valz * iz
                                                                If (jz <= minDenomz) Then
                                                                    valz = valz / jz
                                                                    jz = jz + 1
                                                                End If
            
                                                            Next iz
                                                            Do While (jz <= minDenomz)
            
                                                                valz = valz / jz
                                                                jz = jz + 1
            
                                                            Loop                            
                                                            lessVal = lessVal + valz 

                                                            mxwElement = mxwElement - 1
                        
                                                        Loop
                                                        'to return        
                                                        subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                                ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                    subVal = subVal - 1
                        
                                                End If
                                                valpp = valpp - subVal
                                                If (valpp < 0) Then
                                                    Exit Do
                                                End If
                    
                    
                                                elmWidth = elmWidth + 1
                                                tempMask = 2 ^ baryy
                                                'narrowMask = narrowMask And (Not (tempMask))
                                                'Bitwise Operations                                            
                                                maskdiv1 = narrowMask
                                                maskdiv2 = tempMask
                                                masksum = 0
                                                For mz = 0 to 31

                                                    maskval1 = maskdiv1 mod 2
                                                    maskval2 = maskdiv2 mod 2

                                                    if ((maskval1=1) and (maskval2=0)) then    'OR
                                                           masksum =  masksum  +  2^mz
                                                    end if

                                                    maskdiv1 = Int(maskdiv1 /2) 
                                                    maskdiv2 = Int(maskdiv2 /2)

                                                Next mz        
                                                narrowMask = masksum     

                                    Loop
            
                                    valpp = valpp + subVal
                                    npp = npp - elmWidth
                                    widthseven(baryy+1) = elmWidth        
    
                                Next baryy    
                                widthseven(baryy+1) = npp    


            End If
    Next x



    For x = 0 To 3
        
        results4odd(x+1) = widthsodd(x+1)
        results4even(x+1) = widthseven(x+1)
        sumx = sumx + checksum(3*8+ (x * 2)+1) * widthsodd(x+1) + checksum(3*8+ (x * 2) + 1+1) * widthseven(x+1)
        
        'debugstr =  debugstr  + cstr(results4odd(x+1)) + "," + cstr(results4even(x+1)) + "," 
        
    Next x
    
    
    
        
    checksumval = sumx Mod 79
    
    '1031
    ctemp = checksumval
    If (ctemp >= 8) Then
        ctemp = ctemp + 1
    End If
        
    If (ctemp >= 72) Then
        ctemp = ctemp + 1
    End If


    cleft = Int(ctemp / 9)
    
    'MsgBox cleft
    cright = ctemp Mod 9
    
    
    result = "11" 'Left Guard
    
    For x = 0 To 3 'Data 1
        result = result + ChrW(results1odd(x+1) + 48) + ChrW(results1even(x+1) + 48)
    Next x
    
    For x = 0 To 4 'Left Check
        result = result + ChrW(GS1DATABAR14FINDERS(cleft*5+ x+1) + 48)
    Next x
    
    For x = 3 To 0 Step -1 'Data 2
        result = result + ChrW(results2even(x+1) + 48) + ChrW(results2odd(x+1) + 48)
    Next x
    
    For x = 0 To 3 'Data 4
        result = result + ChrW(results4odd(x+1) + 48) + ChrW(results4even(x+1) + 48)
    Next x
        
    For x = 4 To 0 Step -1 'Right Check
        result = result + ChrW(GS1DATABAR14FINDERS(cright*5+ x+1) + 48)
    Next x
    
    For x = 3 To 0 Step -1 'Data 3
        result = result + ChrW(results3even(x+1) + 48) + ChrW(results3odd(x+1) + 48)
    Next x
    result = result + "11" 'Right Guard
    
    
    
    'Convert to White Black White Black
    bwresult = ""
    black = 0
    For x = 0 To Len(result) - 1
    
        If (black = 0) Then
        
            bwresult = bwresult + ChrW(AscW(Mid(result, x + 1, 1)) + 48)
            black = 1
        
        Else
        
            bwresult = bwresult + ChrW(AscW(Mid(result, x + 1, 1)) + 16)
            black = 0
        
        End If

    
    Next x
    
    formula = bwresult




'======================================================================================================
' Encode_GS1DatabarLimited


    Dim data as string  
    Dim linkage as number

    'Replace "15012345678907" with your data field here  
    data = "15012345678907"    
    linkage = 0

    Dim result As String
    Dim cd As String
    Dim filtereddata As String
    Dim filteredlength as number
    Dim addcharlength As number
    Dim humanText As String
    Dim x As number
    Dim leftstr, rightstr As String
    Dim valuez, leftz, rightz As Currency
    Dim tempasc As number
    Dim leftx, rightx, data1, data2, data3, data4, sumx, cleft, cright, ctemp, checksumval As number
    Dim data5 as number
    Dim widths() As number
    Dim tempChar As String
    Dim bwresult As String
    Dim black As number
    Dim retval As number

    'getGS1widths
    Dim baryy As number
    Dim elmWidth As number
    Dim mxwElement As number
    Dim subVal, lessVal As number
    Dim narrowMask As number
    Dim tempMask As number
    Dim nz As number
    Dim rz As number
    Dim iz, jz As number
    Dim maxDenomz, minDenomz As number
    Dim valz As number
    
    Dim valpp As number
	Dim npp As number
    Dim elements  As number
   	Dim maxWidth As number
    Dim noNarrow As number
    
    Dim datalength As number
    Dim barcodechar as String

    Dim debugstr as string

    Dim widthsodd(7) As number
    Dim widthseven(7) As number
    Dim resultsleftodd(7) as number
    Dim resultslefteven(7) As number
    Dim resultsrightodd(7) As number
    Dim resultsrighteven(7) As number
    Dim CHECKSUMLIMITED(28) As number
    Dim GS1DATABARLIMITEDFINDERS(89) As String
    Dim WIDTH26_7_0(49) As number
    Dim WIDTH26_7_1(49) As number
       
    Dim maskval1,maskval2 as number
    Dim maskdiv1,maskdiv2 as number
    Dim masksum as number
    Dim mz as number
    
    '670
    WIDTH26_7_0(0*7+ 0+1) = 0
    WIDTH26_7_0(0*7+ 1+1) = 183063
    WIDTH26_7_0(0*7+ 2+1) = 28
    WIDTH26_7_0(0*7+ 3+1) = 9
    WIDTH26_7_0(0*7+ 4+1) = 7
    WIDTH26_7_0(0*7+ 5+1) = 3
    WIDTH26_7_0(0*7+ 6+1) = 0
    
            
    WIDTH26_7_0(1*7+ 0+1) = 183064
    WIDTH26_7_0(1*7+ 1+1) = 820063
    WIDTH26_7_0(1*7+ 2+1) = 728
    WIDTH26_7_0(1*7+ 3+1) = 13
    WIDTH26_7_0(1*7+ 4+1) = 7
    WIDTH26_7_0(1*7+ 5+1) = 4
    WIDTH26_7_0(1*7+ 6+1) = 0
    
    
    WIDTH26_7_0(2*7+ 0+1) = 820064
    WIDTH26_7_0(2*7+ 1+1) = 1000775
    WIDTH26_7_0(2*7+ 2+1) = 6454
    WIDTH26_7_0(2*7+ 3+1) = 17
    WIDTH26_7_0(2*7+ 4+1) = 7
    WIDTH26_7_0(2*7+ 5+1) = 6
    WIDTH26_7_0(2*7+ 6+1) = 0
    
    WIDTH26_7_0(3*7+ 0+1) = 1000776
    WIDTH26_7_0(3*7+ 1+1) = 1491020
    WIDTH26_7_0(3*7+ 2+1) = 203
    WIDTH26_7_0(3*7+ 3+1) = 11
    WIDTH26_7_0(3*7+ 4+1) = 7
    WIDTH26_7_0(3*7+ 5+1) = 4
    WIDTH26_7_0(3*7+ 6+1) = 0
    
    WIDTH26_7_0(4*7+ 0+1) = 1491021
    WIDTH26_7_0(4*7+ 1+1) = 1979844
    WIDTH26_7_0(4*7+ 2+1) = 2408
    WIDTH26_7_0(4*7+ 3+1) = 15
    WIDTH26_7_0(4*7+ 4+1) = 7
    WIDTH26_7_0(4*7+ 5+1) = 5
    WIDTH26_7_0(4*7+ 6+1) = 0
    
    WIDTH26_7_0(5*7+ 0+1) = 1979845
    WIDTH26_7_0(5*7+ 1+1) = 1996938
    WIDTH26_7_0(5*7+ 2+1) = 1
    WIDTH26_7_0(5*7+ 3+1) = 7
    WIDTH26_7_0(5*7+ 4+1) = 7
    WIDTH26_7_0(5*7+ 5+1) = 1
    WIDTH26_7_0(5*7+ 6+1) = 0
    
    WIDTH26_7_0(6*7+ 0+1) = 1996939
    WIDTH26_7_0(6*7+ 1+1) = 2013570
    WIDTH26_7_0(6*7+ 2+1) = 16632
    WIDTH26_7_0(6*7+ 3+1) = 19
    WIDTH26_7_0(6*7+ 4+1) = 7
    WIDTH26_7_0(6*7+ 5+1) = 8
    WIDTH26_7_0(6*7+ 6+1) = 0
       
    
    '671
    WIDTH26_7_1(0*7+ 0+1) = 0
    WIDTH26_7_1(0*7+ 1+1) = 183063
    WIDTH26_7_1(0*7+ 2+1) = 28
    WIDTH26_7_1(0*7+ 3+1) = 17
    WIDTH26_7_1(0*7+ 4+1) = 7
    WIDTH26_7_1(0*7+ 5+1) = 6
    WIDTH26_7_1(0*7+ 6+1) = 1
            
    WIDTH26_7_1(1*7+ 0+1) = 183064
    WIDTH26_7_1(1*7+ 1+1) = 820063
    WIDTH26_7_1(1*7+ 2+1) = 728
    WIDTH26_7_1(1*7+ 3+1) = 13
    WIDTH26_7_1(1*7+ 4+1) = 7
    WIDTH26_7_1(1*7+ 5+1) = 5
    WIDTH26_7_1(1*7+ 6+1) = 1
            
    WIDTH26_7_1(2*7+ 0+1) = 820064
    WIDTH26_7_1(2*7+ 1+1) = 1000775
    WIDTH26_7_1(2*7+ 2+1) = 6454
    WIDTH26_7_1(2*7+ 3+1) = 9
    WIDTH26_7_1(2*7+ 4+1) = 7
    WIDTH26_7_1(2*7+ 5+1) = 3
    WIDTH26_7_1(2*7+ 6+1) = 1
    
    WIDTH26_7_1(3*7+ 0+1) = 1000776
    WIDTH26_7_1(3*7+ 1+1) = 1491020
    WIDTH26_7_1(3*7+ 2+1) = 203
    WIDTH26_7_1(3*7+ 3+1) = 15
    WIDTH26_7_1(3*7+ 4+1) = 7
    WIDTH26_7_1(3*7+ 5+1) = 5
    WIDTH26_7_1(3*7+ 6+1) = 1
            
    WIDTH26_7_1(4*7+ 0+1) = 1491021
    WIDTH26_7_1(4*7+ 1+1) = 1979844
    WIDTH26_7_1(4*7+ 2+1) = 2408
    WIDTH26_7_1(4*7+ 3+1) = 11
    WIDTH26_7_1(4*7+ 4+1) = 7
    WIDTH26_7_1(4*7+ 5+1) = 4
    WIDTH26_7_1(4*7+ 6+1) = 1
    
    WIDTH26_7_1(5*7+ 0+1) = 1979845
    WIDTH26_7_1(5*7+ 1+1) = 1996938
    WIDTH26_7_1(5*7+ 2+1) = 1
    WIDTH26_7_1(5*7+ 3+1) = 19
    WIDTH26_7_1(5*7+ 4+1) = 7
    WIDTH26_7_1(5*7+ 5+1) = 8
    WIDTH26_7_1(5*7+ 6+1) = 1
    
    WIDTH26_7_1(6*7+ 0+1) = 1996939
    WIDTH26_7_1(6*7+ 1+1) = 2013570
    WIDTH26_7_1(6*7+ 2+1) = 16632
    WIDTH26_7_1(6*7+ 3+1) = 7
    WIDTH26_7_1(6*7+ 4+1) = 7
    WIDTH26_7_1(6*7+ 5+1) = 1
    WIDTH26_7_1(6*7+ 6+1) = 1


    'CHECKSUMLIMITED
    CHECKSUMLIMITED(1) = 1
    CHECKSUMLIMITED(2) = 3
    CHECKSUMLIMITED(3) = 9
    CHECKSUMLIMITED(4) = 27
    CHECKSUMLIMITED(5) = 81
    CHECKSUMLIMITED(6) = 65
    CHECKSUMLIMITED(7) = 17
    CHECKSUMLIMITED(8) = 51
    CHECKSUMLIMITED(9) = 64
    CHECKSUMLIMITED(10) = 14
    CHECKSUMLIMITED(11) = 42
    CHECKSUMLIMITED(12) = 37
    CHECKSUMLIMITED(13) = 22
    CHECKSUMLIMITED(14) = 66
    
    CHECKSUMLIMITED(15) = 20
    CHECKSUMLIMITED(16) = 60
    CHECKSUMLIMITED(17) = 2
    CHECKSUMLIMITED(18) = 6
    CHECKSUMLIMITED(19) = 18
    CHECKSUMLIMITED(20) = 54
    CHECKSUMLIMITED(21) = 73
    CHECKSUMLIMITED(22) = 41
    CHECKSUMLIMITED(23) = 34
    CHECKSUMLIMITED(24) = 13
    CHECKSUMLIMITED(25) = 39
    CHECKSUMLIMITED(26) = 28
    CHECKSUMLIMITED(27) = 84
    CHECKSUMLIMITED(28) = 74    
    
    'GS1DATABARLIMITEDFINDERS
    GS1DATABARLIMITEDFINDERS(0+1) = "11111111113311"
    GS1DATABARLIMITEDFINDERS(1+1) = "11111111123211"
    GS1DATABARLIMITEDFINDERS(2+1) = "11111111133111"
    GS1DATABARLIMITEDFINDERS(3+1) = "11111112113211"
    GS1DATABARLIMITEDFINDERS(4+1) = "11111112123111"
    GS1DATABARLIMITEDFINDERS(5+1) = "11111113113111"
    GS1DATABARLIMITEDFINDERS(6+1) = "11111211113211"
    GS1DATABARLIMITEDFINDERS(7+1) = "11111211123111"
    GS1DATABARLIMITEDFINDERS(8+1) = "11111212113111"
    GS1DATABARLIMITEDFINDERS(9+1) = "11111311113111"
    GS1DATABARLIMITEDFINDERS(10+1) = "11121111113211"
    
    GS1DATABARLIMITEDFINDERS(11+1) = "11121111123111"
    GS1DATABARLIMITEDFINDERS(12+1) = "11121112113111"
    GS1DATABARLIMITEDFINDERS(13+1) = "11121211113111"
    GS1DATABARLIMITEDFINDERS(14+1) = "11131111113111"
    GS1DATABARLIMITEDFINDERS(15+1) = "12111111113211"
    GS1DATABARLIMITEDFINDERS(16+1) = "12111111123111"
    GS1DATABARLIMITEDFINDERS(17+1) = "12111112113111"
    GS1DATABARLIMITEDFINDERS(18+1) = "12111211113111"
    GS1DATABARLIMITEDFINDERS(19+1) = "12121111113111"
    GS1DATABARLIMITEDFINDERS(20+1) = "13111111113111"              
    
    GS1DATABARLIMITEDFINDERS(21+1) = "11111111212311"
    GS1DATABARLIMITEDFINDERS(22+1) = "11111111222211"
    GS1DATABARLIMITEDFINDERS(23+1) = "11111111232111"
    GS1DATABARLIMITEDFINDERS(24+1) = "11111112212211"
    GS1DATABARLIMITEDFINDERS(25+1) = "11111112222111"
    GS1DATABARLIMITEDFINDERS(26+1) = "11111113212111"
    GS1DATABARLIMITEDFINDERS(27+1) = "11111211212211"
    GS1DATABARLIMITEDFINDERS(28+1) = "11111211222111"
    GS1DATABARLIMITEDFINDERS(29+1) = "11111212212111"
    GS1DATABARLIMITEDFINDERS(30+1) = "11111311212111"              
    
    GS1DATABARLIMITEDFINDERS(31+1) = "11121111212211"
    GS1DATABARLIMITEDFINDERS(32+1) = "11121111222111"
    GS1DATABARLIMITEDFINDERS(33+1) = "11121112212111"
    GS1DATABARLIMITEDFINDERS(34+1) = "11121211212111"
    GS1DATABARLIMITEDFINDERS(35+1) = "11131111212111"
    GS1DATABARLIMITEDFINDERS(36+1) = "12111111212211"
    GS1DATABARLIMITEDFINDERS(37+1) = "12111111222111"
    GS1DATABARLIMITEDFINDERS(38+1) = "12111112212111"
    GS1DATABARLIMITEDFINDERS(39+1) = "12111211212111"
    GS1DATABARLIMITEDFINDERS(40+1) = "12121111212111"              
                
    GS1DATABARLIMITEDFINDERS(41+1) = "13111111212111"
    GS1DATABARLIMITEDFINDERS(42+1) = "11111111311311"
    GS1DATABARLIMITEDFINDERS(43+1) = "11111111321211"
    GS1DATABARLIMITEDFINDERS(44+1) = "11111112311211"
    GS1DATABARLIMITEDFINDERS(45+1) = "11121111311211"
    GS1DATABARLIMITEDFINDERS(46+1) = "12111111311211"
    GS1DATABARLIMITEDFINDERS(47+1) = "11111121112311"
    GS1DATABARLIMITEDFINDERS(48+1) = "11111121122211"
    GS1DATABARLIMITEDFINDERS(49+1) = "11111121132111"
    GS1DATABARLIMITEDFINDERS(50+1) = "11111122112211"              
                
    GS1DATABARLIMITEDFINDERS(51+1) = "11121121112211"
    GS1DATABARLIMITEDFINDERS(52+1) = "11121121122111"
    GS1DATABARLIMITEDFINDERS(53+1) = "11121122112111"
    GS1DATABARLIMITEDFINDERS(54+1) = "11121221112111"
    GS1DATABARLIMITEDFINDERS(55+1) = "11131121112111"
    GS1DATABARLIMITEDFINDERS(56+1) = "12111121112211"
    GS1DATABARLIMITEDFINDERS(57+1) = "12111121122111"
    GS1DATABARLIMITEDFINDERS(58+1) = "12121121112111"
    GS1DATABARLIMITEDFINDERS(59+1) = "11112111112311"
    GS1DATABARLIMITEDFINDERS(60+1) = "11112111122211"              
    
    GS1DATABARLIMITEDFINDERS(61+1) = "11112111132111"
    GS1DATABARLIMITEDFINDERS(62+1) = "11112112112211"
    GS1DATABARLIMITEDFINDERS(63+1) = "11112112122111"
    GS1DATABARLIMITEDFINDERS(64+1) = "11112211112211"
    GS1DATABARLIMITEDFINDERS(65+1) = "12112111112211"
    GS1DATABARLIMITEDFINDERS(66+1) = "12112111122111"
    GS1DATABARLIMITEDFINDERS(67+1) = "12112112112111"
    GS1DATABARLIMITEDFINDERS(68+1) = "12112211112111"
    GS1DATABARLIMITEDFINDERS(69+1) = "12122111112111"
    GS1DATABARLIMITEDFINDERS(70+1) = "13112111112111"              
                
    GS1DATABARLIMITEDFINDERS(71+1) = "11211111112311"
    GS1DATABARLIMITEDFINDERS(72+1) = "11211111122211"
    GS1DATABARLIMITEDFINDERS(73+1) = "11211111132111"
    GS1DATABARLIMITEDFINDERS(74+1) = "11211112112211"
    GS1DATABARLIMITEDFINDERS(75+1) = "11211112122111"
    GS1DATABARLIMITEDFINDERS(76+1) = "11211113112111"
    GS1DATABARLIMITEDFINDERS(77+1) = "11211211112211"
    GS1DATABARLIMITEDFINDERS(78+1) = "11211211122111"
    GS1DATABARLIMITEDFINDERS(79+1) = "11221111112211"
    GS1DATABARLIMITEDFINDERS(80+1) = "21111111122211"
    
    GS1DATABARLIMITEDFINDERS(81+1) = "21111111132111"
    GS1DATABARLIMITEDFINDERS(82+1) = "21111112112211"
    GS1DATABARLIMITEDFINDERS(83+1) = "21111112122111"
    GS1DATABARLIMITEDFINDERS(84+1) = "21111113112111"
    GS1DATABARLIMITEDFINDERS(85+1) = "21111211122111"
    GS1DATABARLIMITEDFINDERS(86+1) = "21111212112111"
    GS1DATABARLIMITEDFINDERS(87+1) = "21121111122111"
    GS1DATABARLIMITEDFINDERS(88+1) = "21111111221211"
    
    

    cd = ""
    result = ""
    
    
    'filtereddata = filterInput_GS1Databar14(data)
    filtereddata = ""
    datalength = Len(data)        
    barcodechar = ""
    For x = 0 To datalength - 1
  
        barcodechar = Mid(data, x + 1, 1)
        If (AscW(barcodechar) <= AscW("9")) And (AscW(barcodechar) >= AscW("0")) Then
             filtereddata =  filtereddata + barcodechar
        End If

    Next x

    filteredlength = Len(filtereddata)

    If filteredlength > 14 Then
            filtereddata = left(filtereddata, 14)
    End If
     
    If (filteredlength < 14) Then
        addcharlength = 14 - filteredlength - 1
        For x = 0 To addcharlength - 1
            filtereddata = "0" + filtereddata
        Next x
	Dim cdresult As String
	Dim cv As number
	Dim multi As number
	Dim total As number
	
    	cv = 0
    	multi = 3
    	total = 0
    	cdresult = ""
    
    	For x = 1 To Len(filtereddata)
          If (Asc(Mid(filtereddata, x, 1)) - 48 <= 9 And Asc(Mid(filtereddata, x, 1)) - 48 >= 0) Then
            	cdresult = cdresult + Mid(filtereddata, x, 1)
          End If
    	Next x

    	For x = 1 To Len(cdresult)
          cv = Asc(Mid(cdresult, x, 1)) - 48
          total = total + cv * multi
          If (multi = 3) Then
            multi = 1
          Else
            multi = 3
          End If
            
    	Next x
    
        Dim modresult As number
        modresult = total Mod 10
        If (modresult <> 0) Then
            modresult = 10 - modresult
        End If
    
        cdresult = CStr(modresult,0)
        filtereddata = filtereddata + cdresult

    End If
    
       
    filtereddata = left(filtereddata, 13) 'Exclude Check Digit
    humanText = "(01)" + filtereddata
    filteredlength = Len(filtereddata)
    
    valuez = 0
    For x = 0 To (filteredlength - 1)
        tempChar = Mid(filtereddata, x + 1, 1)
        tempasc = AscW(tempChar)
        valuez = tempasc - 48 + (valuez * 10)
    Next x
    
    
    sumx = 0
    leftz = valuez /2013571
    
    'Check
    leftx = Int(leftz)
    'rightz = valuez - leftx * 2013571
    rightx = valuez mod 2013571
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1WLimited(leftx, 1, 26, widthsodd)
    For x = 0 To 6
            
                If (leftx >= WIDTH26_7_1(x*7+0+1) And leftx <= WIDTH26_7_1(x*7+1+1)) Then
                        'retval = getGS1widths(Int((leftx - WIDTH26_7_1(x*7+0+1)) / WIDTH26_7_1(x*7+2+1)), WIDTH26_7_1(x*7+3+1), WIDTH26_7_1(x*7+4+1), WIDTH26_7_1(x*7+5+1), WIDTH26_7_1(x*7+6+1), widths)
'''''''
                            valpp = Int((leftx - WIDTH26_7_1(x*7+0+1)) / WIDTH26_7_1(x*7+2+1))
                        	npp  = WIDTH26_7_1(x*7+3+1)
                        	elements  = WIDTH26_7_1(x*7+4+1) 
                        	maxWidth = WIDTH26_7_1(x*7+5+1) 
                        	noNarrow = WIDTH26_7_1(x*7+6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                
                                'Bitwise OR
                                'narrowMask = narrowMask Or tempMask                                
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31
        
                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then 'or                                           
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum                                
                        
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        

                                            End If




                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))

                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31
        
                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    'And (Not 
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum                                

                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthsodd(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthsodd(baryy+1) = npp
    
'''''''
                             
                End If
    Next x
   


    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1WLimited(leftx, 0, 26, widthseven)
    For x = 0 To 6
                If (leftx >= WIDTH26_7_0(x*7+0+1) And leftx <= WIDTH26_7_0(x*7+1+1)) Then
                    'retval = getGS1widths(Int((leftx - WIDTH26_7_0(x*7+0+1)) Mod WIDTH26_7_0(x*7+2+1)), WIDTH26_7_0(x*7+3+1), WIDTH26_7_0(x*7+4+1), WIDTH26_7_0(x*7+5+1), WIDTH26_7_0(x*7+6+1), widths)
'''''''
                            valpp = Int((leftx - WIDTH26_7_0(x*7+0+1)) Mod WIDTH26_7_0(x*7+2+1))
                        	npp  = WIDTH26_7_0(x*7+3+1)
                        	elements  = WIDTH26_7_0(x*7+4+1) 
                        	maxWidth = WIDTH26_7_0(x*7+5+1) 
                        	noNarrow = WIDTH26_7_0(x*7+6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                
                                'Bitwise OR
                                'narrowMask = narrowMask Or tempMask                                
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31
        
                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then 'or                                           
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum                                
                        
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        

                                            End If




                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))

                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31
        
                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    'And (Not 
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum                                

                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthseven(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthseven(baryy+1) = npp

'''''''
                End If
    Next x


    For x = 0 To 6
        
        resultsleftodd(x+1) = widthsodd(x+1)
        resultslefteven(x+1) = widthseven(x+1)
        sumx = sumx + CHECKSUMLIMITED(0*14 + (x * 2) + 1) * widthsodd(x+1) + CHECKSUMLIMITED(0*14+ (x * 2) + 1 + 1) * widthseven(x+1)
        
    Next x
  
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''        
    'retval = getGS1WLimited(rightx, 1, 26, widthsodd)
     For x = 0 To 6
            
                If (rightx >= WIDTH26_7_1(x*7+0+1) And rightx <= WIDTH26_7_1(x*7+1+1)) Then
                    'retval = getGS1widths(Int((rightx - WIDTH26_7_1(x*7+0+1)) / WIDTH26_7_1(x*7+2+1)), WIDTH26_7_1(x*7+3+1), WIDTH26_7_1(x*7+4+1), WIDTH26_7_1(x*7+5+1), WIDTH26_7_1(x*7+6+1), widths)
'''''''''
                            valpp = Int((rightx - WIDTH26_7_1(x*7+0+1)) / WIDTH26_7_1(x*7+2+1))
                        	npp  = WIDTH26_7_1(x*7+3+1)
                        	elements  = WIDTH26_7_1(x*7+4+1) 
                        	maxWidth = WIDTH26_7_1(x*7+5+1) 
                        	noNarrow = WIDTH26_7_1(x*7+6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                
                                'Bitwise OR
                                'narrowMask = narrowMask Or tempMask                                
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31
        
                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then 'or                                           
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum                                
                        
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        

                                            End If




                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))

                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31
        
                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    'And (Not 
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum                                

                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthsodd(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthsodd(baryy+1) = npp

'''''''''                             
                End If
     Next x

    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'retval = getGS1WLimited(rightx, 0, 26, widthseven)
    For x = 0 To 6

                If (rightx >= WIDTH26_7_0(x*7+0+1) And rightx <= WIDTH26_7_0(x*7+1+1)) Then
                    'retval = getGS1widths(Int((rightx - WIDTH26_7_0(x*7+0+1)) Mod WIDTH26_7_0(x*7+2+1)), WIDTH26_7_0(x*7+3+1), WIDTH26_7_0(x*7+4+1), WIDTH26_7_0(x*7+5+1), WIDTH26_7_0(x*7+6+1), widths)
''''''''''''
                            valpp = Int((rightx - WIDTH26_7_0(x*7+0+1)) Mod WIDTH26_7_0(x*7+2+1))
                        	npp  = WIDTH26_7_0(x*7+3+1)
                        	elements  = WIDTH26_7_0(x*7+4+1) 
                        	maxWidth = WIDTH26_7_0(x*7+5+1) 
                        	noNarrow = WIDTH26_7_0(x*7+6+1)
               
                            narrowMask = 0
                            For baryy = 0 To (elements - 1 - 1)
    
                                'for (elmWidth = 1, narrowMask |= (1<<baryy);; elmWidth++, narrowMask &= ~(1<<baryy))
                                elmWidth = 1
                                tempMask = 2 ^ baryy
                                
                                'Bitwise OR
                                'narrowMask = narrowMask Or tempMask                                
                                maskdiv1 = narrowMask
                                maskdiv2 = tempMask
                                masksum = 0
                                For mz = 0 to 31
        
                                    maskval1 = maskdiv1 mod 2
                                    maskval2 = maskdiv2 mod 2

                                    if ((maskval1=1) or (maskval2=1)) then 'or                                           
                                           masksum =  masksum  +  2^mz
                                    end if

                                    maskdiv1 = Int(maskdiv1 /2) 
                                    maskdiv2 = Int(maskdiv2 /2)

                                Next mz        
                                narrowMask = masksum                                
                        
            
                                Do While (1 > 0)
        
                                            ' get all combinations
                                            'subVal = combins__GS1Databar14(npp - elmWidth - 1, elements - bar - 2)
                                            nz = npp - elmWidth - 1
                                            rz = elements - baryy - 2
                                            If (nz - rz > rz) Then
        
                                                minDenomz = rz
                                                maxDenomz = nz - rz
        
                                            Else
                                                minDenomz = nz - rz
                                                maxDenomz = rz
                                            End If
        
        
                                            valz = 1
                                            jz = 1
                                            For iz = nz To maxDenomz + 1 Step -1
        
                                                valz = valz * iz
                                                If (jz <= minDenomz) Then
                                                    valz = valz / jz
                                                    jz = jz + 1
                                                End If
            
                                            Next iz
                                            Do While (jz <= minDenomz)
            
                                                valz = valz / jz
                                                jz = jz + 1
            
                                            Loop
                                            subVal = valz


                                            ' less combinations with no single module element
                                            'if ((!noNarrow) and (narrowMask==0) and
                                            If ((noNarrow = 0) And (narrowMask = 0) And (npp - elmWidth - (elements - baryy - 1) >= elements - baryy - 1)) Then
                                                'subVal = subVal - combins__GS1Databar14(npp - elmWidth - (elements - bar), elements - bar - 2)
                                                nz = npp - elmWidth - (elements - baryy)
                                                rz = elements - baryy - 2

                                                If (nz - rz > rz) Then
        
                                                    minDenomz = rz
                                                    maxDenomz = nz - rz
        
                                                Else
                                                    minDenomz = nz - rz
                                                    maxDenomz = rz
                                                End If
        
        
                                                valz = 1
                                                jz = 1
                                                For iz = nz To maxDenomz + 1 Step -1
        
                                                    valz = valz * iz
                                                    If (jz <= minDenomz) Then
                                                        valz = valz / jz
                                                        jz = jz + 1
                                                    End If
            
                                                Next iz
                                                Do While (jz <= minDenomz)
            
                                                    valz = valz / jz
                                                    jz = jz + 1
            
                                                Loop
                                                subVal = subVal - valz 
        

                                            End If




                                            ' less combinations with elements > maxval
                                            If (elements - baryy - 1 > 1) Then
                    
                                                'for (mxwElement = npp-elmWidth-(elements-baryy-2);  mxwElement > maxWidth; mxwElement--)
                                                lessVal = 0
                                                mxwElement = npp - elmWidth - (elements - baryy - 2)
                                                Do While (mxwElement > maxWidth)
                                                
                                                        'lessVal = lessVal + combins__GS1Databar14(npp - elmWidth - mxwElement - 1, elements - bar - 3)
                                                        nz = npp - elmWidth - mxwElement - 1
                                                        rz = elements - baryy - 3

                                                        If (nz - rz > rz) Then
        
                                                            minDenomz = rz
                                                            maxDenomz = nz - rz
        
                                                        Else
                                                            minDenomz = nz - rz
                                                            maxDenomz = rz
                                                        End If        
        
                                                        valz = 1
                                                        jz = 1
                                                        For iz = nz To maxDenomz + 1 Step -1
        
                                                            valz = valz * iz
                                                            If (jz <= minDenomz) Then
                                                                valz = valz / jz
                                                                jz = jz + 1
                                                            End If
            
                                                        Next iz
                                                        Do While (jz <= minDenomz)
            
                                                            valz = valz / jz
                                                            jz = jz + 1
            
                                                        Loop                            
                                                        lessVal = lessVal + valz 

                                                        mxwElement = mxwElement - 1
                        
                                                    Loop
                                                    'to return        
                                                    subVal = subVal - (lessVal * (elements - 1 - baryy))
                            
                                            
                                            ElseIf (npp - elmWidth > maxWidth) Then
                    
                                                subVal = subVal - 1
                        
                                            End If
                                            valpp = valpp - subVal
                                            If (valpp < 0) Then
                                                Exit Do
                                            End If
                    
                    
                                            elmWidth = elmWidth + 1
                                            tempMask = 2 ^ baryy
                                            'narrowMask = narrowMask And (Not (tempMask))

                                            'Bitwise Operations                                            
                                            maskdiv1 = narrowMask
                                            maskdiv2 = tempMask
                                            masksum = 0
                                            For mz = 0 to 31
        
                                                maskval1 = maskdiv1 mod 2
                                                maskval2 = maskdiv2 mod 2

                                                if ((maskval1=1) and (maskval2=0)) then    'And (Not 
                                                       masksum =  masksum  +  2^mz
                                                end if

                                                maskdiv1 = Int(maskdiv1 /2) 
                                                maskdiv2 = Int(maskdiv2 /2)

                                            Next mz        
                                            narrowMask = masksum                                

                                Loop
            
                                valpp = valpp + subVal
                                npp = npp - elmWidth
                                widthseven(baryy+1) = elmWidth        
    
                            Next baryy    
                            widthseven(baryy+1) = npp
''''''''''''
                End If
    Next x


    For x = 0 To 6
        
        resultsrightodd(x+1) = widthsodd(x+1)
        resultsrighteven(x+1) = widthseven(x+1)
        sumx = sumx + CHECKSUMLIMITED(1*14+ (x * 2)+1) * widthsodd(x+1) + CHECKSUMLIMITED(1*14+ (x * 2) + 1+1) * widthseven(x+1)
        
    Next x
    
    checksumval = sumx Mod 89            

    
    result = "11"  'Left Guard
    
    For x = 0 To 6 'Data Left
        result = result + ChrW(Int(resultsleftodd(x+1) + 48)) + ChrW(Int(resultslefteven(x+1) + 48))
    Next x
    
    result = result + GS1DATABARLIMITEDFINDERS(checksumval+1)

    For x = 0 To 6 'Data Right
        result = result + ChrW(Int(resultsrightodd(x+1) + 48)) + ChrW(Int(resultsrighteven(x+1) + 48))
    Next x
    result = result + "11" 'Right Guard 
    
    
    'Convert to White Black White Black
    bwresult = ""
    black = 0
    For x = 0 To Len(result) - 1
    
        If (black = 0) Then
        
            bwresult = bwresult + ChrW(AscW(Mid(result, x + 1, 1)) + 48)
            black = 1
        
        Else
        
            bwresult = bwresult + ChrW(AscW(Mid(result, x + 1, 1)) + 16)
            black = 0
        
        End If

    
    Next x


    If ((valuez<0) Or (valuez>1999999999999)) Then

	 'errorFlag =1
	 bwresult = ""

    End if		

    
    formula = bwresult

' ===================================================================================
' SSCC

  Dim input as string
  'Make changes to input or link it to a data source
  input = "12345678"
  Dim data as string
  Dim x as number
  
  data=input  

  Dim result As String
  Dim ssccresult as String
  For x = 1 To Len(data)
       If (Asc(Mid(data, x, 1)) - 48 <= 9 And Asc(Mid(data, x, 1)) - 48 >= 0) Then
           result = result + Mid(data, x, 1)
       End If
  Next x
    
  If (Len(result) = 0) Then
        result = ""
  Else
        If (Len(result) > 17) Then
            result = Left(result, 17)
        End If
        If (Len(result) < 17) Then
            For x = 1 To (17 - Len(result))
                result = "0" + result
            Next x
        End If
  End If

  ssccresult=result

  Dim multi As number
  Dim total As number
  Dim cv As number
  
  data=result  
  If (Len(data) = 0) Then
      result = ""
  Else
    cv = 0
    multi = 3
    total = 0
    result = ""
    
    For x = 1 To Len(data)
        If (Asc(Mid(data, x, 1)) - 48 <= 9 And Asc(Mid(data, x, 1)) - 48 >= 0) Then
            result = result + Mid(data, x, 1)
        End If
    Next x

    For x = 1 To Len(result)
        cv = Asc(Mid(result, x, 1)) - 48
        total = total + cv * multi
        If (multi = 3) Then
            multi = 1
        Else
            multi = 3
        End If
            
    Next x
    
    Dim modresult As number
    modresult = total Mod 10
    If (modresult <> 0) Then
        modresult = 10 - modresult
    End If
    
    ssccresult=ssccresult+CStr(modresult,0)
  End If

  formula = ssccresult

' ===================================================================================
' GTIN
  Dim input as string
  'Make changes to input or link it to a data source
  input = "12345678"
  Dim data as string
  Dim x as number
  
  data=input  

  Dim result As String
  Dim gtinresult as String
  For x = 1 To Len(data)
       If (Asc(Mid(data, x, 1)) - 48 <= 9 And Asc(Mid(data, x, 1)) - 48 >= 0) Then
           result = result + Mid(data, x, 1)
       End If
  Next x
    
  If (Len(result) = 0) Then
        result = ""
  Else
        If (Len(result) > 13) Then
            result = Left(result, 13)
        End If
        If (Len(result) < 13) Then
            For x = 1 To (13 - Len(result))
                result = "0" + result
            Next x
        End If
  End If

  gtinresult=result

  Dim multi As number
  Dim total As number
  Dim cv As number
  
  data=result  
  If (Len(data) = 0) Then
      result = ""
  Else
    cv = 0
    multi = 3
    total = 0
    result = ""
    
    For x = 1 To Len(data)
        If (Asc(Mid(data, x, 1)) - 48 <= 9 And Asc(Mid(data, x, 1)) - 48 >= 0) Then
            result = result + Mid(data, x, 1)
        End If
    Next x

    For x = 1 To Len(result)
        cv = Asc(Mid(result, x, 1)) - 48
        total = total + cv * multi
        If (multi = 3) Then
            multi = 1
        Else
            multi = 3
        End If
            
    Next x
    
    Dim modresult As number
    modresult = total Mod 10
    If (modresult <> 0) Then
        modresult = 10 - modresult
    End If
    
    gtinresult=gtinresult+CStr(modresult,0)
  End If

  formula = gtinresult

' ===================================================================================
' MOD_10

  Dim input as string
  'Make changes to input or link it to a data source
  input = "00000000012345678"

  Dim result As String
  Dim multi As number
  Dim total As number
  Dim cv As number
  Dim data as string
  Dim x as number
  
  data=input  
  If (Len(data) = 0) Then
      result = ""
  Else
    cv = 0
    multi = 3
    total = 0
    result = ""
    
    For x = 1 To Len(data)
        If (Asc(Mid(data, x, 1)) - 48 <= 9 And Asc(Mid(data, x, 1)) - 48 >= 0) Then
            result = result + Mid(data, x, 1)
        End If
    Next x

    For x = 1 To Len(result)
        cv = Asc(Mid(result, x, 1)) - 48
        total = total + cv * multi
        If (multi = 3) Then
            multi = 1
        Else
            multi = 3
        End If
            
    Next x
    
    Dim modresult As number
    modresult = total Mod 10
    If (modresult <> 0) Then
        modresult = 10 - modresult
    End If
    
    result = CStr(modresult,0)
  End If
  formula=result
